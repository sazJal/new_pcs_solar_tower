   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "main.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_GPIO_SetOutputLevel,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_GPIO_SetOutputLevel:
  23              	.LFB48:
  24              	 .file 1 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc/xmc_gpio.h"
   1:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
   2:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @file xmc_gpio.h
   3:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @date 2015-06-20
   4:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   5:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @cond
   6:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
   7:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
   9:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * All rights reserved.                        
  11:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                             
  12:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * following conditions are met:   
  14:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  15:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer.                        
  17:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  18:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  21:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  24:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *                                                                              
  32:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  35:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  36:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Change History
  37:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * --------------
  38:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  39:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-02-20:
  40:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Initial draft<br>
  41:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Documentation improved <br>
  42:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *      
  43:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 2015-06-20:
  44:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  45:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  46:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @endcond
  47:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  48:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  49:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  50:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #ifndef XMC_GPIO_H
  51:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_H
  52:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  53:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  54:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * HEADER FILES
  55:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  56:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  57:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc_common.h"
  58:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  59:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  60:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup XMClib XMC Peripheral Library
  61:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @{
  62:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  63:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  64:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
  65:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @addtogroup GPIO
  66:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @brief General Purpose Input Output (GPIO) driver for the XMC microcontroller family.
  67:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  68:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * GPIO driver provide a generic and very flexible software interface for all standard digital I/O 
  69:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Each port slice has individual interfaces for the operation as General Purpose I/O and it furthe
  70:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * connectivity to the on-chip periphery and the control for the pad characteristics. 
  71:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  72:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * The driver is divided into Input and Output mode.
  73:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  74:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Input mode features:
  75:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Configuration structure XMC_GPIO_CONFIG_t and initialization function XMC_GPIO_Init()
  76:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of weak pull-up or pull-down device. Configuration structure XMC_GPIO_MO
  77:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
  78:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of input hysteresis. XMC_GPIO_SetInputHysteresis()
  79:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  80:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  81:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * 
  82:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Output mode features:
  83:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of push pull/open drain and Alternate output. Configuration structure XM
  84:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
  85:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of pad driver strength. Configuration structure XMC_GPIO_OUTPUT_STRENGTH
  86:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
  87:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  88:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * -# Allows the selection of initial output level. Configuration structure XMC_GPIO_OUTPUT_LEVEL_t
  89:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
  90:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *@{
  91:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
  92:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  
  93:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
  94:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * MACROS
  95:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
  96:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
  97:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Pos PORT0_IOCR0_PC0_Pos
  98:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Msk PORT0_IOCR0_PC0_Msk
  99:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 100:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define PORT_IOCR_PC_Size 				(8U)
 101:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 											
 102:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 103:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_OUTPUT_LEVEL(level) ((level == XMC_GPIO_OUTPUT_LEVEL_LOW) || \
 104:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****                                             (level == XMC_GPIO_OUTPUT_LEVEL_HIGH))
 105:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 106:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #define XMC_GPIO_CHECK_HWCTRL(hwctrl) ((hwctrl == XMC_GPIO_HWCTRL_DISABLED) || \
 107:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL1) || \
 108:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****                                        (hwctrl == XMC_GPIO_HWCTRL_PERIPHERAL2))                    
 109:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****                                             
 110:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 111:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * ENUMS
 112:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 113:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 114:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 115:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 116:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines output level of a pin. Use type \a XMC_GPIO_OUTPUT_LEVEL_t for this enum.
 117:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 118:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_OUTPUT_LEVEL
 119:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 120:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_LOW  = 0x10000U, /**<  Reset bit */
 121:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_OUTPUT_LEVEL_HIGH = 0x1U, 	/**< Set bit  */
 122:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_OUTPUT_LEVEL_t;
 123:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 124:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 125:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Defines direct hardware control characteristics of the pin . Use type \a XMC_GPIO_HWCTRL_t for t
 126:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 127:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** typedef enum XMC_GPIO_HWCTRL
 128:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** {
 129:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_DISABLED     = 0x0U, /**<  Software control only */
 130:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL1  = 0x1U, /**<  HWI0/HWO0 control path can override the software confi
 131:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_GPIO_HWCTRL_PERIPHERAL2  = 0x2U  /**<  HWI1/HWO1 control path can override the software confi
 132:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** } XMC_GPIO_HWCTRL_t;
 133:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 134:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 135:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * DEVICE FAMILY EXTENSIONS
 136:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 137:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 138:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  #if UC_FAMILY == XMC1
 139:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc1_gpio.h"
 140:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #elif UC_FAMILY == XMC4
 141:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #include "xmc4_gpio.h"
 142:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #else
 143:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #error "xmc_gpio.h: family device not supported"
 144:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 145:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 146:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**************************************************************************************************
 147:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * API PROTOTYPES
 148:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  **************************************************************************************************
 149:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 150:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #ifdef __cplusplus
 151:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** extern "C" {
 152:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** #endif
 153:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 154:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 155:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 156:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	  Constant pointer pointing to GPIO port, to access port registers like Pn_OUT,Pn_O
 157:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	  Port pin number.
 158:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  config GPIO configuration data structure. Refer data structure @ref XMC_GPIO_CONFIG_t fo
 159:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 160:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 161:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 162:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 163:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC1
 164:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,hysteresis, push pull
 165:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for a selected \a po
 166:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \a config provides selected I/O settings. It configures hardware registers Pn_IOCR,Pn_OUT, Pn_OM
 167:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 168:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \if XMC4
 169:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Initializes input / output mode settings like, pull up / pull down devices,push pull /open drain
 170:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Also configures alternate function outputs and clears hardware port control for selected \a port
 171:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * It configures hardware registers Pn_IOCR,Pn_OUT,Pn_OMR,Pn_PDISC and Pn_PDR.\n
 172:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \endif
 173:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 174:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 175:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 176:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 177:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 178:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * This API is called in definition of DAVE_init by code generation and therefore should not be exp
 179:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * for the normal operation. Use other APIs only after DAVE_init is called successfully (returns DA
 180:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 181:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 182:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 183:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 184:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  
 185:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_Init(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_CONFIG_t *const c
 186:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  
 187:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 188:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 189:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	Constant pointer pointing to GPIO port, to access hardware register Pn_IOCR.
 190:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	Port pin number.
 191:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  mode input / output functionality selection. Refer @ref XMC_GPIO_MODE_t for valid values
 192:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 193:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 194:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 195:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 196:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Sets digital input and output driver functionality and characteristics of a GPIO port pin. It co
 197:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * registers Pn_IOCR. \a mode is initially configured during initialization in XMC_GPIO_Init(). Cal
 198:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * the port direction functionality as needed later in the program.
 199:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 200:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 201:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  None
 202:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 203:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 204:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 205:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** void XMC_GPIO_SetMode(XMC_GPIO_PORT_t *const port, const uint8_t pin, const XMC_GPIO_MODE_t mode);
 206:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 207:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 208:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** /**
 209:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 210:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  port	 Constant pointer pointing to GPIO port, to access hardware register Pn_OMR.
 211:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  pin	 Port pin number.
 212:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @param  level output level selection. Refer @ref XMC_GPIO_OUTPUT_LEVEL_t for valid values.
 213:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 214:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * @return None
 215:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 216:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Description:</b><br>
 217:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Set port pin output level to high or low.It configures hardware registers Pn_OMR.\a level is ini
 218:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * configured during initialization in XMC_GPIO_Init(). Call this API to alter output level as need
 219:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 220:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Related APIs:</b><BR>
 221:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *  XMC_GPIO_SetOutputHigh(), XMC_GPIO_SetOutputLow().
 222:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 223:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * \par<b>Note:</b><br>
 224:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  * Prior to this api, user has to configure port pin to output mode using XMC_GPIO_SetMode().
 225:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  *
 226:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****  */
 227:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 228:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** 
 229:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** __STATIC_INLINE void XMC_GPIO_SetOutputLevel(XMC_GPIO_PORT_t *const port, const uint8_t pin, const 
 230:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** {
  25              	 .loc 1 230 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 84B0     	 sub sp,sp,#16
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 24
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 F860     	 str r0,[r7,#12]
  39 0008 7A60     	 str r2,[r7,#4]
  40 000a 0B23     	 mov r3,#11
  41 000c FB18     	 add r3,r7,r3
  42 000e 0A1C     	 add r2,r1,#0
  43 0010 1A70     	 strb r2,[r3]
 231:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid port", XMC_GPIO_CHECK_OUTPUT_PORT(port));
 232:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   XMC_ASSERT("XMC_GPIO_SetOutputLevel: Invalid output level", XMC_GPIO_CHECK_OUTPUT_LEVEL(level));
 233:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   
 234:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h ****   port->OMR = (uint32_t)level << pin;
  44              	 .loc 1 234 0
  45 0012 0B23     	 mov r3,#11
  46 0014 FB18     	 add r3,r7,r3
  47 0016 1B78     	 ldrb r3,[r3]
  48 0018 7A68     	 ldr r2,[r7,#4]
  49 001a 9A40     	 lsl r2,r2,r3
  50 001c FB68     	 ldr r3,[r7,#12]
  51 001e 5A60     	 str r2,[r3,#4]
 235:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_gpio.h **** }
  52              	 .loc 1 235 0
  53 0020 BD46     	 mov sp,r7
  54 0022 04B0     	 add sp,sp,#16
  55              	 
  56 0024 80BD     	 pop {r7,pc}
  57              	 .cfi_endproc
  58              	.LFE48:
  60              	 .comm tx_config,8,4
  61              	 .comm rx_config,8,4
  62              	 .comm uart_config,12,4
  63              	 .comm pcs_button_config,8,4
  64              	 .comm CAN0_txd_config,8,4
  65              	 .comm CAN0_rxd_config,8,4
  66              	 .comm can_baud,12,4
  67              	 .comm msgObjToPCS,32,8
  68              	 .comm msgObjFromPCS,32,8
  69              	 .comm tx_genix_config,8,4
  70              	 .comm rx_genix_config,8,4
  71              	 .comm uart_genix_config,12,4
  72              	 .comm led,8,4
  73              	 .comm button,8,4
  74              	 .comm dipswitch_config,8,4
  75              	 .comm g_global_handle,24,4
  76              	 .comm g_group_handle,20,4
  77              	 .comm g_queue_handle,12,4
  78              	 .comm g_queue_entry,16,4
  79              	 .comm g_channel_handle,64,4
  80              	 .comm g_result_handle,16,4
  81              	 .comm adc_io,8,4
  82              	 .comm relay_KMP,8,4
  83              	 .comm relay_KMF,8,4
  84              	 .comm relay_KDSG,8,4
  85              	 .comm relay_KBAT,8,4
  86              	 .comm SLICE0_config,8,4
  87              	 .comm SLICE1_config,8,4
  88              	 .comm SLICE2_config,8,4
  89              	 .comm sysTickParamHandle,6,4
  90              	 .comm pcsBmsStatus,4,4
  91              	 .comm bmsSensor,8,4
  92              	 .comm pcsVoltages,8,4
  93              	 .comm pcsCurrents,8,4
  94              	 .comm pcsPowers,8,4
  95              	 .comm pcsMiscs,4,4
  96              	 .comm pcsSystemStatus,5,4
  97              	 .comm pcsDCgridStatus,4,4
  98              	 .comm pcsACinvStatus,4,4
  99              	 .comm pcsPVconvStatus,4,4
 100              	 .comm pcsBatconvStatus,4,4
 101              	 .comm data_group,80,4
 102              	 .comm buffptr,4,4
 103              	 .comm espBuffer,80,4
 104              	 .comm pduSensorRaw,8,4
 105              	 .comm pduSensorAvg,20,4
 106              	 .comm pduSensor,16,4
 107              	 .comm genix_data,8,4
 108              	 .comm mcu_state,1,1
 109              	 .comm controlFlag,6,4
 110              	 .global count
 111 0026 C046     	 .section .bss.count,"aw",%nobits
 112              	 .align 1
 115              	count:
 116 0000 0000     	 .space 2
 117              	 .section .text.main,"ax",%progbits
 118              	 .align 2
 119              	 .global main
 120              	 .code 16
 121              	 .thumb_func
 123              	main:
 124              	.LFB380:
 125              	 .file 2 "../main.c"
   1:../main.c     **** /*
   2:../main.c     ****  * main.c
   3:../main.c     ****  *
   4:../main.c     ****  *  Created on: 2022 Mar 03 10:25:10
   5:../main.c     ****  *  Author: Lenovo
   6:../main.c     ****  */
   7:../main.c     **** 
   8:../main.c     **** 
   9:../main.c     **** 
  10:../main.c     **** #include <xmc_common.h>
  11:../main.c     **** #include "variables.h"
  12:../main.c     **** #include "operation.h"
  13:../main.c     **** 
  14:../main.c     **** #define COUNT_MAX 1000
  15:../main.c     **** uint16_t count = 0;
  16:../main.c     **** 
  17:../main.c     **** /**
  18:../main.c     **** 
  19:../main.c     ****  * @brief main() - Application entry point
  20:../main.c     ****  *
  21:../main.c     ****  * <b>Details of function</b><br>
  22:../main.c     ****  * This routine is the application entry point. It is invoked by the device startup code. 
  23:../main.c     ****  */
  24:../main.c     **** 
  25:../main.c     **** int main(void)
  26:../main.c     **** {
 126              	 .loc 2 26 0
 127              	 .cfi_startproc
 128 0000 90B5     	 push {r4,r7,lr}
 129              	.LCFI3:
 130              	 .cfi_def_cfa_offset 12
 131              	 .cfi_offset 4,-12
 132              	 .cfi_offset 7,-8
 133              	 .cfi_offset 14,-4
 134 0002 83B0     	 sub sp,sp,#12
 135              	.LCFI4:
 136              	 .cfi_def_cfa_offset 24
 137 0004 02AF     	 add r7,sp,#8
 138              	.LCFI5:
 139              	 .cfi_def_cfa 7,16
  27:../main.c     ****   /* Create 1 kHz tick and Initialize systick handler variable */
  28:../main.c     ****   sysTickParamHandle.enable 	= false;
 140              	 .loc 2 28 0
 141 0006 944B     	 ldr r3,.L14
 142 0008 0022     	 mov r2,#0
 143 000a 1A70     	 strb r2,[r3]
  29:../main.c     ****   sysTickParamHandle.isTimeOut 	= false;
 144              	 .loc 2 29 0
 145 000c 924B     	 ldr r3,.L14
 146 000e 0022     	 mov r2,#0
 147 0010 1A71     	 strb r2,[r3,#4]
  30:../main.c     ****   sysTickParamHandle.count		= 0;
 148              	 .loc 2 30 0
 149 0012 914B     	 ldr r3,.L14
 150 0014 0022     	 mov r2,#0
 151 0016 5A80     	 strh r2,[r3,#2]
  31:../main.c     **** 
  32:../main.c     ****   /* Initialize Button, LED, and Dipswitches */
  33:../main.c     ****   GPIO_Init();
 152              	 .loc 2 33 0
 153 0018 FFF7FEFF 	 bl GPIO_Init
  34:../main.c     **** 
  35:../main.c     ****   /* Initialize ESP32 */
  36:../main.c     ****   ESP32_ConnectionInit();
 154              	 .loc 2 36 0
 155 001c FFF7FEFF 	 bl ESP32_ConnectionInit
  37:../main.c     **** 
  38:../main.c     ****   /* Initialization for PCS Communication */
  39:../main.c     ****   PCS_ConnectionInit();
 156              	 .loc 2 39 0
 157 0020 FFF7FEFF 	 bl PCS_ConnectionInit
  40:../main.c     **** 
  41:../main.c     ****   /* Initialization for Battery Communication */
  42:../main.c     ****   GENIX_ConnectionInit();
 158              	 .loc 2 42 0
 159 0024 FFF7FEFF 	 bl GENIX_ConnectionInit
  43:../main.c     **** 
  44:../main.c     ****   /* Initialization for Power Distribution Control Peripheral */
  45:../main.c     ****   PDU_Relay_Init();
 160              	 .loc 2 45 0
 161 0028 FFF7FEFF 	 bl PDU_Relay_Init
  46:../main.c     ****   PDU_SensorADC_Init();
 162              	 .loc 2 46 0
 163 002c FFF7FEFF 	 bl PDU_SensorADC_Init
  47:../main.c     **** 
  48:../main.c     ****   /* Setup Timer */
  49:../main.c     ****   TIMING_TimerInit();
 164              	 .loc 2 49 0
 165 0030 FFF7FEFF 	 bl TIMING_TimerInit
  50:../main.c     **** 
  51:../main.c     ****   /* PCS Command Initialization */
  52:../main.c     ****   mcu_state = OP_POWERUP;
 166              	 .loc 2 52 0
 167 0034 894B     	 ldr r3,.L14+4
 168 0036 0022     	 mov r2,#0
 169 0038 1A70     	 strb r2,[r3]
  53:../main.c     **** 
  54:../main.c     ****   controlFlag.isAuto_mode 			 = false;
 170              	 .loc 2 54 0
 171 003a 894B     	 ldr r3,.L14+8
 172 003c 0022     	 mov r2,#0
 173 003e 9A70     	 strb r2,[r3,#2]
  55:../main.c     ****   controlFlag.isBypass_power_mode 	 = false;
 174              	 .loc 2 55 0
 175 0040 874B     	 ldr r3,.L14+8
 176 0042 0022     	 mov r2,#0
 177 0044 DA70     	 strb r2,[r3,#3]
  56:../main.c     ****   controlFlag.isChecking_peripheral  = false;
 178              	 .loc 2 56 0
 179 0046 864B     	 ldr r3,.L14+8
 180 0048 0022     	 mov r2,#0
 181 004a 5A71     	 strb r2,[r3,#5]
  57:../main.c     ****   controlFlag.isForced_shutting_down = false;
 182              	 .loc 2 57 0
 183 004c 844B     	 ldr r3,.L14+8
 184 004e 0022     	 mov r2,#0
 185 0050 1A71     	 strb r2,[r3,#4]
  58:../main.c     ****   controlFlag.isPerforming_Precharge = false;
 186              	 .loc 2 58 0
 187 0052 834B     	 ldr r3,.L14+8
 188 0054 0022     	 mov r2,#0
 189 0056 1A70     	 strb r2,[r3]
  59:../main.c     ****   controlFlag.isStandby 			 = false;
 190              	 .loc 2 59 0
 191 0058 814B     	 ldr r3,.L14+8
 192 005a 0022     	 mov r2,#0
 193 005c 5A70     	 strb r2,[r3,#1]
 194              	.L12:
  60:../main.c     **** 
  61:../main.c     ****   /* Placeholder for user application code. The while loop below can be replaced with user applicat
  62:../main.c     ****   while(1U)
  63:../main.c     ****   {
  64:../main.c     **** 	  /* Continuously Checking Mode and Error */
  65:../main.c     ****   	  OP_CheckingError(&controlFlag, &pcsSystemStatus, &pcsDCgridStatus,
 195              	 .loc 2 65 0
 196 005e 8048     	 ldr r0,.L14+8
 197 0060 8049     	 ldr r1,.L14+12
 198 0062 814A     	 ldr r2,.L14+16
 199 0064 814C     	 ldr r4,.L14+20
 200 0066 824B     	 ldr r3,.L14+24
 201 0068 0093     	 str r3,[sp]
 202 006a 824B     	 ldr r3,.L14+28
 203 006c 0193     	 str r3,[sp,#4]
 204 006e 231C     	 mov r3,r4
 205 0070 FFF7FEFF 	 bl OP_CheckingError
  66:../main.c     ****   			  	  	   &pcsACinvStatus, &pcsPVconvStatus, &pcsBatconvStatus);
  67:../main.c     ****   	  OP_CheckingMode(&controlFlag);
 206              	 .loc 2 67 0
 207 0074 7A4B     	 ldr r3,.L14+8
 208 0076 181C     	 mov r0,r3
 209 0078 FFF7FEFF 	 bl OP_CheckingMode
  68:../main.c     **** 
  69:../main.c     **** 
  70:../main.c     ****   	  /* Run operational state */
  71:../main.c     ****   	  switch (mcu_state)
 210              	 .loc 2 71 0
 211 007c 774B     	 ldr r3,.L14+4
 212 007e 1B78     	 ldrb r3,[r3]
 213 0080 052B     	 cmp r3,#5
 214 0082 00D9     	 bls .LCB109
 215 0084 E6E0     	 b .L13
 216              	.LCB109:
 217 0086 9A00     	 lsl r2,r3,#2
 218 0088 7B4B     	 ldr r3,.L14+32
 219 008a D318     	 add r3,r2,r3
 220 008c 1B68     	 ldr r3,[r3]
 221 008e 9F46     	 mov pc,r3
 222              	 .section .rodata.main,"a",%progbits
 223              	 .align 2
 224              	.L5:
 225 0000 90000000 	 .word .L4
 226 0004 E0000000 	 .word .L6
 227 0008 2A010000 	 .word .L7
 228 000c 72010000 	 .word .L8
 229 0010 B6010000 	 .word .L9
 230 0014 08020000 	 .word .L10
 231              	 .section .text.main
 232              	.L4:
  72:../main.c     ****   	  {
  73:../main.c     ****   	  	  case OP_POWERUP 	:
  74:../main.c     ****   	  		  mcu_state	= OP_POWERUP;
 233              	 .loc 2 74 0
 234 0090 724B     	 ldr r3,.L14+4
 235 0092 0022     	 mov r2,#0
 236 0094 1A70     	 strb r2,[r3]
  75:../main.c     ****   	  		  data_group.bmc_operation_state = 0x01;
 237              	 .loc 2 75 0
 238 0096 794B     	 ldr r3,.L14+36
 239 0098 3922     	 mov r2,#57
 240 009a 0121     	 mov r1,#1
 241 009c 9954     	 strb r1,[r3,r2]
  76:../main.c     **** 
  77:../main.c     **** 			  /* Set LED Indicator for this state */
  78:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_11, XMC_GPIO_OUTPUT_LEVEL_LOW);
 242              	 .loc 2 78 0
 243 009e 784A     	 ldr r2,.L14+40
 244 00a0 8023     	 mov r3,#128
 245 00a2 5B02     	 lsl r3,r3,#9
 246 00a4 101C     	 mov r0,r2
 247 00a6 0B21     	 mov r1,#11
 248 00a8 1A1C     	 mov r2,r3
 249 00aa FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
  79:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_12, XMC_GPIO_OUTPUT_LEVEL_HIGH);
 250              	 .loc 2 79 0
 251 00ae 744B     	 ldr r3,.L14+40
 252 00b0 181C     	 mov r0,r3
 253 00b2 0C21     	 mov r1,#12
 254 00b4 0122     	 mov r2,#1
 255 00b6 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
  80:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_13, XMC_GPIO_OUTPUT_LEVEL_HIGH);
 256              	 .loc 2 80 0
 257 00ba 714B     	 ldr r3,.L14+40
 258 00bc 181C     	 mov r0,r3
 259 00be 0D21     	 mov r1,#13
 260 00c0 0122     	 mov r2,#1
 261 00c2 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
  81:../main.c     **** 
  82:../main.c     **** 			  /* Perform actions for this state */
  83:../main.c     **** 			  OP_SetupConnection(&mcu_state, &sysTickParamHandle, &controlFlag,
 262              	 .loc 2 83 0
 263 00c6 6F4B     	 ldr r3,.L14+44
 264 00c8 1C68     	 ldr r4,[r3]
 265 00ca 6448     	 ldr r0,.L14+4
 266 00cc 6249     	 ldr r1,.L14
 267 00ce 644A     	 ldr r2,.L14+8
 268 00d0 6D4B     	 ldr r3,.L14+48
 269 00d2 0093     	 str r3,[sp]
 270 00d4 634B     	 ldr r3,.L14+12
 271 00d6 0193     	 str r3,[sp,#4]
 272 00d8 231C     	 add r3,r4,#0
 273 00da FFF7FEFF 	 bl OP_SetupConnection
  84:../main.c     **** 					  	  	  	  pduSensor.mPVPT, &pcsBmsStatus, &pcsSystemStatus);
  85:../main.c     **** 			  break;
 274              	 .loc 2 85 0
 275 00de BAE0     	 b .L11
 276              	.L6:
  86:../main.c     ****   	  	  case OP_TURN_ON 	:
  87:../main.c     ****   	  		  mcu_state	= OP_TURN_ON;
 277              	 .loc 2 87 0
 278 00e0 5E4B     	 ldr r3,.L14+4
 279 00e2 0122     	 mov r2,#1
 280 00e4 1A70     	 strb r2,[r3]
  88:../main.c     ****   	  		  data_group.bmc_operation_state = 0x02;
 281              	 .loc 2 88 0
 282 00e6 654B     	 ldr r3,.L14+36
 283 00e8 3922     	 mov r2,#57
 284 00ea 0221     	 mov r1,#2
 285 00ec 9954     	 strb r1,[r3,r2]
  89:../main.c     **** 
  90:../main.c     ****   	  		  /* Set LED Indicator for this state */
  91:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_11, XMC_GPIO_OUTPUT_LEVEL_HIGH);
 286              	 .loc 2 91 0
 287 00ee 644B     	 ldr r3,.L14+40
 288 00f0 181C     	 mov r0,r3
 289 00f2 0B21     	 mov r1,#11
 290 00f4 0122     	 mov r2,#1
 291 00f6 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
  92:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_12, XMC_GPIO_OUTPUT_LEVEL_LOW);
 292              	 .loc 2 92 0
 293 00fa 614A     	 ldr r2,.L14+40
 294 00fc 8023     	 mov r3,#128
 295 00fe 5B02     	 lsl r3,r3,#9
 296 0100 101C     	 mov r0,r2
 297 0102 0C21     	 mov r1,#12
 298 0104 1A1C     	 mov r2,r3
 299 0106 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
  93:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_13, XMC_GPIO_OUTPUT_LEVEL_HIGH);
 300              	 .loc 2 93 0
 301 010a 5D4B     	 ldr r3,.L14+40
 302 010c 181C     	 mov r0,r3
 303 010e 0D21     	 mov r1,#13
 304 0110 0122     	 mov r2,#1
 305 0112 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
  94:../main.c     **** 
  95:../main.c     **** 	  		  /* Perform actions for this state */
  96:../main.c     **** 	  		  OP_TurnOnPCS(&mcu_state, &sysTickParamHandle, &controlFlag, &pcsBmsStatus,
 306              	 .loc 2 96 0
 307 0116 5148     	 ldr r0,.L14+4
 308 0118 4F49     	 ldr r1,.L14
 309 011a 514A     	 ldr r2,.L14+8
 310 011c 5A4C     	 ldr r4,.L14+48
 311 011e 514B     	 ldr r3,.L14+12
 312 0120 0093     	 str r3,[sp]
 313 0122 231C     	 mov r3,r4
 314 0124 FFF7FEFF 	 bl OP_TurnOnPCS
  97:../main.c     **** 	  				  	   &pcsSystemStatus);
  98:../main.c     **** 	  		  break;
 315              	 .loc 2 98 0
 316 0128 95E0     	 b .L11
 317              	.L7:
  99:../main.c     ****   	  	  case OP_RUNNING 	:
 100:../main.c     ****   	  		  mcu_state	= OP_RUNNING;
 318              	 .loc 2 100 0
 319 012a 4C4B     	 ldr r3,.L14+4
 320 012c 0222     	 mov r2,#2
 321 012e 1A70     	 strb r2,[r3]
 101:../main.c     ****   	  		  data_group.bmc_operation_state = 0x03;
 322              	 .loc 2 101 0
 323 0130 524B     	 ldr r3,.L14+36
 324 0132 3922     	 mov r2,#57
 325 0134 0321     	 mov r1,#3
 326 0136 9954     	 strb r1,[r3,r2]
 102:../main.c     **** 			  /* Set LED Indicator for this state */
 103:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_11, XMC_GPIO_OUTPUT_LEVEL_LOW);
 327              	 .loc 2 103 0
 328 0138 514A     	 ldr r2,.L14+40
 329 013a 8023     	 mov r3,#128
 330 013c 5B02     	 lsl r3,r3,#9
 331 013e 101C     	 mov r0,r2
 332 0140 0B21     	 mov r1,#11
 333 0142 1A1C     	 mov r2,r3
 334 0144 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 104:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_12, XMC_GPIO_OUTPUT_LEVEL_LOW);
 335              	 .loc 2 104 0
 336 0148 4D4A     	 ldr r2,.L14+40
 337 014a 8023     	 mov r3,#128
 338 014c 5B02     	 lsl r3,r3,#9
 339 014e 101C     	 mov r0,r2
 340 0150 0C21     	 mov r1,#12
 341 0152 1A1C     	 mov r2,r3
 342 0154 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 105:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_13, XMC_GPIO_OUTPUT_LEVEL_HIGH);
 343              	 .loc 2 105 0
 344 0158 494B     	 ldr r3,.L14+40
 345 015a 181C     	 mov r0,r3
 346 015c 0D21     	 mov r1,#13
 347 015e 0122     	 mov r2,#1
 348 0160 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 106:../main.c     **** 
 107:../main.c     **** 			  /* Perform actions for this state */
 108:../main.c     **** 			  OP_CheckingPCSStatus(&mcu_state, &pcsSystemStatus, &sysTickParamHandle,
 349              	 .loc 2 108 0
 350 0164 3D48     	 ldr r0,.L14+4
 351 0166 3F49     	 ldr r1,.L14+12
 352 0168 3B4A     	 ldr r2,.L14
 353 016a 3D4B     	 ldr r3,.L14+8
 354 016c FFF7FEFF 	 bl OP_CheckingPCSStatus
 109:../main.c     **** 								   &controlFlag);
 110:../main.c     **** 			  break;
 355              	 .loc 2 110 0
 356 0170 71E0     	 b .L11
 357              	.L8:
 111:../main.c     **** 		  case OP_STANDBY	:
 112:../main.c     **** 			  mcu_state	= OP_STANDBY;
 358              	 .loc 2 112 0
 359 0172 3A4B     	 ldr r3,.L14+4
 360 0174 0322     	 mov r2,#3
 361 0176 1A70     	 strb r2,[r3]
 113:../main.c     **** 			  data_group.bmc_operation_state = 0x04;
 362              	 .loc 2 113 0
 363 0178 404B     	 ldr r3,.L14+36
 364 017a 3922     	 mov r2,#57
 365 017c 0421     	 mov r1,#4
 366 017e 9954     	 strb r1,[r3,r2]
 114:../main.c     **** 
 115:../main.c     **** 			  /* Set LED Indicator for this state */
 116:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_11, XMC_GPIO_OUTPUT_LEVEL_HIGH);
 367              	 .loc 2 116 0
 368 0180 3F4B     	 ldr r3,.L14+40
 369 0182 181C     	 mov r0,r3
 370 0184 0B21     	 mov r1,#11
 371 0186 0122     	 mov r2,#1
 372 0188 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 117:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_12, XMC_GPIO_OUTPUT_LEVEL_HIGH);
 373              	 .loc 2 117 0
 374 018c 3C4B     	 ldr r3,.L14+40
 375 018e 181C     	 mov r0,r3
 376 0190 0C21     	 mov r1,#12
 377 0192 0122     	 mov r2,#1
 378 0194 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 118:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_13, XMC_GPIO_OUTPUT_LEVEL_LOW);
 379              	 .loc 2 118 0
 380 0198 394A     	 ldr r2,.L14+40
 381 019a 8023     	 mov r3,#128
 382 019c 5B02     	 lsl r3,r3,#9
 383 019e 101C     	 mov r0,r2
 384 01a0 0D21     	 mov r1,#13
 385 01a2 1A1C     	 mov r2,r3
 386 01a4 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 119:../main.c     **** 
 120:../main.c     **** 			  /* Perform actions for this state */
 121:../main.c     **** 			  OP_PutSystemStandby(&mcu_state, &pcsSystemStatus, &controlFlag,
 387              	 .loc 2 121 0
 388 01a8 2C48     	 ldr r0,.L14+4
 389 01aa 2E49     	 ldr r1,.L14+12
 390 01ac 2C4A     	 ldr r2,.L14+8
 391 01ae 364B     	 ldr r3,.L14+48
 392 01b0 FFF7FEFF 	 bl OP_PutSystemStandby
 122:../main.c     **** 					  	  	  	  &pcsBmsStatus);
 123:../main.c     **** 			  break;
 393              	 .loc 2 123 0
 394 01b4 4FE0     	 b .L11
 395              	.L9:
 124:../main.c     **** 		  case OP_ERROR		:
 125:../main.c     **** 			  mcu_state	= OP_ERROR;
 396              	 .loc 2 125 0
 397 01b6 294B     	 ldr r3,.L14+4
 398 01b8 0422     	 mov r2,#4
 399 01ba 1A70     	 strb r2,[r3]
 126:../main.c     **** 			  data_group.bmc_operation_state = 0x05;
 400              	 .loc 2 126 0
 401 01bc 2F4B     	 ldr r3,.L14+36
 402 01be 3922     	 mov r2,#57
 403 01c0 0521     	 mov r1,#5
 404 01c2 9954     	 strb r1,[r3,r2]
 127:../main.c     **** 
 128:../main.c     **** 			  /* Set LED Indicator for this state */
 129:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_11, XMC_GPIO_OUTPUT_LEVEL_LOW);
 405              	 .loc 2 129 0
 406 01c4 2E4A     	 ldr r2,.L14+40
 407 01c6 8023     	 mov r3,#128
 408 01c8 5B02     	 lsl r3,r3,#9
 409 01ca 101C     	 mov r0,r2
 410 01cc 0B21     	 mov r1,#11
 411 01ce 1A1C     	 mov r2,r3
 412 01d0 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 130:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_12, XMC_GPIO_OUTPUT_LEVEL_HIGH);
 413              	 .loc 2 130 0
 414 01d4 2A4B     	 ldr r3,.L14+40
 415 01d6 181C     	 mov r0,r3
 416 01d8 0C21     	 mov r1,#12
 417 01da 0122     	 mov r2,#1
 418 01dc FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 131:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_13, XMC_GPIO_OUTPUT_LEVEL_LOW);
 419              	 .loc 2 131 0
 420 01e0 274A     	 ldr r2,.L14+40
 421 01e2 8023     	 mov r3,#128
 422 01e4 5B02     	 lsl r3,r3,#9
 423 01e6 101C     	 mov r0,r2
 424 01e8 0D21     	 mov r1,#13
 425 01ea 1A1C     	 mov r2,r3
 426 01ec FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 132:../main.c     **** 
 133:../main.c     **** 			  /* Perform actions for this state */
 134:../main.c     **** 			  OP_HandlingPCSWarning(&mcu_state, &pcsSystemStatus, &sysTickParamHandle,
 427              	 .loc 2 134 0
 428 01f0 1A48     	 ldr r0,.L14+4
 429 01f2 1C49     	 ldr r1,.L14+12
 430 01f4 184A     	 ldr r2,.L14
 431 01f6 1A4C     	 ldr r4,.L14+8
 432 01f8 244B     	 ldr r3,.L14+52
 433 01fa 0093     	 str r3,[sp]
 434 01fc 224B     	 ldr r3,.L14+48
 435 01fe 0193     	 str r3,[sp,#4]
 436 0200 231C     	 mov r3,r4
 437 0202 FFF7FEFF 	 bl OP_HandlingPCSWarning
 135:../main.c     **** 									&controlFlag, &bmsSensor, &pcsBmsStatus);
 136:../main.c     **** 			  break;
 438              	 .loc 2 136 0
 439 0206 26E0     	 b .L11
 440              	.L10:
 137:../main.c     **** 		  case OP_SHUTDOWN	:
 138:../main.c     **** 			  mcu_state 	= OP_SHUTDOWN;
 441              	 .loc 2 138 0
 442 0208 144B     	 ldr r3,.L14+4
 443 020a 0522     	 mov r2,#5
 444 020c 1A70     	 strb r2,[r3]
 139:../main.c     **** 			  data_group.bmc_operation_state = 0x07;
 445              	 .loc 2 139 0
 446 020e 1B4B     	 ldr r3,.L14+36
 447 0210 3922     	 mov r2,#57
 448 0212 0721     	 mov r1,#7
 449 0214 9954     	 strb r1,[r3,r2]
 140:../main.c     **** 
 141:../main.c     **** 			  /* Set LED Indicator for this state */
 142:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_11, XMC_GPIO_OUTPUT_LEVEL_LOW);
 450              	 .loc 2 142 0
 451 0216 1A4A     	 ldr r2,.L14+40
 452 0218 8023     	 mov r3,#128
 453 021a 5B02     	 lsl r3,r3,#9
 454 021c 101C     	 mov r0,r2
 455 021e 0B21     	 mov r1,#11
 456 0220 1A1C     	 mov r2,r3
 457 0222 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 143:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_12, XMC_GPIO_OUTPUT_LEVEL_LOW);
 458              	 .loc 2 143 0
 459 0226 164A     	 ldr r2,.L14+40
 460 0228 8023     	 mov r3,#128
 461 022a 5B02     	 lsl r3,r3,#9
 462 022c 101C     	 mov r0,r2
 463 022e 0C21     	 mov r1,#12
 464 0230 1A1C     	 mov r2,r3
 465 0232 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 144:../main.c     **** 	  		  XMC_GPIO_SetOutputLevel(P2_13, XMC_GPIO_OUTPUT_LEVEL_LOW);
 466              	 .loc 2 144 0
 467 0236 124A     	 ldr r2,.L14+40
 468 0238 8023     	 mov r3,#128
 469 023a 5B02     	 lsl r3,r3,#9
 470 023c 101C     	 mov r0,r2
 471 023e 0D21     	 mov r1,#13
 472 0240 1A1C     	 mov r2,r3
 473 0242 FFF7FEFF 	 bl XMC_GPIO_SetOutputLevel
 145:../main.c     **** 
 146:../main.c     **** 			  /* Perform actions for this state */
 147:../main.c     **** 			  OP_PutSystemShutDown(&mcu_state, &sysTickParamHandle, &controlFlag, &pcsBmsStatus);
 474              	 .loc 2 147 0
 475 0246 0548     	 ldr r0,.L14+4
 476 0248 0349     	 ldr r1,.L14
 477 024a 054A     	 ldr r2,.L14+8
 478 024c 0E4B     	 ldr r3,.L14+48
 479 024e FFF7FEFF 	 bl OP_PutSystemShutDown
 148:../main.c     **** 			  break;
 480              	 .loc 2 148 0
 481 0252 00E0     	 b .L11
 482              	.L13:
 149:../main.c     **** 		  default			: break;
 483              	 .loc 2 149 0
 484 0254 C046     	 mov r8,r8
 485              	.L11:
 150:../main.c     **** 	  }
 151:../main.c     ****   }
 486              	 .loc 2 151 0 discriminator 1
 487 0256 02E7     	 b .L12
 488              	.L15:
 489              	 .align 2
 490              	.L14:
 491 0258 00000000 	 .word sysTickParamHandle
 492 025c 00000000 	 .word mcu_state
 493 0260 00000000 	 .word controlFlag
 494 0264 00000000 	 .word pcsSystemStatus
 495 0268 00000000 	 .word pcsDCgridStatus
 496 026c 00000000 	 .word pcsACinvStatus
 497 0270 00000000 	 .word pcsPVconvStatus
 498 0274 00000000 	 .word pcsBatconvStatus
 499 0278 00000000 	 .word .L5
 500 027c 00000000 	 .word data_group
 501 0280 00020440 	 .word 1074004480
 502 0284 00000000 	 .word pduSensor
 503 0288 00000000 	 .word pcsBmsStatus
 504 028c 00000000 	 .word bmsSensor
 505              	 .cfi_endproc
 506              	.LFE380:
 508              	 .text
 509              	.Letext0:
 510              	 .file 3 "d:\\software\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 511              	 .file 4 "d:\\software\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 512              	 .file 5 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 513              	 .file 6 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc/xmc1_gpio.h"
 514              	 .file 7 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc/xmc_usic.h"
 515              	 .file 8 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc/xmc_uart.h"
 516              	 .file 9 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/interconnect/esp32/esp32_op.h"
 517              	 .file 10 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc/xmc_ccu4.h"
 518              	 .file 11 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc/xmc_can.h"
 519              	 .file 12 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/interconnect/pcs/pcs_op.h"
 520              	 .file 13 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/interconnect/genix/genix_op.h"
 521              	 .file 14 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc/xmc_vadc.h"
 522              	 .file 15 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/interconnect/pdu/pdu_op.h"
 523              	 .file 16 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/variables/variables.h"
 524              	 .file 17 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/operation/operation.h"
 525              	 .file 18 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/CMSIS/Include/cmsis_gcc.h"
 526              	 .file 19 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
 527              	 .file 20 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/interconnect/esp32/esp32_op_conf.h"
 528              	 .file 21 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/interconnect/pcs/pcs_op_conf.h"
 529              	 .file 22 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/interconnect/genix/genix_op_conf.h"
 530              	 .file 23 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/interconnect/gpios/gpio_op_conf.h"
 531              	 .file 24 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/interconnect/pdu/pdu_op_conf.h"
 532              	 .file 25 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/interconnect/timing/timing_op_conf.h"
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
    {standard input}:18     .text.XMC_GPIO_SetOutputLevel:00000000 $t
    {standard input}:22     .text.XMC_GPIO_SetOutputLevel:00000000 XMC_GPIO_SetOutputLevel
                            *COM*:00000008 tx_config
                            *COM*:00000008 rx_config
                            *COM*:0000000c uart_config
                            *COM*:00000008 pcs_button_config
                            *COM*:00000008 CAN0_txd_config
                            *COM*:00000008 CAN0_rxd_config
                            *COM*:0000000c can_baud
                            *COM*:00000020 msgObjToPCS
                            *COM*:00000020 msgObjFromPCS
                            *COM*:00000008 tx_genix_config
                            *COM*:00000008 rx_genix_config
                            *COM*:0000000c uart_genix_config
                            *COM*:00000008 led
                            *COM*:00000008 button
                            *COM*:00000008 dipswitch_config
                            *COM*:00000018 g_global_handle
                            *COM*:00000014 g_group_handle
                            *COM*:0000000c g_queue_handle
                            *COM*:00000010 g_queue_entry
                            *COM*:00000040 g_channel_handle
                            *COM*:00000010 g_result_handle
                            *COM*:00000008 adc_io
                            *COM*:00000008 relay_KMP
                            *COM*:00000008 relay_KMF
                            *COM*:00000008 relay_KDSG
                            *COM*:00000008 relay_KBAT
                            *COM*:00000008 SLICE0_config
                            *COM*:00000008 SLICE1_config
                            *COM*:00000008 SLICE2_config
                            *COM*:00000006 sysTickParamHandle
                            *COM*:00000004 pcsBmsStatus
                            *COM*:00000008 bmsSensor
                            *COM*:00000008 pcsVoltages
                            *COM*:00000008 pcsCurrents
                            *COM*:00000008 pcsPowers
                            *COM*:00000004 pcsMiscs
                            *COM*:00000005 pcsSystemStatus
                            *COM*:00000004 pcsDCgridStatus
                            *COM*:00000004 pcsACinvStatus
                            *COM*:00000004 pcsPVconvStatus
                            *COM*:00000004 pcsBatconvStatus
                            *COM*:00000050 data_group
                            *COM*:00000004 buffptr
                            *COM*:00000050 espBuffer
                            *COM*:00000008 pduSensorRaw
                            *COM*:00000014 pduSensorAvg
                            *COM*:00000010 pduSensor
                            *COM*:00000008 genix_data
                            *COM*:00000001 mcu_state
                            *COM*:00000006 controlFlag
    {standard input}:115    .bss.count:00000000 count
    {standard input}:112    .bss.count:00000000 $d
    {standard input}:118    .text.main:00000000 $t
    {standard input}:123    .text.main:00000000 main
    {standard input}:223    .rodata.main:00000000 $d
    {standard input}:491    .text.main:00000258 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
GPIO_Init
ESP32_ConnectionInit
PCS_ConnectionInit
GENIX_ConnectionInit
PDU_Relay_Init
PDU_SensorADC_Init
TIMING_TimerInit
OP_CheckingError
OP_CheckingMode
OP_SetupConnection
OP_TurnOnPCS
OP_CheckingPCSStatus
OP_PutSystemStandby
OP_HandlingPCSWarning
OP_PutSystemShutDown
