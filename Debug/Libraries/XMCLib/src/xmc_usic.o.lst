   1              	 .cpu cortex-m0
   2              	 .fpu softvfp
   3              	 .eabi_attribute 20,1
   4              	 .eabi_attribute 21,1
   5              	 .eabi_attribute 23,3
   6              	 .eabi_attribute 24,1
   7              	 .eabi_attribute 25,1
   8              	 .eabi_attribute 26,1
   9              	 .eabi_attribute 30,6
  10              	 .eabi_attribute 34,0
  11              	 .eabi_attribute 18,4
  12              	 .code 16
  13              	 .file "xmc_usic.c"
  14              	 .text
  15              	.Ltext0:
  16              	 .cfi_sections .debug_frame
  17              	 .section .text.XMC_USIC_CH_SetInputTriggerCombinationMode,"ax",%progbits
  18              	 .align 2
  19              	 .code 16
  20              	 .thumb_func
  22              	XMC_USIC_CH_SetInputTriggerCombinationMode:
  23              	.LFB61:
  24              	 .file 1 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc/xmc_usic.h"
   1:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
   2:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @file xmc_usic.h
   3:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @date 2019-07-01
   4:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
   5:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @cond
   6:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
   7:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
   9:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * All rights reserved.                        
  11:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *                                             
  12:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * following conditions are met:   
  14:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  15:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer.                        
  17:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  18:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  21:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * products derived from this software without specific prior written permission.                  
  23:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  24:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *                                                                              
  32:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  **************************************************************************************************
  35:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  36:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Change History
  37:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * --------------
  38:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  39:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-02-20:
  40:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Initial draft<br>
  41:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Documentation improved <br>
  42:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  43:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-05-08:
  44:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetInputTriggerCombinationMode() and XMC_USIC_CH_SetTransmitBufferStatus
  45:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *      
  46:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-06-20:
  47:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Removed version macros and declaration of GetDriverVersion API
  48:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  49:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-17:
  50:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Bug fixed in XMC_USIC_CH_SetTransmitBufferStatus API. OR operator removed.
  51:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  52:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-24:
  53:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for enabling/disabling delay compensation XMC_USIC_CH_DisableDelayCompensation(
  54:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *       XMC_USIC_CH_DisableDelayCompensation()
  55:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  56:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-25:
  57:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for defining if the data shift unit input is derived
  58:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *       from the input data path DXn or from the selected protocol pre-processors: XMC_USIC_CH_Con
  59:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *       and XMC_USIC_CH_ConnectInputDataShiftToDataInput()
  60:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  61:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-27:
  62:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed bug in XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T value.
  63:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for direct TBUF access: XMC_USIC_CH_WriteToTBUF() and XMC_USIC_CH_WriteToTBUFTC
  64:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  65:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  66:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2015-08-28:
  67:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added API for enabling the transfer trigger unit to set bit TCSR.TE if the trigger signal 
  68:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *       Clear to Send (CTS) signal: XMC_USIC_CH_EnableTBUFDataValidTrigger() and XMC_USIC_CH_Disab
  69:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  70:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-03-09:
  71:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Optimization of write only registers
  72:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  73:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2016-04-10:
  74:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added an API to put the data into FIFO when hardware port control is enabled: XMC_USIC_CH_
  75:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  76:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-02-10:
  77:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetShiftDirection() to allow selection of shift direction of the data wo
  78:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetCaptureTimerValue() and XMC_USIC_CH_SetFractionalDivider()
  79:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  80:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2017-09-08:
  81:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Fixed value of macro XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST used in XMC_USIC_CH_SetShiftDir
  82:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  83:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2018-09-29:
  84:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  85:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
  86:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-05-07:
  87:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  88:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  89:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 2019-07-01:
  90:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *     - Changed XMC_USIC_CH_SetBaudrateEx() input parameter types
  91:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  92:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @endcond
  93:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
  94:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
  95:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
  96:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #ifndef XMC_USIC_H
  97:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC_H
  98:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
  99:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * HEADER FILES
 100:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 101:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 102:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #include "xmc_common.h"
 103:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 104:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 105:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup XMClib XMC Peripheral Library
 106:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 107:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 108:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 109:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 110:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @addtogroup USIC
 111:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @brief Universal Serial Interface Channel(USIC) driver for serial communication.
 112:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 113:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * The Universal Serial Interface Channel(USIC) module is a flexible interface module
 114:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * covering several serial communication protocols. A USIC module contains two
 115:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * independent communication channels named USICx_CH0 and USICx_CH1, with x
 116:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * being the number of the USIC module. The user can program, during run-time, which protocol will 
 117:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * by each communication channel and which pins are used.
 118:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * The driver provides APIs, configuration structures and enumerations to configure common features
 119:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * communication protocols.
 120:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 121:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC driver features:
 122:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of FIFO for transmit and receive functions.
 123:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides a structure type XMC_USIC_CH_t to represent the USIC channel registers in a programm
 124:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  friendly format.
 125:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of automatic update for frame length, word length, slave select or slave
 126:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows transmission of data to FIFO using XMC_USIC_CH_TXFIFO_PutData() and XMC_USIC_CH_TXFIFO
 127:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows reading of received data in FIFO using XMC_USIC_CH_RXFIFO_GetData()
 128:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Allows configuration of baudrate using XMC_USIC_CH_SetBaudrate()
 129:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * -# Provides API to trigger interrupts using XMC_USIC_CH_TriggerServiceRequest()
 130:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @{
 131:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 132:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 133:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 134:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * MACROS
 135:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 136:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 137:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0 ((XMC_USIC_t *)USIC0_BASE)			/**< USIC0 module base address */
 138:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH0 ((XMC_USIC_CH_t *)USIC0_CH0_BASE)	/**< USIC0 channel 0 base address */
 139:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC0_CH1 ((XMC_USIC_CH_t *)USIC0_CH1_BASE)	/**< USIC0 channel 1 base address */
 140:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 141:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC1)
 142:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1 ((XMC_USIC_t *)USIC1_BASE)			/**< USIC1 module base address */
 143:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH0 ((XMC_USIC_CH_t *)USIC1_CH0_BASE)	/**< USIC1 channel 0 base address */
 144:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC1_CH1 ((XMC_USIC_CH_t *)USIC1_CH1_BASE)	/**< USIC1 channel 1 base address */
 145:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 146:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 147:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(USIC2)
 148:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2 ((XMC_USIC_t *)USIC2_BASE)			/**< USIC2 module base address */
 149:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH0 ((XMC_USIC_CH_t *)USIC2_CH0_BASE)	/**< USIC2 channel 0 base address */
 150:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define XMC_USIC2_CH1 ((XMC_USIC_CH_t *)USIC2_CH1_BASE)	/**< USIC2 channel 1 base address */
 151:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 152:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 153:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Msk  USIC_CH_DX0CR_DSEL_Msk   /**< Common mask for DSEL bitfield mask in 
 154:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEL_Pos  USIC_CH_DX0CR_DSEL_Pos   /**< Common mask for DSEL bitfield position
 155:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Pos USIC_CH_DX0CR_SFSEL_Pos  /**< Common mask for SFSEL bitfield positio
 156:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_SFSEL_Msk USIC_CH_DX0CR_SFSEL_Msk  /**< Common mask for SFSEL bitfield mask in
 157:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DPOL_Msk  USIC_CH_DX0CR_DPOL_Msk   /**< Common mask for DPOL bitfield mask in 
 158:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DFEN_Msk  USIC_CH_DX0CR_DFEN_Msk   /**< Common mask for DFEN bitfield mask in 
 159:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_DSEN_Msk  USIC_CH_DX0CR_DSEN_Msk   /**< Common mask for DSEN bitfield mask in 
 160:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Pos    USIC_CH_DX0CR_CM_Pos     /**< Common mask for CM bitfield position i
 161:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_CM_Msk    USIC_CH_DX0CR_CM_Msk     /**< Common mask for CM bitfield mask in DX
 162:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_Msk  USIC_CH_DX0CR_INSW_Msk   /**< Common mask for INSW bitfield mask in 
 163:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #define USIC_CH_DXCR_INSW_pos  USIC_CH_DX0CR_INSW_Pos   /**< Common mask for INSW bitfield position
 164:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 165:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC1
 166:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc1_usic_map.h"
 167:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 168:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 169:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if UC_FAMILY == XMC4
 170:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  #include "xmc4_usic_map.h"
 171:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 172:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 173:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 174:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * ENUMS
 175:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 176:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 177:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 178:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel driver status
 179:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 180:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_STATUS
 181:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 182:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_OK,    /**< USIC driver status : OK */
 183:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_ERROR, /**< USIC driver status : ERROR */
 184:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_STATUS_BUSY   /**< USIC driver status : BUSY */
 185:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_STATUS_t;
 186:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 187:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 188:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel kernel mode
 189:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 190:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_KERNEL_MODE
 191:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 192:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_0  = 0x0UL,  /**< Run mode 0 (transmission and reception possible)*/
 193:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_RUN_1  = 0x1UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Run mode 1 (transmissio
 194:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_0 = 0x2UL << USIC_CH_KSCFG_NOMCFG_Pos,  /**< Stop mode 0 (no transmi
 195:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_KERNEL_MODE_STOP_1 = 0x3UL << USIC_CH_KSCFG_NOMCFG_Pos   /**< Stop mode 1 (both trans
 196:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_KERNEL_MODE_t;
 197:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 198:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 199:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel operating mode
 200:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 201:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_OPERATING_MODE
 202:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 203:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_IDLE = 0x0UL, /**< USIC channel idle */
 204:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_SPI  = 0x1UL << USIC_CH_CCR_MODE_Pos, /**< SPI mode */
 205:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_UART = 0x2UL << USIC_CH_CCR_MODE_Pos, /**< UART mode */
 206:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2S  = 0x3UL << USIC_CH_CCR_MODE_Pos, /**< I2S mode */
 207:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_OPERATING_MODE_I2C  = 0x4UL << USIC_CH_CCR_MODE_Pos  /**< I2C mode */
 208:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_OPERATING_MODE_t;
 209:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 210:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 211:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel inputs
 212:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 213:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT
 214:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 215:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX0, /**< DX0 input */
 216:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX1, /**< DX1 input */
 217:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX2, /**< DX2 input */
 218:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX3, /**< DX3 input */
 219:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX4, /**< DX4 input */
 220:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_DX5  /**< DX5 input */
 221:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_t;
 222:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 223:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 224:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input source sampling frequency
 225:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 226:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_SAMPLING_FREQ
 227:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 228:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FPERIPH            = 0x0UL, /**< Use fperiph frequency for input 
 229:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_SAMPLING_FREQ_FRACTIONAL_DIVIDER = 0x1UL << USIC_CH_DXCR_SFSEL_Pos  /**< Use fF
 230:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_SAMPLING_FREQ_t;
 231:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 232:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 233:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel input combination mode
 234:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 235:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INPUT_COMBINATION_MODE
 236:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 237:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_TRIGGER_DISABLED = 0x0UL, /**< The trigger activation is disab
 238:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_RISING_EDGE      = 0x1UL, /**< A rising edge activates DXnT*/
 239:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_FALLING_EDGE     = 0x2UL, /**< A falling edge activates DXnT*/
 240:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INPUT_COMBINATION_MODE_BOTH_EDGES       = 0x3UL, /**< Both edges activate DXnT*/
 241:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INPUT_COMBINATION_MODE_t;
 242:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 243:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 244:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel data transmission start modes.
 245:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Data shifted out of the transmit pin depends on the value configured for the
 246:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * TDEN bitfield of the TCSR register. Following enum values are used for configuring
 247:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * the TCSR->TDEN bitfield.
 248:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 249:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_START_TRANSMISION_MODE
 250:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 251:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_DISABLED      = 0x0U, /**< Passive data level is sent out on transm
 252:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV        = 0x1UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 253:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_0 = 0x2UL << USIC_CH_TCSR_TDEN_Pos, /**< Transmission o
 254:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_START_TRANSMISION_ON_TDV_DX2S_1 = 0x3UL << USIC_CH_TCSR_TDEN_Pos  /**< Transmission o
 255:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_START_TRANSMISION_MODE_t;
 256:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 257:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 258:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel interrupt node pointers
 259:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 260:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_INTERRUPT_NODE_POINTER
 261:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 262:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_SHIFT      = USIC_CH_INPR_TSINP_Pos, /**< Node pointe
 263:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_TRANSMIT_BUFFER     = USIC_CH_INPR_TBINP_Pos, /**< Node pointe
 264:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_RECEIVE             = USIC_CH_INPR_RINP_Pos,  /**< Node pointe
 265:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_ALTERNATE_RECEIVE   = USIC_CH_INPR_AINP_Pos,  /**< Node pointe
 266:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_INTERRUPT_NODE_POINTER_PROTOCOL            = USIC_CH_INPR_PINP_Pos   /**< Node pointe
 267:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_INTERRUPT_NODE_POINTER_t;
 268:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 269:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 270:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel events
 271:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 272:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_EVENT
 273:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 274:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_RECEIVE_START       = USIC_CH_CCR_RSIEN_Msk, /**< Receive start event */
 275:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_DATA_LOST           = USIC_CH_CCR_DLIEN_Msk, /**< Data lost event */
 276:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_SHIFT      = USIC_CH_CCR_TSIEN_Msk, /**< Transmit shift event */
 277:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_TRANSMIT_BUFFER     = USIC_CH_CCR_TBIEN_Msk, /**< Transmit buffer event */
 278:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_STANDARD_RECEIVE    = USIC_CH_CCR_RIEN_Msk,  /**< Receive event */
 279:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_ALTERNATIVE_RECEIVE = USIC_CH_CCR_AIEN_Msk,  /**< Alternate receive event */
 280:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_EVENT_BAUD_RATE_GENERATOR = USIC_CH_CCR_BRGIEN_Msk /**< Baudrate generator event */
 281:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_EVENT_t;
 282:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 283:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 284:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel parity mode
 285:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 286:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_PARITY_MODE
 287:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 288:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_NONE     = 0x0UL,  /**< Disable parity mode */
 289:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_EVEN     = 0x2UL << USIC_CH_CCR_PM_Pos,  /**< Enable even parity mode */
 290:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PARITY_MODE_ODD      = 0x3UL << USIC_CH_CCR_PM_Pos   /**< Enable odd parity mode */
 291:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PARITY_MODE_t;
 292:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 293:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 294:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data output mode
 295:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 296:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_DATA_OUTPUT_MODE
 297:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 298:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_NORMAL   = 0x0UL,  /**< Data output normal mode */
 299:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_DATA_OUTPUT_MODE_INVERTED = 0x1UL << USIC_CH_SCTR_DOCFG_Pos   /**< Data output invert
 300:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_DATA_OUTPUT_MODE_t;
 301:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 302:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 303:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status
 304:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 305:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS
 306:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 307:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_IDLE = 0x0UL,                 /**< Transfer buffer is currently idle*/
 308:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_BUSY = USIC_CH_TCSR_TDV_Msk   /**< Transfer buffer is currently busy*/
 309:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_t;
 310:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 311:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 312:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 313:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 314:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel data transmit buffer status modification
 315:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 316:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TBUF_STATUS_SET
 317:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 318:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_BUSY   = 0x1UL, /**< Set Transfer buffer status to busy*/
 319:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TBUF_STATUS_SET_IDLE   = 0x2UL  /**< Set Transfer buffer status to idle*/
 320:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TBUF_STATUS_SET_t;
 321:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 322:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 323:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive buffer status
 324:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 325:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RBUF_STATUS
 326:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 327:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID0 = USIC_CH_RBUFSR_RDV0_Msk, /**< RBUF0 data has not yet been r
 328:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RBUF_STATUS_DATA_VALID1 = USIC_CH_RBUFSR_RDV1_Msk  /**< RBUF1 data has not yet been r
 329:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RBUF_STATUS_t;
 330:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 331:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 332:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel output signal passive data level
 333:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 334:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USCI_CH_PASSIVE_DATA_LEVEL
 335:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 336:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL0 = 0x0UL, /**< Passive level(idle mode signal level) 0 */
 337:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_PASSIVE_DATA_LEVEL1 = 0x1UL << USIC_CH_SCTR_PDL_Pos  /**< Passive level(idle mode sig
 338:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_PASSIVE_DATA_LEVEL_t;
 339:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 340:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 341:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO size
 342:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 343:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_FIFO_SIZE
 344:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 345:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_DISABLED     = 0x0U,  /**< FIFO Disabled */
 346:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_2WORDS  = 0x1U,  /**< FIFO size: 2 words */
 347:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_4WORDS  = 0x2U,  /**< FIFO size: 4 words */
 348:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_8WORDS  = 0x3U,  /**< FIFO size: 8 words */
 349:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_16WORDS = 0x4U,  /**< FIFO size: 16 words */
 350:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_32WORDS = 0x5U,  /**< FIFO size: 32 words */
 351:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_FIFO_SIZE_64WORDS = 0x6U   /**< FIFO size: 64 words */
 352:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_FIFO_SIZE_t;
 353:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 354:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 355:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO interrupt node pointers
 356:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 357:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER
 358:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 359:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_TBCTR_STBINP_Pos,  /**< Node pointe
 360:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_TBCTR_ATBINP_Pos   /**< Node pointe
 361:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t;
 362:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 363:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 364:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO event configuration
 365:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 366:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT_CONF
 367:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 368:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_STANDARD  = USIC_CH_TBCTR_STBIEN_Msk,   /**< Enable FIFO standard t
 369:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_TBCTR_TBERIEN_Msk  /**< Enable transmi
 370:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_CONF_t;
 371:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 372:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 373:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel transmit FIFO status
 374:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 375:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_TXFIFO_EVENT
 376:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 377:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_STANDARD = USIC_CH_TRBSR_STBI_Msk,    /**< Transmit FIFO status: Standar
 378:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_TXFIFO_EVENT_ERROR    = USIC_CH_TRBSR_TBERI_Msk    /**< Transmit FIFO status: Error e
 379:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_TXFIFO_EVENT_t;
 380:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 381:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 382:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO interrupt node pointers
 383:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 384:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER
 385:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 386:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_STANDARD  = USIC_CH_RBCTR_SRBINP_Pos, /**< Node pointer
 387:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_ALTERNATE = USIC_CH_RBCTR_ARBINP_Pos  /**< Node pointer
 388:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t;
 389:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 390:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 391:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO event configuration
 392:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 393:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT_CONF
 394:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 395:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_STANDARD  = USIC_CH_RBCTR_SRBIEN_Msk,   /**< Enable FIFO standard r
 396:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ERROR     = (int32_t)USIC_CH_RBCTR_RBERIEN_Msk,  /**< Enable receiv
 397:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_CONF_ALTERNATE = USIC_CH_RBCTR_ARBIEN_Msk   /**< Enable FIFO alternative
 398:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_CONF_t;
 399:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 400:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 401:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel receive FIFO status
 402:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 403:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_RXFIFO_EVENT
 404:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 405:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_STANDARD  = USIC_CH_TRBSR_SRBI_Msk,   /**< Receive FIFO status: Standard
 406:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ERROR     = USIC_CH_TRBSR_RBERI_Msk,  /**< Receive FIFO status: Error ev
 407:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_RXFIFO_EVENT_ALTERNATE = USIC_CH_TRBSR_ARBI_Msk    /**< Receive FIFO status: Alternat
 408:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_RXFIFO_EVENT_t;
 409:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 410:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 411:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator clock source
 412:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 413:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_SOURCE
 414:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 415:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DIVIDER = 0x0UL, /**< Baudrate generator clock source : Source divid
 416:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T    = 0x2UL << USIC_CH_BRG_CLKSEL_Pos  /**< Baudrate generator c
 417:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_SOURCE_t;
 418:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 419:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 420:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator divider mode
 421:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 422:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE
 423:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 424:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_DISABLED   = 0x0UL, /**< Baudrate generator clock divider: Dis
 425:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL     = 0x1UL << USIC_CH_FDR_DM_Pos, /**< Baudrate genera
 426:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL = 0x2UL << USIC_CH_FDR_DM_Pos  /**< Baudrate genera
 427:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_t;
 428:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 429:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 430:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator master clock passive level
 431:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 432:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL
 433:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 434:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_0 = 0x0UL, /**< Baudrate generator master clock passiv
 435:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_1 = 0x1UL << USIC_CH_BRG_MCLKCFG_Pos  /**< Baudrate ge
 436:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_MASTER_CLOCK_PASSIVE_LEVEL_t;
 437:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 438:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 439:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock passive level
 440:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 441:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL
 442:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 443:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_DISABLED = 0x0UL, /**< Shift clock passive leve
 444:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_DISABLED = 0x1UL << USIC_CH_BRG_SCLKCFG_Pos, /*
 445:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_0_DELAY_ENABLED  = (int32_t)(0x2UL << USIC_CH_BRG_SCLKC
 446:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_1_DELAY_ENABLED  = (int32_t)(0x3UL << USIC_CH_BRG_SCLKC
 447:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_PASSIVE_LEVEL_t;
 448:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 449:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 450:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel baudrate generator shift clock output
 451:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 452:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT
 453:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 454:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_SCLK = 0x0UL, /**< Baudrate generator shift clock output: SCL.
 455:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_DX1 = 0x1UL << USIC_CH_BRG_SCLKOSEL_Pos   /**< Baudrate genera
 456:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_BRG_SHIFT_CLOCK_OUTPUT_t;
 457:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 458:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 459:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * USIC channel shift direction.
 460:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** * Defines the shift direction of the data words for transmission and reception
 461:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** */
 462:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef enum XMC_USIC_CH_SHIFT_DIRECTION
 463:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 464:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_LSB_FIRST = 0x0UL, /**< Shift LSB first. The first data bit of a data
 465:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   XMC_USIC_CH_SHIFT_DIRECTION_MSB_FIRST = 0x1UL << USIC_CH_SCTR_SDIR_Pos /**< Shift MSB first. The 
 466:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_SHIFT_DIRECTION_t;
 467:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 468:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 469:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 470:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * DATA STRUCTURES
 471:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *******************************************************************************/
 472:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 473:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard start*/
 474:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 475:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma push
 476:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma anon_unions
 477:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 478:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning 586
 479:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 480:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 481:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 482:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC module structure
 483:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 484:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef USIC_GLOBAL_TypeDef XMC_USIC_t;
 485:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 486:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 487:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel structure.<br> The members of the structure are same as in the device header file, 
 488:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * except for some registers.
 489:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * DX0CR, DX1CR, DX2CR, DX3CR, DX4CR and DX5CR are replaced with the array DXCR[6].
 490:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * TBUF0 to TBUF31 are replaced with TBUF[32].
 491:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * IN0 to IN31 are replaced with IN[32].
 492:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 493:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** typedef struct XMC_USIC_CH
 494:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 495:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED0;
 496:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  CCFG;			/**< Channel configuration register*/
 497:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED1;
 498:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  KSCFG;			/**< Kernel state configuration register*/
 499:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  FDR;			/**< Fractional divider configuration register*/
 500:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BRG;			/**< Baud rate generator register*/
 501:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  INPR;			/**< Interrupt node pointer register*/
 502:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  DXCR[6];		/**< Input control registers DX0 to DX5.*/
 503:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  SCTR;			/**< Shift control register*/
 504:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TCSR;
 505:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 506:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 507:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IICMode;	/**< I2C protocol configuration register*/
 508:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_IISMode; /**< I2S protocol configuration register*/
 509:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_SSCMode;	/**< SPI protocol configuration register*/
 510:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR;			/**< Protocol configuration register*/
 511:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PCR_ASCMode;	/**< UART protocol configuration register*/
 512:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   };
 513:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CCR;			/**< Channel control register*/
 514:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  CMTR;			/**< Capture mode timer register*/
 515:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 516:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   union {
 517:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IICMode;	/**< I2C protocol status register*/
 518:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_IISMode;	/**< I2S protocol status register*/
 519:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_SSCMode;	/**< SPI protocol status register*/
 520:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR;			/**< Protocol status register*/
 521:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****     __IO uint32_t  PSR_ASCMode;	/**< UART protocol status register*/
 522:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   };
 523:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  PSCR;			/**< Protocol status clear register*/
 524:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFSR;		/**< Receive buffer status register*/
 525:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF;			/**< Receive buffer register*/
 526:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUFD;			/**< Debug mode receive buffer register*/
 527:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF0;			/**< Receive buffer 0*/
 528:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF1;			/**< Receive buffer 1*/
 529:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RBUF01SR;		/**< Receive buffer status register*/
 530:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  FMR;			/**< Flag modification register*/
 531:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED2[5];
 532:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBUF[32];		/**< Tranmsit buffer registers*/
 533:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYP;			/**< FIFO bypass register*/
 534:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  BYPCR;			/**< FIFO bypass control register*/
 535:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TBCTR;			/**< Transmit FIFO control register*/
 536:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  RBCTR;			/**< Receive FIFO control register*/
 537:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  TRBPTR;		/**< Transmit/recive buffer pointer register*/
 538:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __IO uint32_t  TRBSR;			/**< Transmit/receive buffer status register*/
 539:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  TRBSCR;		/**< Transmit/receive buffer status clear register*/
 540:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTR;			/**< Receive FIFO output register*/
 541:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  OUTDR;			/**< Receive FIFO debug output register*/
 542:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __I  uint32_t  RESERVED3[23];
 543:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   __O  uint32_t  IN[32];		/**< Transmit FIFO input register*/
 544:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** } XMC_USIC_CH_t;
 545:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 546:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 547:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*Anonymous structure/union guard end*/
 548:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(__CC_ARM)
 549:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma pop
 550:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #elif defined(__TASKING__)
 551:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   #pragma warning restore
 552:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 553:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 554:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /*******************************************************************************
 555:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * API PROTOTYPES
 556:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  ******************************************************************************/
 557:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 558:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #ifdef __cplusplus
 559:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** extern "C" {
 560:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 561:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 562:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsModuleValid(const XMC_USIC_t *const module)
 563:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 564:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 565:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 566:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = (module == XMC_USIC0);
 567:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 568:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC1);
 569:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 570:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 571:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || (module == XMC_USIC2);
 572:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 573:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 574:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 575:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 576:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 577:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE bool XMC_USIC_IsChannelValid(const XMC_USIC_CH_t *const channel)
 578:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 579:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   bool tmp;
 580:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 581:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1));
 582:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC1)  
 583:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1));
 584:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 585:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #if defined(XMC_USIC2)  
 586:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   tmp = tmp || ((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1));
 587:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** #endif
 588:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 589:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   return tmp;
 590:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 591:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 592:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /* Common APIs */
 593:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 594:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 595:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 596:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 597:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 598:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 
 599:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 600:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC module.\n\n
 601:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the clock for the USIC module by following the
 602:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * clock enabling sequence for the selected device.
 603:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 604:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 605:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 606:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 607:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Enable(XMC_USIC_t *const usic);
 608:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 609:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  usic Pointer to USIC module handler of type @ref XMC_USIC_t.\n
 610:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				\b Range: @ref XMC_USIC0 to @ref XMC_USIC2 based on device support.
 611:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 612:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 613:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 614:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC module.\n\n
 615:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the clock for the USIC module by following the clock
 616:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * disabling sequence for the selected device.
 617:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 618:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 619:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 620:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 621:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_Disable(XMC_USIC_t *const usic);
 622:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 623:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 624:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 625:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 626:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 627:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 628:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the USIC channel. \n\n
 629:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is enabled by setting the module enable bit in KSCFG register bitfield MODEN.
 630:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * On enabling, the channel is set to idle mode.
 631:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 632:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 633:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Disable(), XMC_USIC_Enable() \n\n\n
 634:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 635:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel);
 636:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 637:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 638:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 639:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 640:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 641:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 642:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the USIC channel.\n\n
 643:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * USIC channel is disabled by setting the module enable bit(MDEN) to 0 in the register KSCFG.
 644:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 645:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 646:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_Enable(), XMC_USIC_Disable() \n\n\n
 647:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 648:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel);
 649:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 650:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 651:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 652:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 653:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. \b Range: minimum value = 100, maximum value depends on the perip
 654:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				and \a oversampling. Maximum baudrate can be derived using the formula: (fperiph * 1023)/(10
 655:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 656:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 657:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 658:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 659:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 			\b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 660:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 					  @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 661:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 662:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 663:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel. \n\n
 664:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 665:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 666:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 667:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 668:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 669:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 670:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 671:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 672:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 673:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 674:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 675:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 676:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  rate Desired baudrate. Only integer dividers of peripheral clock are achievable
 677:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 678:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *            This can be related to the number of samples for each logic state of the data signal.
 679:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *            \b Range: 1 to 32. Value should be chosen based on the protocol used.
 680:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return Status indicating the baudrate configuration.\n
 681:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *      \b Range: @ref XMC_USIC_CH_STATUS_OK if baudrate is successfully configured,
 682:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *            @ref XMC_USIC_CH_STATUS_ERROR if desired baudrate or oversampling is invalid.
 683:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 684:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 685:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Configures the baudrate of the USIC channel using the integer divider which restrics the achieva
 686:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Baudrate is configured by considering the peripheral frequency and the desired baudrate.
 687:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Optimum values of FDR->STEP and BRG->PDIV are calulated and used for generating the desired
 688:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * baudrate.
 689:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 690:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 691:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetStartTransmisionMode(), XMC_USIC_CH_SetInputSource() \n\n\n
 692:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 693:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 694:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 695:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 696:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 697:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 698:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 699:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel for .\n
 700:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 701:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 702:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used baudrate (fCTQIN) of a USIC channel. \n\n
 703:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 704:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 705:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 706:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 707:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 708:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 709:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel);
 710:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 711:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 712:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 713:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 714:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 715:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 716:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 717:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used SCLK frequency of a USIC channel. \n\n
 718:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 719:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 720:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 721:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 722:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 723:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 724:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel);
 725:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 726:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 727:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 728:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *           \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device
 729:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return baudrate currently used by USIC channel.\n
 730:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 731:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 732:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Calculates the current used MCLK frequency of a USIC channel. \n\n
 733:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image html ../images/usic_brg.png	 
 734:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @image latex ../images/usic_brg.png	 
 735:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 736:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 737:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBaudrateMode(), XMC_USIC_CH_SetBaudrate(), XMC_USIC_CH_SetBaudrateEx() \n\n\n
 738:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 739:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel);
 740:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 741:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 742:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 743:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 744:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  pdiv Desired divider for the external frequency input. \b Range: minimum value = 1, maxi
 745:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  oversampling Required oversampling. The value indicates the number of time quanta for on
 746:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 						This can be related to the number of samples for each logic state of the data signal. \n
 747:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 						\b Range: 1 to 32. Value should be chosen based on the protocol used.
 748:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Selects which edge of the synchronized(and optionally filtered) signal 
 749:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *                          output DXnT of the input stage.
 750:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 751:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 752:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 753:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 754:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the external frequency input for the Baudrate Generator and configures the divider, over
 755:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * the combination mode of the USIC channel. \n\n
 756:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 757:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 758:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetBRGInputClockSource(), XMC_USIC_CH_SetInputTriggerCombinationMode() \n\n\n
 759:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 760:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 761:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 		                                         const uint16_t pdiv,
 762:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 												 const uint32_t oversampling,
 763:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 												 const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode);
 764:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 765:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 766:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 767:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 768:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 769:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 770:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  source Input source select for the input stage. The table below maps the enum value with
 771:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * <table><tr><td>0</td><td>DXnA</td></tr><tr><td>1</td><td>DXnB</td></tr><tr><td>2</td><td>DXnC</t
 772:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * <tr><td>4</td><td>DXnE</td></tr><tr><td>5</td><td>DXnF</td></tr><tr><td>6</td><td>DXnG</td></tr>
 773:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * </tr></table>
 774:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 775:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 776:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 777:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the data source for USIC input stage.\n\n
 778:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects the input data signal source among DXnA, DXnB.. DXnG for the input stage. The API can be
 779:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * like DX0CR, DX1CR etc. 
 780:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *  
 781:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 782:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion(), XMC_USIC_CH_EnableInputDigitalFilter(), XMC_USIC_CH_EnableIn
 783:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSamplingFreq()\n\n\n
 784:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 785:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSource(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_INP
 786:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 787:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)((channel->DXCR[input] & (uint32_t)(~USIC_CH_DXCR_DSEL_Msk)) |
 788:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)source << USIC_CH_DXCR_DSEL_Pos));
 789:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 790:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 791:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 792:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 793:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 794:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 795:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 796:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 797:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 798:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is controlled by the
 799:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * protocol pre-processor. \n\n
 800:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 801:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 802:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToDataInput()\n\n\n
 803:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 804:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToPPP(XMC_USIC_CH_t *const channel, const XMC
 805:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 806:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_INSW_Msk;
 807:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 808:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 809:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 810:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 811:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 812:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 813:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 814:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 815:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 816:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 817:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * The input of the data shift unit is connected to
 818:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * the selected data input line. \n\n
 819:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 820:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * This setting is used
 821:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * if the signals are directly derived from an input
 822:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * pin without treatment by the protocol preprocessor.
 823:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 824:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_ConnectInputDataShiftToPPP()\n\n\n
 825:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 826:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_ConnectInputDataShiftToDataInput(XMC_USIC_CH_t *const channel, con
 827:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 828:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_INSW_Msk;
 829:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 830:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 831:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 832:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 833:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 834:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 835:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 836:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 837:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 838:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 839:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input inversion for USIC channel input data signal. \n\n
 840:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 841:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Polarity of the input source can be changed to provide inverted data input.
 842:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 843:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputInversion()\n\n\n
 844:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 845:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC_
 846:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 847:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= USIC_CH_DXCR_DPOL_Msk;
 848:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 849:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 850:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 851:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 852:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 853:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 854:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 855:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 856:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 857:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 858:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input inversion for USIC channel. \n\n
 859:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 860:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Resets the input data polarity for the USIC channel input data signal.
 861:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 862:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputInversion()\n\n\n
 863:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 864:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputInversion(XMC_USIC_CH_t *const channel, const XMC_USIC
 865:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 866:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DPOL_Msk;
 867:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 868:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 869:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 870:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 871:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 872:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 873:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 874:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 875:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables delay compensation. \n\n
 876:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 877:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Delay compensation can be applied to the receive path.
 878:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 879:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableDelayCompensation()\n\n\n
 880:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 881:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableDelayCompensation(XMC_USIC_CH_t *const channel)
 882:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 883:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] |= USIC_CH_DX1CR_DCEN_Msk;
 884:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 885:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 886:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 887:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 888:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 889:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 890:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 891:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 892:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables delay compensation.. \n\n
 893:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 894:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 895:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableDelayCompensation()\n\n\n
 896:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 897:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableDelayCompensation(XMC_USIC_CH_t *const channel)
 898:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 899:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[1U] &=(uint32_t)~USIC_CH_DX1CR_DCEN_Msk;
 900:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 901:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 902:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 903:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 904:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 905:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 906:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 907:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 908:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 909:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 910:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables the input digital filter for USIC channel input data signal. \n\n
 911:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be digitally filtered.
 912:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 913:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 914:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputDigitalFilter()\n\n\n
 915:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 916:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_U
 917:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 918:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |= (uint32_t)USIC_CH_DXCR_DFEN_Msk;
 919:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 920:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 921:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 922:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 923:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 924:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 925:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 926:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 927:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 928:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables the input digital filter for USIC channel input data signal. \n\n
 929:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be digitally filtered.
 930:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 931:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 932:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 933:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 934:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputDigitalFilter(XMC_USIC_CH_t *const channel, const XMC_
 935:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 936:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DFEN_Msk;
 937:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 938:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 939:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 940:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 941:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 942:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 943:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 944:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 945:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 946:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Enables input synchronization for the USIC channel input data signal. \n\n
 947:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will be synchronized with fPERIPH.
 948:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * A noisy signal can be synchronized and filtered by enabling the digital filter.
 949:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 950:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 951:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_DisableInputSync(), XMC_USIC_CH_EnableInputDigitalFilter()\n\n\n
 952:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 953:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_EnableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_IN
 954:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 955:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] |=(uint32_t)USIC_CH_DXCR_DSEN_Msk;
 956:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 957:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 958:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 959:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 960:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 961:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 962:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 963:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 964:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 965:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Disables input synchronization for the USIC channel input data signal. \n\n
 966:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Input data signal from the selected multiplexer will not be synchronized.
 967:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 968:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 969:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_DisableInputDigitalFilter() \n\n\n
 970:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 971:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_DisableInputSync(XMC_USIC_CH_t *const channel, const XMC_USIC_CH_I
 972:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 973:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] &=(uint32_t)~USIC_CH_DXCR_DSEN_Msk;
 974:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 975:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 976:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 977:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
 978:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
 979:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
 980:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  sampling_freq Sampling frequency value of type \a XMC_USIC_CH_INPUT_SAMPLING_FREQ_t.
 981:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
 982:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 983:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
 984:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets sampling frequency for USIC channel input data signal. \n\n
 985:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
 986:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
 987:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
 988:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
 989:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputSamplingFreq(XMC_USIC_CH_t *const channel,
 990:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_t input,
 991:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 		                                              const XMC_USIC_CH_INPUT_SAMPLING_FREQ_t sampling_fr
 992:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
 993:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_SFSEL_Msk)) |
 994:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)sampling_freq);
 995:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 996:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
 997:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
 998:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
 999:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1000:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  input USIC channel input stage of type @ref XMC_USIC_CH_INPUT_t. \n
1001:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				 \b Range: @ref XMC_USIC_CH_INPUT_DX0 to @ref XMC_USIC_CH_INPUT_DX5
1002:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  combination_mode Combination mode value of type \a XMC_USIC_CH_INPUT_COMBINATION_MODE_t.
1003:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1004:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
1005:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1006:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Selects which edge of the synchronized signal DXnS activates the trigger output DXnT of the inpu
1007:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
1008:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1009:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputSource(), XMC_USIC_CH_EnableInputSync(), XMC_USIC_CH_EnableInputDigitalFilte
1010:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
1011:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetInputTriggerCombinationMode(XMC_USIC_CH_t *const channel,
1012:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_t input,
1013:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 		                                                        const XMC_USIC_CH_INPUT_COMBINATION_MODE_
1014:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
  25              	 .loc 1 1014 0
  26              	 .cfi_startproc
  27 0000 80B5     	 push {r7,lr}
  28              	.LCFI0:
  29              	 .cfi_def_cfa_offset 8
  30              	 .cfi_offset 7,-8
  31              	 .cfi_offset 14,-4
  32 0002 82B0     	 sub sp,sp,#8
  33              	.LCFI1:
  34              	 .cfi_def_cfa_offset 16
  35 0004 00AF     	 add r7,sp,#0
  36              	.LCFI2:
  37              	 .cfi_def_cfa_register 7
  38 0006 7860     	 str r0,[r7,#4]
  39 0008 081C     	 mov r0,r1
  40 000a 111C     	 mov r1,r2
  41 000c FB1C     	 add r3,r7,#3
  42 000e 021C     	 add r2,r0,#0
  43 0010 1A70     	 strb r2,[r3]
  44 0012 BB1C     	 add r3,r7,#2
  45 0014 0A1C     	 add r2,r1,#0
  46 0016 1A70     	 strb r2,[r3]
1015:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  47              	 .loc 1 1015 0
  48 0018 FB1C     	 add r3,r7,#3
  49 001a 1878     	 ldrb r0,[r3]
  50 001c FB1C     	 add r3,r7,#3
  51 001e 1B78     	 ldrb r3,[r3]
  52 0020 7A68     	 ldr r2,[r7,#4]
  53 0022 0633     	 add r3,r3,#6
  54 0024 9B00     	 lsl r3,r3,#2
  55 0026 D318     	 add r3,r2,r3
  56 0028 5B68     	 ldr r3,[r3,#4]
  57 002a 074A     	 ldr r2,.L2
  58 002c 1A40     	 and r2,r3
1016:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****                          ((uint32_t)combination_mode << USIC_CH_DXCR_CM_Pos);
  59              	 .loc 1 1016 0
  60 002e BB1C     	 add r3,r7,#2
  61 0030 1B78     	 ldrb r3,[r3]
  62 0032 9B02     	 lsl r3,r3,#10
1015:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->DXCR[input] = (uint32_t)(channel->DXCR[input] & (~USIC_CH_DXCR_CM_Msk)) |
  63              	 .loc 1 1015 0
  64 0034 1A43     	 orr r2,r3
  65 0036 7968     	 ldr r1,[r7,#4]
  66 0038 831D     	 add r3,r0,#6
  67 003a 9B00     	 lsl r3,r3,#2
  68 003c CB18     	 add r3,r1,r3
  69 003e 5A60     	 str r2,[r3,#4]
1017:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
  70              	 .loc 1 1017 0
  71 0040 BD46     	 mov sp,r7
  72 0042 02B0     	 add sp,sp,#8
  73              	 
  74 0044 80BD     	 pop {r7,pc}
  75              	.L3:
  76 0046 C046     	 .align 2
  77              	.L2:
  78 0048 FFF3FFFF 	 .word -3073
  79              	 .cfi_endproc
  80              	.LFE61:
  82              	 .section .text.XMC_USIC_CH_SetBRGInputClockSource,"ax",%progbits
  83              	 .align 2
  84              	 .code 16
  85              	 .thumb_func
  87              	XMC_USIC_CH_SetBRGInputClockSource:
  88              	.LFB62:
1018:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** 
1019:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** /**
1020:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  channel Pointer to USIC channel handler of type @ref XMC_USIC_CH_t \n
1021:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * 				   \b Range: @ref XMC_USIC0_CH0, @ref XMC_USIC0_CH1 to @ref XMC_USIC2_CH1 based on device su
1022:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @param  clock_source clock source for the BRG.
1023:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * @return None
1024:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
1025:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Description</b><br>
1026:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * Sets the clock source for the BRG. \n\n
1027:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  *
1028:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * \par<b>Related APIs:</b><BR>
1029:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  * XMC_USIC_CH_SetInputTriggerCombinationMode(), XMC_USIC_CH_SetExternalClockBRGDivider()\n\n\n
1030:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****  */
1031:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** __STATIC_INLINE void XMC_USIC_CH_SetBRGInputClockSource(XMC_USIC_CH_t *const channel, const XMC_USI
1032:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** {
  89              	 .loc 1 1032 0
  90              	 .cfi_startproc
  91 0000 80B5     	 push {r7,lr}
  92              	.LCFI3:
  93              	 .cfi_def_cfa_offset 8
  94              	 .cfi_offset 7,-8
  95              	 .cfi_offset 14,-4
  96 0002 82B0     	 sub sp,sp,#8
  97              	.LCFI4:
  98              	 .cfi_def_cfa_offset 16
  99 0004 00AF     	 add r7,sp,#0
 100              	.LCFI5:
 101              	 .cfi_def_cfa_register 7
 102 0006 7860     	 str r0,[r7,#4]
 103 0008 0A1C     	 mov r2,r1
 104 000a FB1C     	 add r3,r7,#3
 105 000c 1A70     	 strb r2,[r3]
1033:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h ****   channel->BRG = (uint32_t)(channel->BRG & (~USIC_CH_BRG_CLKSEL_Msk)) | (uint32_t)(clock_source);
 106              	 .loc 1 1033 0
 107 000e 7B68     	 ldr r3,[r7,#4]
 108 0010 5B69     	 ldr r3,[r3,#20]
 109 0012 0322     	 mov r2,#3
 110 0014 9343     	 bic r3,r2
 111 0016 1A1C     	 mov r2,r3
 112 0018 FB1C     	 add r3,r7,#3
 113 001a 1B78     	 ldrb r3,[r3]
 114 001c 1A43     	 orr r2,r3
 115 001e 7B68     	 ldr r3,[r7,#4]
 116 0020 5A61     	 str r2,[r3,#20]
1034:C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc\xmc_usic.h **** }
 117              	 .loc 1 1034 0
 118 0022 BD46     	 mov sp,r7
 119 0024 02B0     	 add sp,sp,#8
 120              	 
 121 0026 80BD     	 pop {r7,pc}
 122              	 .cfi_endproc
 123              	.LFE62:
 125              	 .section .text.XMC_USIC_CH_Enable,"ax",%progbits
 126              	 .align 2
 127              	 .global XMC_USIC_CH_Enable
 128              	 .code 16
 129              	 .thumb_func
 131              	XMC_USIC_CH_Enable:
 132              	.LFB128:
 133              	 .file 2 "../Libraries/XMCLib/src/xmc_usic.c"
   1:../Libraries/XMCLib/src/xmc_usic.c **** /**
   2:../Libraries/XMCLib/src/xmc_usic.c ****  * @file xmc_usic.c
   3:../Libraries/XMCLib/src/xmc_usic.c ****  * @date 2019-07-01
   4:../Libraries/XMCLib/src/xmc_usic.c ****  *
   5:../Libraries/XMCLib/src/xmc_usic.c ****  * @cond
   6:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
   7:../Libraries/XMCLib/src/xmc_usic.c ****  * XMClib v2.1.24 - XMC Peripheral Driver Library 
   8:../Libraries/XMCLib/src/xmc_usic.c ****  *
   9:../Libraries/XMCLib/src/xmc_usic.c ****  * Copyright (c) 2015-2019, Infineon Technologies AG
  10:../Libraries/XMCLib/src/xmc_usic.c ****  * All rights reserved.                        
  11:../Libraries/XMCLib/src/xmc_usic.c ****  *                                             
  12:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistribution and use in source and binary forms, with or without modification,are permitted pr
  13:../Libraries/XMCLib/src/xmc_usic.c ****  * following conditions are met:   
  14:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  15:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions of source code must retain the above copyright notice, this list of conditions a
  16:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer.                        
  17:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  18:../Libraries/XMCLib/src/xmc_usic.c ****  * Redistributions in binary form must reproduce the above copyright notice, this list of condition
  19:../Libraries/XMCLib/src/xmc_usic.c ****  * disclaimer in the documentation and/or other materials provided with the distribution.          
  20:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  21:../Libraries/XMCLib/src/xmc_usic.c ****  * Neither the name of the copyright holders nor the names of its contributors may be used to endor
  22:../Libraries/XMCLib/src/xmc_usic.c ****  * products derived from this software without specific prior written permission.                  
  23:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  24:../Libraries/XMCLib/src/xmc_usic.c ****  * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR I
  25:../Libraries/XMCLib/src/xmc_usic.c ****  * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTI
  26:../Libraries/XMCLib/src/xmc_usic.c ****  * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE  FOR ANY DIRECT, IN
  27:../Libraries/XMCLib/src/xmc_usic.c ****  * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBS
  28:../Libraries/XMCLib/src/xmc_usic.c ****  * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THE
  29:../Libraries/XMCLib/src/xmc_usic.c ****  * WHETHER IN CONTRACT, STRICT LIABILITY,OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY
  30:../Libraries/XMCLib/src/xmc_usic.c ****  * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.                            
  31:../Libraries/XMCLib/src/xmc_usic.c ****  *                                                                              
  32:../Libraries/XMCLib/src/xmc_usic.c ****  * To improve the quality of the software, users are encouraged to share modifications, enhancement
  33:../Libraries/XMCLib/src/xmc_usic.c ****  * Infineon Technologies AG dave@infineon.com).                                                    
  34:../Libraries/XMCLib/src/xmc_usic.c ****  **************************************************************************************************
  35:../Libraries/XMCLib/src/xmc_usic.c ****  *
  36:../Libraries/XMCLib/src/xmc_usic.c ****  * Change History
  37:../Libraries/XMCLib/src/xmc_usic.c ****  * --------------
  38:../Libraries/XMCLib/src/xmc_usic.c ****  *
  39:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-02-20:
  40:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Initial draft <br>
  41:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Documentation improved <br>
  42:../Libraries/XMCLib/src/xmc_usic.c ****  *
  43:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-05-08:
  44:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Clearing bit fields PDIV, PCTQ, PPPEN in XMC_USIC_CH_SetBaudrate() API <br>
  45:../Libraries/XMCLib/src/xmc_usic.c ****  *      
  46:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-06-20:
  47:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Removed version macros and declaration of GetDriverVersion API <br>
  48:../Libraries/XMCLib/src/xmc_usic.c ****  *
  49:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-27:
  50:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added APIs for external input for BRG configuration:XMC_USIC_CH_ConfigExternalInputSignalT
  51:../Libraries/XMCLib/src/xmc_usic.c ****  *
  52:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-08-28:
  53:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added asserts to XMC_USIC_CH_ConfigExternalInputSignalToBRG() <br>
  54:../Libraries/XMCLib/src/xmc_usic.c ****  *
  55:../Libraries/XMCLib/src/xmc_usic.c ****  * 2015-09-01:
  56:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Fixed warning in the asserts <br>
  57:../Libraries/XMCLib/src/xmc_usic.c ****  *
  58:../Libraries/XMCLib/src/xmc_usic.c ****  * 2018-09-29:
  59:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_SetBaudrateEx which uses the integer divider instead of the fractional d
  60:../Libraries/XMCLib/src/xmc_usic.c ****  * 
  61:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-03-30:
  62:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Changed XMC_USIC_Enable() adding polling to check clock ungate
  63:../Libraries/XMCLib/src/xmc_usic.c ****  *
  64:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-05-07:
  65:../Libraries/XMCLib/src/xmc_usic.c ****  *     - Added XMC_USIC_CH_GetBaudrate(), XMC_USIC_CH_GetSCLKFrequency() and XMC_USIC_CH_GetMCLKFre
  66:../Libraries/XMCLib/src/xmc_usic.c ****  *
  67:../Libraries/XMCLib/src/xmc_usic.c ****  * 2019-07-01:
  68:../Libraries/XMCLib/src/xmc_usic.c ****  *     - XMC_USIC_CH_SetBaudrateEx() change type of input parameters
  69:../Libraries/XMCLib/src/xmc_usic.c ****  *
  70:../Libraries/XMCLib/src/xmc_usic.c ****  * @endcond
  71:../Libraries/XMCLib/src/xmc_usic.c ****  *
  72:../Libraries/XMCLib/src/xmc_usic.c ****  */
  73:../Libraries/XMCLib/src/xmc_usic.c **** 
  74:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  75:../Libraries/XMCLib/src/xmc_usic.c ****  * HEADER FILES
  76:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  77:../Libraries/XMCLib/src/xmc_usic.c **** 
  78:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_usic.h"
  79:../Libraries/XMCLib/src/xmc_usic.c **** #include "xmc_scu.h"
  80:../Libraries/XMCLib/src/xmc_usic.c **** 
  81:../Libraries/XMCLib/src/xmc_usic.c **** #include <stdlib.h>     /* abs */
  82:../Libraries/XMCLib/src/xmc_usic.c **** 
  83:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  84:../Libraries/XMCLib/src/xmc_usic.c ****  * MACROS
  85:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  86:../Libraries/XMCLib/src/xmc_usic.c **** 
  87:../Libraries/XMCLib/src/xmc_usic.c **** #define USIC_CH_INPR_Msk       (0x7UL)
  88:../Libraries/XMCLib/src/xmc_usic.c **** 
  89:../Libraries/XMCLib/src/xmc_usic.c **** /*******************************************************************************
  90:../Libraries/XMCLib/src/xmc_usic.c ****  * API IMPLEMENTATION
  91:../Libraries/XMCLib/src/xmc_usic.c ****  *******************************************************************************/
  92:../Libraries/XMCLib/src/xmc_usic.c **** 
  93:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Enable(XMC_USIC_CH_t *const channel)
  94:../Libraries/XMCLib/src/xmc_usic.c **** {
 134              	 .loc 2 94 0
 135              	 .cfi_startproc
 136 0000 80B5     	 push {r7,lr}
 137              	.LCFI6:
 138              	 .cfi_def_cfa_offset 8
 139              	 .cfi_offset 7,-8
 140              	 .cfi_offset 14,-4
 141 0002 82B0     	 sub sp,sp,#8
 142              	.LCFI7:
 143              	 .cfi_def_cfa_offset 16
 144 0004 00AF     	 add r7,sp,#0
 145              	.LCFI8:
 146              	 .cfi_def_cfa_register 7
 147 0006 7860     	 str r0,[r7,#4]
  95:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_Enable: channel not valid", XMC_USIC_IsChannelValid(channel));
  96:../Libraries/XMCLib/src/xmc_usic.c **** 
  97:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel == XMC_USIC0_CH0) || (channel == XMC_USIC0_CH1))
 148              	 .loc 2 97 0
 149 0008 7A68     	 ldr r2,[r7,#4]
 150 000a 9023     	 mov r3,#144
 151 000c DB05     	 lsl r3,r3,#23
 152 000e 9A42     	 cmp r2,r3
 153 0010 03D0     	 beq .L6
 154              	 .loc 2 97 0 is_stmt 0 discriminator 1
 155 0012 7B68     	 ldr r3,[r7,#4]
 156 0014 134A     	 ldr r2,.L11
 157 0016 9342     	 cmp r3,r2
 158 0018 04D1     	 bne .L7
 159              	.L6:
  98:../Libraries/XMCLib/src/xmc_usic.c ****   {
  99:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC0);
 160              	 .loc 2 99 0 is_stmt 1
 161 001a 134B     	 ldr r3,.L11+4
 162 001c 181C     	 mov r0,r3
 163 001e FFF7FEFF 	 bl XMC_USIC_Enable
 164 0022 0BE0     	 b .L8
 165              	.L7:
 100:../Libraries/XMCLib/src/xmc_usic.c ****   }
 101:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)
 102:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC1_CH0) || (channel == XMC_USIC1_CH1))
 166              	 .loc 2 102 0
 167 0024 7B68     	 ldr r3,[r7,#4]
 168 0026 114A     	 ldr r2,.L11+8
 169 0028 9342     	 cmp r3,r2
 170 002a 03D0     	 beq .L9
 171              	 .loc 2 102 0 is_stmt 0 discriminator 1
 172 002c 7B68     	 ldr r3,[r7,#4]
 173 002e 104A     	 ldr r2,.L11+12
 174 0030 9342     	 cmp r3,r2
 175 0032 03D1     	 bne .L8
 176              	.L9:
 103:../Libraries/XMCLib/src/xmc_usic.c ****   {
 104:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC1);
 177              	 .loc 2 104 0 is_stmt 1
 178 0034 0F4B     	 ldr r3,.L11+16
 179 0036 181C     	 mov r0,r3
 180 0038 FFF7FEFF 	 bl XMC_USIC_Enable
 181              	.L8:
 105:../Libraries/XMCLib/src/xmc_usic.c ****   }
 106:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 107:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)
 108:../Libraries/XMCLib/src/xmc_usic.c ****   else if((channel == XMC_USIC2_CH0) || (channel == XMC_USIC2_CH1))
 109:../Libraries/XMCLib/src/xmc_usic.c ****   {
 110:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_USIC_Enable(XMC_USIC2);
 111:../Libraries/XMCLib/src/xmc_usic.c ****   }
 112:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 113:../Libraries/XMCLib/src/xmc_usic.c ****   else
 114:../Libraries/XMCLib/src/xmc_usic.c ****   {
 115:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0U/*Always*/);
 116:../Libraries/XMCLib/src/xmc_usic.c ****   }
 117:../Libraries/XMCLib/src/xmc_usic.c **** 
 118:../Libraries/XMCLib/src/xmc_usic.c ****   /* USIC channel switched on*/
 119:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (USIC_CH_KSCFG_MODEN_Msk | USIC_CH_KSCFG_BPMODEN_Msk);
 182              	 .loc 2 119 0
 183 003c 7B68     	 ldr r3,[r7,#4]
 184 003e 0322     	 mov r2,#3
 185 0040 DA60     	 str r2,[r3,#12]
 120:../Libraries/XMCLib/src/xmc_usic.c ****   while ((channel->KSCFG & USIC_CH_KSCFG_MODEN_Msk) == 0U)
 186              	 .loc 2 120 0
 187 0042 C046     	 mov r8,r8
 188              	.L10:
 189              	 .loc 2 120 0 is_stmt 0 discriminator 1
 190 0044 7B68     	 ldr r3,[r7,#4]
 191 0046 DB68     	 ldr r3,[r3,#12]
 192 0048 0122     	 mov r2,#1
 193 004a 1340     	 and r3,r2
 194 004c FAD0     	 beq .L10
 121:../Libraries/XMCLib/src/xmc_usic.c ****   {
 122:../Libraries/XMCLib/src/xmc_usic.c ****     /* Wait till the channel is enabled */
 123:../Libraries/XMCLib/src/xmc_usic.c ****   }
 124:../Libraries/XMCLib/src/xmc_usic.c **** 
 125:../Libraries/XMCLib/src/xmc_usic.c ****   /* Set USIC channel in IDLE mode */
 126:../Libraries/XMCLib/src/xmc_usic.c ****   channel->CCR &= (uint32_t)~USIC_CH_CCR_MODE_Msk;
 195              	 .loc 2 126 0 is_stmt 1
 196 004e 7B68     	 ldr r3,[r7,#4]
 197 0050 1B6C     	 ldr r3,[r3,#64]
 198 0052 0F22     	 mov r2,#15
 199 0054 9343     	 bic r3,r2
 200 0056 1A1C     	 mov r2,r3
 201 0058 7B68     	 ldr r3,[r7,#4]
 202 005a 1A64     	 str r2,[r3,#64]
 127:../Libraries/XMCLib/src/xmc_usic.c **** }
 203              	 .loc 2 127 0
 204 005c BD46     	 mov sp,r7
 205 005e 02B0     	 add sp,sp,#8
 206              	 
 207 0060 80BD     	 pop {r7,pc}
 208              	.L12:
 209 0062 C046     	 .align 2
 210              	.L11:
 211 0064 00020048 	 .word 1207960064
 212 0068 08000048 	 .word 1207959560
 213 006c 00400048 	 .word 1207975936
 214 0070 00420048 	 .word 1207976448
 215 0074 08400048 	 .word 1207975944
 216              	 .cfi_endproc
 217              	.LFE128:
 219              	 .section .text.XMC_USIC_CH_Disable,"ax",%progbits
 220              	 .align 2
 221              	 .global XMC_USIC_CH_Disable
 222              	 .code 16
 223              	 .thumb_func
 225              	XMC_USIC_CH_Disable:
 226              	.LFB129:
 128:../Libraries/XMCLib/src/xmc_usic.c **** 
 129:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_Disable(XMC_USIC_CH_t *const channel)
 130:../Libraries/XMCLib/src/xmc_usic.c **** {
 227              	 .loc 2 130 0
 228              	 .cfi_startproc
 229 0000 80B5     	 push {r7,lr}
 230              	.LCFI9:
 231              	 .cfi_def_cfa_offset 8
 232              	 .cfi_offset 7,-8
 233              	 .cfi_offset 14,-4
 234 0002 82B0     	 sub sp,sp,#8
 235              	.LCFI10:
 236              	 .cfi_def_cfa_offset 16
 237 0004 00AF     	 add r7,sp,#0
 238              	.LCFI11:
 239              	 .cfi_def_cfa_register 7
 240 0006 7860     	 str r0,[r7,#4]
 131:../Libraries/XMCLib/src/xmc_usic.c ****   channel->KSCFG = (uint32_t)((channel->KSCFG & (~USIC_CH_KSCFG_MODEN_Msk)) | USIC_CH_KSCFG_BPMODEN
 241              	 .loc 2 131 0
 242 0008 7B68     	 ldr r3,[r7,#4]
 243 000a DB68     	 ldr r3,[r3,#12]
 244 000c 0322     	 mov r2,#3
 245 000e 9343     	 bic r3,r2
 246 0010 0222     	 mov r2,#2
 247 0012 1A43     	 orr r2,r3
 248 0014 7B68     	 ldr r3,[r7,#4]
 249 0016 DA60     	 str r2,[r3,#12]
 132:../Libraries/XMCLib/src/xmc_usic.c **** }
 250              	 .loc 2 132 0
 251 0018 BD46     	 mov sp,r7
 252 001a 02B0     	 add sp,sp,#8
 253              	 
 254 001c 80BD     	 pop {r7,pc}
 255              	 .cfi_endproc
 256              	.LFE129:
 258              	 .global __aeabi_uidiv
 259 001e C046     	 .section .text.XMC_USIC_CH_SetBaudrate,"ax",%progbits
 260              	 .align 2
 261              	 .global XMC_USIC_CH_SetBaudrate
 262              	 .code 16
 263              	 .thumb_func
 265              	XMC_USIC_CH_SetBaudrate:
 266              	.LFB130:
 133:../Libraries/XMCLib/src/xmc_usic.c **** 
 134:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrate(XMC_USIC_CH_t *const channel, uint32_t rate, uint32_t 
 135:../Libraries/XMCLib/src/xmc_usic.c **** {
 267              	 .loc 2 135 0
 268              	 .cfi_startproc
 269 0000 80B5     	 push {r7,lr}
 270              	.LCFI12:
 271              	 .cfi_def_cfa_offset 8
 272              	 .cfi_offset 7,-8
 273              	 .cfi_offset 14,-4
 274 0002 8EB0     	 sub sp,sp,#56
 275              	.LCFI13:
 276              	 .cfi_def_cfa_offset 64
 277 0004 00AF     	 add r7,sp,#0
 278              	.LCFI14:
 279              	 .cfi_def_cfa_register 7
 280 0006 F860     	 str r0,[r7,#12]
 281 0008 B960     	 str r1,[r7,#8]
 282 000a 7A60     	 str r2,[r7,#4]
 136:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 137:../Libraries/XMCLib/src/xmc_usic.c ****   
 138:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t peripheral_clock;
 139:../Libraries/XMCLib/src/xmc_usic.c ****   
 140:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider;
 141:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t clock_divider_min;
 142:../Libraries/XMCLib/src/xmc_usic.c **** 
 143:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv;
 144:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int;
 145:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_int_min;
 146:../Libraries/XMCLib/src/xmc_usic.c ****   
 147:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac;
 148:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv_frac_min;
 149:../Libraries/XMCLib/src/xmc_usic.c **** 
 150:../Libraries/XMCLib/src/xmc_usic.c ****   /* The rate and peripheral clock are divided by 100 to be able to use only 32bit arithmetic */
 151:../Libraries/XMCLib/src/xmc_usic.c ****   if ((rate >= 100U) && (oversampling != 0U))
 283              	 .loc 2 151 0
 284 000c BB68     	 ldr r3,[r7,#8]
 285 000e 632B     	 cmp r3,#99
 286 0010 5CD9     	 bls .L15
 287              	 .loc 2 151 0 is_stmt 0 discriminator 1
 288 0012 7B68     	 ldr r3,[r7,#4]
 289 0014 002B     	 cmp r3,#0
 290 0016 59D0     	 beq .L15
 152:../Libraries/XMCLib/src/xmc_usic.c ****   {
 153:../Libraries/XMCLib/src/xmc_usic.c ****     peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency() / 100U;
 291              	 .loc 2 153 0 is_stmt 1
 292 0018 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 293 001c 031C     	 mov r3,r0
 294 001e 181C     	 mov r0,r3
 295 0020 6421     	 mov r1,#100
 296 0022 FFF7FEFF 	 bl __aeabi_uidiv
 297 0026 031C     	 mov r3,r0
 298 0028 3B62     	 str r3,[r7,#32]
 154:../Libraries/XMCLib/src/xmc_usic.c ****     rate = rate / 100U;
 299              	 .loc 2 154 0
 300 002a BB68     	 ldr r3,[r7,#8]
 301 002c 181C     	 mov r0,r3
 302 002e 6421     	 mov r1,#100
 303 0030 FFF7FEFF 	 bl __aeabi_uidiv
 304 0034 031C     	 mov r3,r0
 305 0036 BB60     	 str r3,[r7,#8]
 155:../Libraries/XMCLib/src/xmc_usic.c **** 
 156:../Libraries/XMCLib/src/xmc_usic.c ****     clock_divider_min = 1U;
 306              	 .loc 2 156 0
 307 0038 0123     	 mov r3,#1
 308 003a FB62     	 str r3,[r7,#44]
 157:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_int_min = 1U;
 309              	 .loc 2 157 0
 310 003c 0123     	 mov r3,#1
 311 003e BB62     	 str r3,[r7,#40]
 158:../Libraries/XMCLib/src/xmc_usic.c ****     pdiv_frac_min = 0x3ffU;
 312              	 .loc 2 158 0
 313 0040 284B     	 ldr r3,.L21
 314 0042 7B62     	 str r3,[r7,#36]
 159:../Libraries/XMCLib/src/xmc_usic.c **** 
 160:../Libraries/XMCLib/src/xmc_usic.c ****     for(clock_divider = 1023U; clock_divider > 0U; --clock_divider)
 315              	 .loc 2 160 0
 316 0044 274B     	 ldr r3,.L21
 317 0046 3B63     	 str r3,[r7,#48]
 318 0048 24E0     	 b .L16
 319              	.L18:
 161:../Libraries/XMCLib/src/xmc_usic.c ****     {
 162:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv = ((peripheral_clock * clock_divider) / (rate * oversampling));
 320              	 .loc 2 162 0
 321 004a 3B6A     	 ldr r3,[r7,#32]
 322 004c 3A6B     	 ldr r2,[r7,#48]
 323 004e 5A43     	 mul r2,r3
 324 0050 111C     	 mov r1,r2
 325 0052 BB68     	 ldr r3,[r7,#8]
 326 0054 7A68     	 ldr r2,[r7,#4]
 327 0056 5343     	 mul r3,r2
 328 0058 081C     	 mov r0,r1
 329 005a 191C     	 mov r1,r3
 330 005c FFF7FEFF 	 bl __aeabi_uidiv
 331 0060 031C     	 mov r3,r0
 332 0062 FB61     	 str r3,[r7,#28]
 163:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_int = pdiv >> 10U;
 333              	 .loc 2 163 0
 334 0064 FB69     	 ldr r3,[r7,#28]
 335 0066 9B0A     	 lsr r3,r3,#10
 336 0068 BB61     	 str r3,[r7,#24]
 164:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv_frac = pdiv & 0x3ffU;
 337              	 .loc 2 164 0
 338 006a FB69     	 ldr r3,[r7,#28]
 339 006c 9B05     	 lsl r3,r3,#22
 340 006e 9B0D     	 lsr r3,r3,#22
 341 0070 7B61     	 str r3,[r7,#20]
 165:../Libraries/XMCLib/src/xmc_usic.c **** 
 166:../Libraries/XMCLib/src/xmc_usic.c ****       if ((pdiv_int < 1024U) && (pdiv_frac < pdiv_frac_min))
 342              	 .loc 2 166 0
 343 0072 BB69     	 ldr r3,[r7,#24]
 344 0074 1B4A     	 ldr r2,.L21
 345 0076 9342     	 cmp r3,r2
 346 0078 09D8     	 bhi .L17
 347              	 .loc 2 166 0 is_stmt 0 discriminator 1
 348 007a 7A69     	 ldr r2,[r7,#20]
 349 007c 7B6A     	 ldr r3,[r7,#36]
 350 007e 9A42     	 cmp r2,r3
 351 0080 05D2     	 bcs .L17
 167:../Libraries/XMCLib/src/xmc_usic.c ****       {
 168:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_frac_min = pdiv_frac;
 352              	 .loc 2 168 0 is_stmt 1
 353 0082 7B69     	 ldr r3,[r7,#20]
 354 0084 7B62     	 str r3,[r7,#36]
 169:../Libraries/XMCLib/src/xmc_usic.c ****         pdiv_int_min = pdiv_int;
 355              	 .loc 2 169 0
 356 0086 BB69     	 ldr r3,[r7,#24]
 357 0088 BB62     	 str r3,[r7,#40]
 170:../Libraries/XMCLib/src/xmc_usic.c ****         clock_divider_min = clock_divider;
 358              	 .loc 2 170 0
 359 008a 3B6B     	 ldr r3,[r7,#48]
 360 008c FB62     	 str r3,[r7,#44]
 361              	.L17:
 160:../Libraries/XMCLib/src/xmc_usic.c ****     {
 362              	 .loc 2 160 0 discriminator 2
 363 008e 3B6B     	 ldr r3,[r7,#48]
 364 0090 013B     	 sub r3,r3,#1
 365 0092 3B63     	 str r3,[r7,#48]
 366              	.L16:
 160:../Libraries/XMCLib/src/xmc_usic.c ****     {
 367              	 .loc 2 160 0 is_stmt 0 discriminator 1
 368 0094 3B6B     	 ldr r3,[r7,#48]
 369 0096 002B     	 cmp r3,#0
 370 0098 D7D1     	 bne .L18
 171:../Libraries/XMCLib/src/xmc_usic.c ****       }
 172:../Libraries/XMCLib/src/xmc_usic.c ****     }
 173:../Libraries/XMCLib/src/xmc_usic.c **** 
 174:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL |
 371              	 .loc 2 174 0 is_stmt 1
 372 009a FB6A     	 ldr r3,[r7,#44]
 373 009c 8022     	 mov r2,#128
 374 009e 1202     	 lsl r2,r2,#8
 375 00a0 1A43     	 orr r2,r3
 376 00a2 FB68     	 ldr r3,[r7,#12]
 377 00a4 1A61     	 str r2,[r3,#16]
 175:../Libraries/XMCLib/src/xmc_usic.c ****                    (clock_divider_min << USIC_CH_FDR_STEP_Pos);
 176:../Libraries/XMCLib/src/xmc_usic.c **** 
 177:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 378              	 .loc 2 177 0
 379 00a6 FB68     	 ldr r3,[r7,#12]
 380 00a8 5B69     	 ldr r3,[r3,#20]
 381 00aa 0F4A     	 ldr r2,.L21+4
 382 00ac 1A40     	 and r2,r3
 178:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 179:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 180:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 181:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 383              	 .loc 2 181 0
 384 00ae 7B68     	 ldr r3,[r7,#4]
 385 00b0 013B     	 sub r3,r3,#1
 386 00b2 9B02     	 lsl r3,r3,#10
 180:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 387              	 .loc 2 180 0
 388 00b4 1A43     	 orr r2,r3
 182:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 389              	 .loc 2 182 0
 390 00b6 BB6A     	 ldr r3,[r7,#40]
 391 00b8 013B     	 sub r3,r3,#1
 392 00ba 1B04     	 lsl r3,r3,#16
 181:../Libraries/XMCLib/src/xmc_usic.c ****                    ((pdiv_int_min - 1U) << USIC_CH_BRG_PDIV_Pos);
 393              	 .loc 2 181 0
 394 00bc 1A43     	 orr r2,r3
 177:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 395              	 .loc 2 177 0
 396 00be FB68     	 ldr r3,[r7,#12]
 397 00c0 5A61     	 str r2,[r3,#20]
 183:../Libraries/XMCLib/src/xmc_usic.c ****                     
 184:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 398              	 .loc 2 184 0
 399 00c2 3723     	 mov r3,#55
 400 00c4 FB18     	 add r3,r7,r3
 401 00c6 0022     	 mov r2,#0
 402 00c8 1A70     	 strb r2,[r3]
 403 00ca 03E0     	 b .L19
 404              	.L15:
 185:../Libraries/XMCLib/src/xmc_usic.c ****   }
 186:../Libraries/XMCLib/src/xmc_usic.c ****   else 
 187:../Libraries/XMCLib/src/xmc_usic.c ****   {
 188:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 405              	 .loc 2 188 0
 406 00cc 3723     	 mov r3,#55
 407 00ce FB18     	 add r3,r7,r3
 408 00d0 0122     	 mov r2,#1
 409 00d2 1A70     	 strb r2,[r3]
 410              	.L19:
 189:../Libraries/XMCLib/src/xmc_usic.c ****   }
 190:../Libraries/XMCLib/src/xmc_usic.c ****   
 191:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 411              	 .loc 2 191 0
 412 00d4 3723     	 mov r3,#55
 413 00d6 FB18     	 add r3,r7,r3
 414 00d8 1B78     	 ldrb r3,[r3]
 192:../Libraries/XMCLib/src/xmc_usic.c **** }
 415              	 .loc 2 192 0
 416 00da 181C     	 mov r0,r3
 417 00dc BD46     	 mov sp,r7
 418 00de 0EB0     	 add sp,sp,#56
 419              	 
 420 00e0 80BD     	 pop {r7,pc}
 421              	.L22:
 422 00e2 C046     	 .align 2
 423              	.L21:
 424 00e4 FF030000 	 .word 1023
 425 00e8 EF8000FC 	 .word -67075857
 426              	 .cfi_endproc
 427              	.LFE130:
 429              	 .global __aeabi_idiv
 430              	 .section .text.XMC_USIC_CH_SetBaudrateEx,"ax",%progbits
 431              	 .align 2
 432              	 .global XMC_USIC_CH_SetBaudrateEx
 433              	 .code 16
 434              	 .thumb_func
 436              	XMC_USIC_CH_SetBaudrateEx:
 437              	.LFB131:
 193:../Libraries/XMCLib/src/xmc_usic.c **** 
 194:../Libraries/XMCLib/src/xmc_usic.c **** XMC_USIC_CH_STATUS_t XMC_USIC_CH_SetBaudrateEx(XMC_USIC_CH_t *const channel, int32_t rate, int32_t 
 195:../Libraries/XMCLib/src/xmc_usic.c **** {
 438              	 .loc 2 195 0
 439              	 .cfi_startproc
 440 0000 80B5     	 push {r7,lr}
 441              	.LCFI15:
 442              	 .cfi_def_cfa_offset 8
 443              	 .cfi_offset 7,-8
 444              	 .cfi_offset 14,-4
 445 0002 8CB0     	 sub sp,sp,#48
 446              	.LCFI16:
 447              	 .cfi_def_cfa_offset 56
 448 0004 00AF     	 add r7,sp,#0
 449              	.LCFI17:
 450              	 .cfi_def_cfa_register 7
 451 0006 F860     	 str r0,[r7,#12]
 452 0008 B960     	 str r1,[r7,#8]
 453 000a 7A60     	 str r2,[r7,#4]
 196:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t peripheral_clock = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 454              	 .loc 2 196 0
 455 000c FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 456 0010 031C     	 mov r3,r0
 457 0012 3B62     	 str r3,[r7,#32]
 197:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t brg_clock = rate * oversampling;
 458              	 .loc 2 197 0
 459 0014 BB68     	 ldr r3,[r7,#8]
 460 0016 7A68     	 ldr r2,[r7,#4]
 461 0018 5343     	 mul r3,r2
 462 001a FB61     	 str r3,[r7,#28]
 198:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_upper;
 199:../Libraries/XMCLib/src/xmc_usic.c ****   int32_t actual_rate_lower;
 200:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t pdiv = 1;
 463              	 .loc 2 200 0
 464 001c 0123     	 mov r3,#1
 465 001e FB62     	 str r3,[r7,#44]
 201:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider_step;
 202:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_STATUS_t status;
 203:../Libraries/XMCLib/src/xmc_usic.c **** 
 204:../Libraries/XMCLib/src/xmc_usic.c ****   if (peripheral_clock > brg_clock)
 466              	 .loc 2 204 0
 467 0020 3A6A     	 ldr r2,[r7,#32]
 468 0022 FB69     	 ldr r3,[r7,#28]
 469 0024 9A42     	 cmp r2,r3
 470 0026 62DD     	 ble .L24
 205:../Libraries/XMCLib/src/xmc_usic.c ****   {
 206:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 471              	 .loc 2 206 0
 472 0028 386A     	 ldr r0,[r7,#32]
 473 002a F969     	 ldr r1,[r7,#28]
 474 002c FFF7FEFF 	 bl __aeabi_idiv
 475 0030 031C     	 mov r3,r0
 476 0032 BB62     	 str r3,[r7,#40]
 207:../Libraries/XMCLib/src/xmc_usic.c ****     while (divider_step >= 1023)
 477              	 .loc 2 207 0
 478 0034 0FE0     	 b .L25
 479              	.L26:
 208:../Libraries/XMCLib/src/xmc_usic.c ****     {
 209:../Libraries/XMCLib/src/xmc_usic.c ****       pdiv++;
 480              	 .loc 2 209 0
 481 0036 FB6A     	 ldr r3,[r7,#44]
 482 0038 0133     	 add r3,r3,#1
 483 003a FB62     	 str r3,[r7,#44]
 210:../Libraries/XMCLib/src/xmc_usic.c ****       brg_clock = rate * oversampling * pdiv;
 484              	 .loc 2 210 0
 485 003c BB68     	 ldr r3,[r7,#8]
 486 003e 7A68     	 ldr r2,[r7,#4]
 487 0040 5343     	 mul r3,r2
 488 0042 1A1C     	 mov r2,r3
 489 0044 FB6A     	 ldr r3,[r7,#44]
 490 0046 5343     	 mul r3,r2
 491 0048 FB61     	 str r3,[r7,#28]
 211:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step = peripheral_clock / brg_clock; // integer division gets truncated
 492              	 .loc 2 211 0
 493 004a 386A     	 ldr r0,[r7,#32]
 494 004c F969     	 ldr r1,[r7,#28]
 495 004e FFF7FEFF 	 bl __aeabi_idiv
 496 0052 031C     	 mov r3,r0
 497 0054 BB62     	 str r3,[r7,#40]
 498              	.L25:
 207:../Libraries/XMCLib/src/xmc_usic.c ****     {
 499              	 .loc 2 207 0
 500 0056 BB6A     	 ldr r3,[r7,#40]
 501 0058 2A4A     	 ldr r2,.L30
 502 005a 9342     	 cmp r3,r2
 503 005c EBD8     	 bhi .L26
 212:../Libraries/XMCLib/src/xmc_usic.c ****     }
 213:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_upper = peripheral_clock / (divider_step * oversampling * pdiv);
 504              	 .loc 2 213 0
 505 005e 396A     	 ldr r1,[r7,#32]
 506 0060 7B68     	 ldr r3,[r7,#4]
 507 0062 BA6A     	 ldr r2,[r7,#40]
 508 0064 5343     	 mul r3,r2
 509 0066 FA6A     	 ldr r2,[r7,#44]
 510 0068 5343     	 mul r3,r2
 511 006a 081C     	 mov r0,r1
 512 006c 191C     	 mov r1,r3
 513 006e FFF7FEFF 	 bl __aeabi_uidiv
 514 0072 031C     	 mov r3,r0
 515 0074 BB61     	 str r3,[r7,#24]
 214:../Libraries/XMCLib/src/xmc_usic.c ****     actual_rate_lower = peripheral_clock / ((divider_step + 1) * oversampling * pdiv);
 516              	 .loc 2 214 0
 517 0076 396A     	 ldr r1,[r7,#32]
 518 0078 BB6A     	 ldr r3,[r7,#40]
 519 007a 0133     	 add r3,r3,#1
 520 007c 7A68     	 ldr r2,[r7,#4]
 521 007e 5343     	 mul r3,r2
 522 0080 FA6A     	 ldr r2,[r7,#44]
 523 0082 5343     	 mul r3,r2
 524 0084 081C     	 mov r0,r1
 525 0086 191C     	 mov r1,r3
 526 0088 FFF7FEFF 	 bl __aeabi_uidiv
 527 008c 031C     	 mov r3,r0
 528 008e 7B61     	 str r3,[r7,#20]
 215:../Libraries/XMCLib/src/xmc_usic.c **** 
 216:../Libraries/XMCLib/src/xmc_usic.c ****     // choose better approximation if the peripheral frequency is not a multiple of the baudrate
 217:../Libraries/XMCLib/src/xmc_usic.c ****     if (abs(rate - actual_rate_lower) < abs(rate - actual_rate_upper))
 529              	 .loc 2 217 0
 530 0090 BA68     	 ldr r2,[r7,#8]
 531 0092 7B69     	 ldr r3,[r7,#20]
 532 0094 D31A     	 sub r3,r2,r3
 533 0096 D917     	 asr r1,r3,#31
 534 0098 5A18     	 add r2,r3,r1
 535 009a 4A40     	 eor r2,r1
 536 009c B968     	 ldr r1,[r7,#8]
 537 009e BB69     	 ldr r3,[r7,#24]
 538 00a0 CB1A     	 sub r3,r1,r3
 539 00a2 D917     	 asr r1,r3,#31
 540 00a4 5B18     	 add r3,r3,r1
 541 00a6 4B40     	 eor r3,r1
 542 00a8 9A42     	 cmp r2,r3
 543 00aa 02DA     	 bge .L27
 218:../Libraries/XMCLib/src/xmc_usic.c ****     {
 219:../Libraries/XMCLib/src/xmc_usic.c ****       divider_step += 1;
 544              	 .loc 2 219 0
 545 00ac BB6A     	 ldr r3,[r7,#40]
 546 00ae 0133     	 add r3,r3,#1
 547 00b0 BB62     	 str r3,[r7,#40]
 548              	.L27:
 220:../Libraries/XMCLib/src/xmc_usic.c ****     }
 221:../Libraries/XMCLib/src/xmc_usic.c **** 
 222:../Libraries/XMCLib/src/xmc_usic.c ****     divider_step = 1024 - divider_step;
 549              	 .loc 2 222 0
 550 00b2 BB6A     	 ldr r3,[r7,#40]
 551 00b4 8022     	 mov r2,#128
 552 00b6 D200     	 lsl r2,r2,#3
 553 00b8 D31A     	 sub r3,r2,r3
 554 00ba BB62     	 str r3,[r7,#40]
 223:../Libraries/XMCLib/src/xmc_usic.c **** 
 224:../Libraries/XMCLib/src/xmc_usic.c **** 
 225:../Libraries/XMCLib/src/xmc_usic.c ****     channel->FDR = XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_NORMAL |
 555              	 .loc 2 225 0
 556 00bc BB6A     	 ldr r3,[r7,#40]
 557 00be 8022     	 mov r2,#128
 558 00c0 D201     	 lsl r2,r2,#7
 559 00c2 1A43     	 orr r2,r3
 560 00c4 FB68     	 ldr r3,[r7,#12]
 561 00c6 1A61     	 str r2,[r3,#16]
 226:../Libraries/XMCLib/src/xmc_usic.c ****                    (divider_step << USIC_CH_FDR_STEP_Pos);
 227:../Libraries/XMCLib/src/xmc_usic.c **** 
 228:../Libraries/XMCLib/src/xmc_usic.c ****     channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 562              	 .loc 2 228 0
 563 00c8 FB68     	 ldr r3,[r7,#12]
 564 00ca 5B69     	 ldr r3,[r3,#20]
 565 00cc 0E4A     	 ldr r2,.L30+4
 566 00ce 1A40     	 and r2,r3
 229:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 230:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PCTQ_Msk |
 231:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PPPEN_Msk)) |
 232:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 567              	 .loc 2 232 0
 568 00d0 7B68     	 ldr r3,[r7,#4]
 569 00d2 013B     	 sub r3,r3,#1
 570 00d4 9B02     	 lsl r3,r3,#10
 231:../Libraries/XMCLib/src/xmc_usic.c ****                    ((oversampling - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 571              	 .loc 2 231 0
 572 00d6 1A43     	 orr r2,r3
 233:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 573              	 .loc 2 233 0
 574 00d8 FB6A     	 ldr r3,[r7,#44]
 575 00da 013B     	 sub r3,r3,#1
 576 00dc 1B04     	 lsl r3,r3,#16
 232:../Libraries/XMCLib/src/xmc_usic.c **** 				   ((pdiv -1) << USIC_CH_BRG_PDIV_Pos);
 577              	 .loc 2 232 0
 578 00de 1A43     	 orr r2,r3
 228:../Libraries/XMCLib/src/xmc_usic.c ****                                      USIC_CH_BRG_PDIV_Msk |
 579              	 .loc 2 228 0
 580 00e0 FB68     	 ldr r3,[r7,#12]
 581 00e2 5A61     	 str r2,[r3,#20]
 234:../Libraries/XMCLib/src/xmc_usic.c **** 
 235:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_OK;
 582              	 .loc 2 235 0
 583 00e4 2723     	 mov r3,#39
 584 00e6 FB18     	 add r3,r7,r3
 585 00e8 0022     	 mov r2,#0
 586 00ea 1A70     	 strb r2,[r3]
 587 00ec 03E0     	 b .L28
 588              	.L24:
 236:../Libraries/XMCLib/src/xmc_usic.c ****   }
 237:../Libraries/XMCLib/src/xmc_usic.c ****   else
 238:../Libraries/XMCLib/src/xmc_usic.c ****   {
 239:../Libraries/XMCLib/src/xmc_usic.c ****     status = XMC_USIC_CH_STATUS_ERROR;
 589              	 .loc 2 239 0
 590 00ee 2723     	 mov r3,#39
 591 00f0 FB18     	 add r3,r7,r3
 592 00f2 0122     	 mov r2,#1
 593 00f4 1A70     	 strb r2,[r3]
 594              	.L28:
 240:../Libraries/XMCLib/src/xmc_usic.c ****   }
 241:../Libraries/XMCLib/src/xmc_usic.c **** 
 242:../Libraries/XMCLib/src/xmc_usic.c ****   return status;
 595              	 .loc 2 242 0
 596 00f6 2723     	 mov r3,#39
 597 00f8 FB18     	 add r3,r7,r3
 598 00fa 1B78     	 ldrb r3,[r3]
 243:../Libraries/XMCLib/src/xmc_usic.c **** }
 599              	 .loc 2 243 0
 600 00fc 181C     	 mov r0,r3
 601 00fe BD46     	 mov sp,r7
 602 0100 0CB0     	 add sp,sp,#48
 603              	 
 604 0102 80BD     	 pop {r7,pc}
 605              	.L31:
 606              	 .align 2
 607              	.L30:
 608 0104 FE030000 	 .word 1022
 609 0108 EF8000FC 	 .word -67075857
 610              	 .cfi_endproc
 611              	.LFE131:
 613              	 .global __aeabi_ui2f
 614              	 .global __aeabi_fdiv
 615              	 .global __aeabi_fmul
 616              	 .global __aeabi_f2uiz
 617              	 .section .text.XMC_USIC_CH_GetBaudrate,"ax",%progbits
 618              	 .align 2
 619              	 .global XMC_USIC_CH_GetBaudrate
 620              	 .code 16
 621              	 .thumb_func
 623              	XMC_USIC_CH_GetBaudrate:
 624              	.LFB132:
 244:../Libraries/XMCLib/src/xmc_usic.c **** 
 245:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetBaudrate(XMC_USIC_CH_t *const channel)
 246:../Libraries/XMCLib/src/xmc_usic.c **** {
 625              	 .loc 2 246 0
 626              	 .cfi_startproc
 627 0000 90B5     	 push {r4,r7,lr}
 628              	.LCFI18:
 629              	 .cfi_def_cfa_offset 12
 630              	 .cfi_offset 4,-12
 631              	 .cfi_offset 7,-8
 632              	 .cfi_offset 14,-4
 633 0002 87B0     	 sub sp,sp,#28
 634              	.LCFI19:
 635              	 .cfi_def_cfa_offset 40
 636 0004 00AF     	 add r7,sp,#0
 637              	.LCFI20:
 638              	 .cfi_def_cfa_register 7
 639 0006 7860     	 str r0,[r7,#4]
 247:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 248:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) == USIC_CH_BRG_CTQSEL_Msk)
 640              	 .loc 2 248 0
 641 0008 7B68     	 ldr r3,[r7,#4]
 642 000a 5B69     	 ldr r3,[r3,#20]
 643 000c C022     	 mov r2,#192
 644 000e 1340     	 and r3,r2
 645 0010 C02B     	 cmp r3,#192
 646 0012 02D1     	 bne .L33
 249:../Libraries/XMCLib/src/xmc_usic.c ****   {
 250:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 3
 251:../Libraries/XMCLib/src/xmc_usic.c ****     divider = 2;
 647              	 .loc 2 251 0
 648 0014 0223     	 mov r3,#2
 649 0016 7B61     	 str r3,[r7,#20]
 650 0018 1EE0     	 b .L34
 651              	.L33:
 252:../Libraries/XMCLib/src/xmc_usic.c ****   }
 253:../Libraries/XMCLib/src/xmc_usic.c ****   else
 254:../Libraries/XMCLib/src/xmc_usic.c ****   {
 255:../Libraries/XMCLib/src/xmc_usic.c **** 	// CTQSEL = 0, 1, or 2
 256:../Libraries/XMCLib/src/xmc_usic.c ****     divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 652              	 .loc 2 256 0
 653 001a 7B68     	 ldr r3,[r7,#4]
 654 001c 5B69     	 ldr r3,[r3,#20]
 655 001e 1022     	 mov r2,#16
 656 0020 1340     	 and r3,r2
 657 0022 01D0     	 beq .L35
 658              	 .loc 2 256 0 is_stmt 0 discriminator 1
 659 0024 0223     	 mov r3,#2
 660 0026 00E0     	 b .L36
 661              	.L35:
 662              	 .loc 2 256 0 discriminator 2
 663 0028 0123     	 mov r3,#1
 664              	.L36:
 665              	 .loc 2 256 0 discriminator 4
 666 002a 7B61     	 str r3,[r7,#20]
 257:../Libraries/XMCLib/src/xmc_usic.c ****   
 258:../Libraries/XMCLib/src/xmc_usic.c ****     if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x1) == 0)
 667              	 .loc 2 258 0 is_stmt 1 discriminator 4
 668 002c 7B68     	 ldr r3,[r7,#4]
 669 002e 5B69     	 ldr r3,[r3,#20]
 670 0030 4022     	 mov r2,#64
 671 0032 1340     	 and r3,r2
 672 0034 10D1     	 bne .L34
 259:../Libraries/XMCLib/src/xmc_usic.c ****     {
 260:../Libraries/XMCLib/src/xmc_usic.c **** 	  // CTQSEL = 0 or 2
 261:../Libraries/XMCLib/src/xmc_usic.c ****       divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 673              	 .loc 2 261 0
 674 0036 7B68     	 ldr r3,[r7,#4]
 675 0038 5B69     	 ldr r3,[r3,#20]
 676 003a 3B4A     	 ldr r2,.L40
 677 003c 1340     	 and r3,r2
 678 003e 1B0C     	 lsr r3,r3,#16
 679 0040 5A1C     	 add r2,r3,#1
 680 0042 7B69     	 ldr r3,[r7,#20]
 681 0044 5343     	 mul r3,r2
 682 0046 7B61     	 str r3,[r7,#20]
 262:../Libraries/XMCLib/src/xmc_usic.c ****       if ((((channel->BRG & USIC_CH_BRG_CTQSEL_Msk) >> USIC_CH_BRG_CTQSEL_Pos) & 0x2) != 0)
 683              	 .loc 2 262 0
 684 0048 7B68     	 ldr r3,[r7,#4]
 685 004a 5B69     	 ldr r3,[r3,#20]
 686 004c 8022     	 mov r2,#128
 687 004e 1340     	 and r3,r2
 688 0050 02D0     	 beq .L34
 263:../Libraries/XMCLib/src/xmc_usic.c ****       {
 264:../Libraries/XMCLib/src/xmc_usic.c ****         // CTQSEL = 2
 265:../Libraries/XMCLib/src/xmc_usic.c ****         divider *= 2;
 689              	 .loc 2 265 0
 690 0052 7B69     	 ldr r3,[r7,#20]
 691 0054 5B00     	 lsl r3,r3,#1
 692 0056 7B61     	 str r3,[r7,#20]
 693              	.L34:
 266:../Libraries/XMCLib/src/xmc_usic.c ****       }
 267:../Libraries/XMCLib/src/xmc_usic.c ****     }
 268:../Libraries/XMCLib/src/xmc_usic.c ****   }
 269:../Libraries/XMCLib/src/xmc_usic.c **** 
 270:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PCTQ_Msk) >> USIC_CH_BRG_PCTQ_Pos) + 1;
 694              	 .loc 2 270 0
 695 0058 7B68     	 ldr r3,[r7,#4]
 696 005a 5A69     	 ldr r2,[r3,#20]
 697 005c C023     	 mov r3,#192
 698 005e 9B00     	 lsl r3,r3,#2
 699 0060 1340     	 and r3,r2
 700 0062 1B0A     	 lsr r3,r3,#8
 701 0064 5A1C     	 add r2,r3,#1
 702 0066 7B69     	 ldr r3,[r7,#20]
 703 0068 5343     	 mul r3,r2
 704 006a 7B61     	 str r3,[r7,#20]
 271:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_DCTQ_Msk) >> USIC_CH_BRG_DCTQ_Pos) + 1;
 705              	 .loc 2 271 0
 706 006c 7B68     	 ldr r3,[r7,#4]
 707 006e 5A69     	 ldr r2,[r3,#20]
 708 0070 F823     	 mov r3,#248
 709 0072 DB01     	 lsl r3,r3,#7
 710 0074 1340     	 and r3,r2
 711 0076 9B0A     	 lsr r3,r3,#10
 712 0078 5A1C     	 add r2,r3,#1
 713 007a 7B69     	 ldr r3,[r7,#20]
 714 007c 5343     	 mul r3,r2
 715 007e 7B61     	 str r3,[r7,#20]
 272:../Libraries/XMCLib/src/xmc_usic.c **** 
 273:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 716              	 .loc 2 273 0
 717 0080 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 718 0084 031C     	 mov r3,r0
 719 0086 FB60     	 str r3,[r7,#12]
 274:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 275:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 720              	 .loc 2 275 0
 721 0088 7B68     	 ldr r3,[r7,#4]
 722 008a 1A69     	 ldr r2,[r3,#16]
 723 008c C023     	 mov r3,#192
 724 008e 1B02     	 lsl r3,r3,#8
 725 0090 1A40     	 and r2,r3
 726 0092 8023     	 mov r3,#128
 727 0094 1B02     	 lsl r3,r3,#8
 728 0096 9A42     	 cmp r2,r3
 729 0098 18D1     	 bne .L37
 276:../Libraries/XMCLib/src/xmc_usic.c ****   {
 277:../Libraries/XMCLib/src/xmc_usic.c **** 	baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 730              	 .loc 2 277 0
 731 009a F868     	 ldr r0,[r7,#12]
 732 009c FFF7FEFF 	 bl __aeabi_ui2f
 733 00a0 041C     	 add r4,r0,#0
 734 00a2 7B68     	 ldr r3,[r7,#4]
 735 00a4 1B69     	 ldr r3,[r3,#16]
 736 00a6 9B05     	 lsl r3,r3,#22
 737 00a8 9B0D     	 lsr r3,r3,#22
 738 00aa 181C     	 mov r0,r3
 739 00ac FFF7FEFF 	 bl __aeabi_ui2f
 740 00b0 031C     	 add r3,r0,#0
 741 00b2 181C     	 add r0,r3,#0
 742 00b4 8921     	 mov r1,#137
 743 00b6 C905     	 lsl r1,r1,#23
 744 00b8 FFF7FEFF 	 bl __aeabi_fdiv
 745 00bc 031C     	 add r3,r0,#0
 746 00be 201C     	 add r0,r4,#0
 747 00c0 191C     	 add r1,r3,#0
 748 00c2 FFF7FEFF 	 bl __aeabi_fmul
 749 00c6 031C     	 add r3,r0,#0
 750 00c8 3B61     	 str r3,[r7,#16]
 751 00ca 1AE0     	 b .L38
 752              	.L37:
 278:../Libraries/XMCLib/src/xmc_usic.c ****   }
 279:../Libraries/XMCLib/src/xmc_usic.c ****   else
 280:../Libraries/XMCLib/src/xmc_usic.c ****   {
 281:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 282:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 753              	 .loc 2 282 0
 754 00cc F868     	 ldr r0,[r7,#12]
 755 00ce FFF7FEFF 	 bl __aeabi_ui2f
 756 00d2 041C     	 add r4,r0,#0
 757 00d4 7B68     	 ldr r3,[r7,#4]
 758 00d6 1B69     	 ldr r3,[r3,#16]
 759 00d8 9B05     	 lsl r3,r3,#22
 760 00da 9B0D     	 lsr r3,r3,#22
 761 00dc 8022     	 mov r2,#128
 762 00de D200     	 lsl r2,r2,#3
 763 00e0 D31A     	 sub r3,r2,r3
 764 00e2 181C     	 mov r0,r3
 765 00e4 FFF7FEFF 	 bl __aeabi_ui2f
 766 00e8 031C     	 add r3,r0,#0
 767 00ea FE20     	 mov r0,#254
 768 00ec 8005     	 lsl r0,r0,#22
 769 00ee 191C     	 add r1,r3,#0
 770 00f0 FFF7FEFF 	 bl __aeabi_fdiv
 771 00f4 031C     	 add r3,r0,#0
 772 00f6 201C     	 add r0,r4,#0
 773 00f8 191C     	 add r1,r3,#0
 774 00fa FFF7FEFF 	 bl __aeabi_fmul
 775 00fe 031C     	 add r3,r0,#0
 776 0100 3B61     	 str r3,[r7,#16]
 777              	.L38:
 283:../Libraries/XMCLib/src/xmc_usic.c ****   }
 284:../Libraries/XMCLib/src/xmc_usic.c **** 
 285:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 778              	 .loc 2 285 0
 779 0102 7869     	 ldr r0,[r7,#20]
 780 0104 FFF7FEFF 	 bl __aeabi_ui2f
 781 0108 031C     	 add r3,r0,#0
 782 010a 3869     	 ldr r0,[r7,#16]
 783 010c 191C     	 add r1,r3,#0
 784 010e FFF7FEFF 	 bl __aeabi_fdiv
 785 0112 031C     	 add r3,r0,#0
 786 0114 3B61     	 str r3,[r7,#16]
 286:../Libraries/XMCLib/src/xmc_usic.c **** 
 287:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 787              	 .loc 2 287 0
 788 0116 3869     	 ldr r0,[r7,#16]
 789 0118 FFF7FEFF 	 bl __aeabi_f2uiz
 790 011c 031C     	 mov r3,r0
 288:../Libraries/XMCLib/src/xmc_usic.c **** }
 791              	 .loc 2 288 0
 792 011e 181C     	 mov r0,r3
 793 0120 BD46     	 mov sp,r7
 794 0122 07B0     	 add sp,sp,#28
 795              	 
 796 0124 90BD     	 pop {r4,r7,pc}
 797              	.L41:
 798 0126 C046     	 .align 2
 799              	.L40:
 800 0128 0000FF03 	 .word 67043328
 801              	 .cfi_endproc
 802              	.LFE132:
 804              	 .section .text.XMC_USIC_CH_GetSCLKFrequency,"ax",%progbits
 805              	 .align 2
 806              	 .global XMC_USIC_CH_GetSCLKFrequency
 807              	 .code 16
 808              	 .thumb_func
 810              	XMC_USIC_CH_GetSCLKFrequency:
 811              	.LFB133:
 289:../Libraries/XMCLib/src/xmc_usic.c **** 
 290:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetSCLKFrequency(XMC_USIC_CH_t *const channel)
 291:../Libraries/XMCLib/src/xmc_usic.c **** {
 812              	 .loc 2 291 0
 813              	 .cfi_startproc
 814 0000 90B5     	 push {r4,r7,lr}
 815              	.LCFI21:
 816              	 .cfi_def_cfa_offset 12
 817              	 .cfi_offset 4,-12
 818              	 .cfi_offset 7,-8
 819              	 .cfi_offset 14,-4
 820 0002 87B0     	 sub sp,sp,#28
 821              	.LCFI22:
 822              	 .cfi_def_cfa_offset 40
 823 0004 00AF     	 add r7,sp,#0
 824              	.LCFI23:
 825              	 .cfi_def_cfa_register 7
 826 0006 7860     	 str r0,[r7,#4]
 292:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t divider;
 293:../Libraries/XMCLib/src/xmc_usic.c ****   divider = (channel->BRG & USIC_CH_BRG_PPPEN_Msk) ? 2 : 1;
 827              	 .loc 2 293 0
 828 0008 7B68     	 ldr r3,[r7,#4]
 829 000a 5B69     	 ldr r3,[r3,#20]
 830 000c 1022     	 mov r2,#16
 831 000e 1340     	 and r3,r2
 832 0010 01D0     	 beq .L43
 833              	 .loc 2 293 0 is_stmt 0 discriminator 1
 834 0012 0223     	 mov r3,#2
 835 0014 00E0     	 b .L44
 836              	.L43:
 837              	 .loc 2 293 0 discriminator 2
 838 0016 0123     	 mov r3,#1
 839              	.L44:
 840              	 .loc 2 293 0 discriminator 4
 841 0018 3B61     	 str r3,[r7,#16]
 294:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= ((channel->BRG & USIC_CH_BRG_PDIV_Msk) >> USIC_CH_BRG_PDIV_Pos) + 1;
 842              	 .loc 2 294 0 is_stmt 1 discriminator 4
 843 001a 7B68     	 ldr r3,[r7,#4]
 844 001c 5B69     	 ldr r3,[r3,#20]
 845 001e 2E4A     	 ldr r2,.L48
 846 0020 1340     	 and r3,r2
 847 0022 1B0C     	 lsr r3,r3,#16
 848 0024 5A1C     	 add r2,r3,#1
 849 0026 3B69     	 ldr r3,[r7,#16]
 850 0028 5343     	 mul r3,r2
 851 002a 3B61     	 str r3,[r7,#16]
 295:../Libraries/XMCLib/src/xmc_usic.c ****   divider *= 2;
 852              	 .loc 2 295 0 discriminator 4
 853 002c 3B69     	 ldr r3,[r7,#16]
 854 002e 5B00     	 lsl r3,r3,#1
 855 0030 3B61     	 str r3,[r7,#16]
 296:../Libraries/XMCLib/src/xmc_usic.c **** 
 297:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 856              	 .loc 2 297 0 discriminator 4
 857 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 858 0036 031C     	 mov r3,r0
 859 0038 FB60     	 str r3,[r7,#12]
 298:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 299:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 860              	 .loc 2 299 0 discriminator 4
 861 003a 7B68     	 ldr r3,[r7,#4]
 862 003c 1A69     	 ldr r2,[r3,#16]
 863 003e C023     	 mov r3,#192
 864 0040 1B02     	 lsl r3,r3,#8
 865 0042 1A40     	 and r2,r3
 866 0044 8023     	 mov r3,#128
 867 0046 1B02     	 lsl r3,r3,#8
 868 0048 9A42     	 cmp r2,r3
 869 004a 18D1     	 bne .L45
 300:../Libraries/XMCLib/src/xmc_usic.c ****   {
 301:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 302:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 870              	 .loc 2 302 0
 871 004c F868     	 ldr r0,[r7,#12]
 872 004e FFF7FEFF 	 bl __aeabi_ui2f
 873 0052 041C     	 add r4,r0,#0
 874 0054 7B68     	 ldr r3,[r7,#4]
 875 0056 1B69     	 ldr r3,[r3,#16]
 876 0058 9B05     	 lsl r3,r3,#22
 877 005a 9B0D     	 lsr r3,r3,#22
 878 005c 181C     	 mov r0,r3
 879 005e FFF7FEFF 	 bl __aeabi_ui2f
 880 0062 031C     	 add r3,r0,#0
 881 0064 181C     	 add r0,r3,#0
 882 0066 8921     	 mov r1,#137
 883 0068 C905     	 lsl r1,r1,#23
 884 006a FFF7FEFF 	 bl __aeabi_fdiv
 885 006e 031C     	 add r3,r0,#0
 886 0070 201C     	 add r0,r4,#0
 887 0072 191C     	 add r1,r3,#0
 888 0074 FFF7FEFF 	 bl __aeabi_fmul
 889 0078 031C     	 add r3,r0,#0
 890 007a 7B61     	 str r3,[r7,#20]
 891 007c 1AE0     	 b .L46
 892              	.L45:
 303:../Libraries/XMCLib/src/xmc_usic.c ****   }
 304:../Libraries/XMCLib/src/xmc_usic.c ****   else
 305:../Libraries/XMCLib/src/xmc_usic.c ****   {
 306:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 307:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 893              	 .loc 2 307 0
 894 007e F868     	 ldr r0,[r7,#12]
 895 0080 FFF7FEFF 	 bl __aeabi_ui2f
 896 0084 041C     	 add r4,r0,#0
 897 0086 7B68     	 ldr r3,[r7,#4]
 898 0088 1B69     	 ldr r3,[r3,#16]
 899 008a 9B05     	 lsl r3,r3,#22
 900 008c 9B0D     	 lsr r3,r3,#22
 901 008e 8022     	 mov r2,#128
 902 0090 D200     	 lsl r2,r2,#3
 903 0092 D31A     	 sub r3,r2,r3
 904 0094 181C     	 mov r0,r3
 905 0096 FFF7FEFF 	 bl __aeabi_ui2f
 906 009a 031C     	 add r3,r0,#0
 907 009c FE20     	 mov r0,#254
 908 009e 8005     	 lsl r0,r0,#22
 909 00a0 191C     	 add r1,r3,#0
 910 00a2 FFF7FEFF 	 bl __aeabi_fdiv
 911 00a6 031C     	 add r3,r0,#0
 912 00a8 201C     	 add r0,r4,#0
 913 00aa 191C     	 add r1,r3,#0
 914 00ac FFF7FEFF 	 bl __aeabi_fmul
 915 00b0 031C     	 add r3,r0,#0
 916 00b2 7B61     	 str r3,[r7,#20]
 917              	.L46:
 308:../Libraries/XMCLib/src/xmc_usic.c ****   }
 309:../Libraries/XMCLib/src/xmc_usic.c **** 
 310:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= divider;
 918              	 .loc 2 310 0
 919 00b4 3869     	 ldr r0,[r7,#16]
 920 00b6 FFF7FEFF 	 bl __aeabi_ui2f
 921 00ba 031C     	 add r3,r0,#0
 922 00bc 7869     	 ldr r0,[r7,#20]
 923 00be 191C     	 add r1,r3,#0
 924 00c0 FFF7FEFF 	 bl __aeabi_fdiv
 925 00c4 031C     	 add r3,r0,#0
 926 00c6 7B61     	 str r3,[r7,#20]
 311:../Libraries/XMCLib/src/xmc_usic.c **** 
 312:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 927              	 .loc 2 312 0
 928 00c8 7869     	 ldr r0,[r7,#20]
 929 00ca FFF7FEFF 	 bl __aeabi_f2uiz
 930 00ce 031C     	 mov r3,r0
 313:../Libraries/XMCLib/src/xmc_usic.c **** }
 931              	 .loc 2 313 0
 932 00d0 181C     	 mov r0,r3
 933 00d2 BD46     	 mov sp,r7
 934 00d4 07B0     	 add sp,sp,#28
 935              	 
 936 00d6 90BD     	 pop {r4,r7,pc}
 937              	.L49:
 938              	 .align 2
 939              	.L48:
 940 00d8 0000FF03 	 .word 67043328
 941              	 .cfi_endproc
 942              	.LFE133:
 944              	 .section .text.XMC_USIC_CH_GetMCLKFrequency,"ax",%progbits
 945              	 .align 2
 946              	 .global XMC_USIC_CH_GetMCLKFrequency
 947              	 .code 16
 948              	 .thumb_func
 950              	XMC_USIC_CH_GetMCLKFrequency:
 951              	.LFB134:
 314:../Libraries/XMCLib/src/xmc_usic.c **** 
 315:../Libraries/XMCLib/src/xmc_usic.c **** uint32_t XMC_USIC_CH_GetMCLKFrequency(XMC_USIC_CH_t *const channel)
 316:../Libraries/XMCLib/src/xmc_usic.c **** {
 952              	 .loc 2 316 0
 953              	 .cfi_startproc
 954 0000 90B5     	 push {r4,r7,lr}
 955              	.LCFI24:
 956              	 .cfi_def_cfa_offset 12
 957              	 .cfi_offset 4,-12
 958              	 .cfi_offset 7,-8
 959              	 .cfi_offset 14,-4
 960 0002 85B0     	 sub sp,sp,#20
 961              	.LCFI25:
 962              	 .cfi_def_cfa_offset 32
 963 0004 00AF     	 add r7,sp,#0
 964              	.LCFI26:
 965              	 .cfi_def_cfa_register 7
 966 0006 7860     	 str r0,[r7,#4]
 317:../Libraries/XMCLib/src/xmc_usic.c ****   uint32_t fperi = XMC_SCU_CLOCK_GetPeripheralClockFrequency();
 967              	 .loc 2 317 0
 968 0008 FFF7FEFF 	 bl XMC_SCU_CLOCK_GetPeripheralClockFrequency
 969 000c 031C     	 mov r3,r0
 970 000e BB60     	 str r3,[r7,#8]
 318:../Libraries/XMCLib/src/xmc_usic.c **** 
 319:../Libraries/XMCLib/src/xmc_usic.c ****   float baudrate;
 320:../Libraries/XMCLib/src/xmc_usic.c ****   if ((channel->FDR & USIC_CH_FDR_DM_Msk) == XMC_USIC_CH_BRG_CLOCK_DIVIDER_MODE_FRACTIONAL)
 971              	 .loc 2 320 0
 972 0010 7B68     	 ldr r3,[r7,#4]
 973 0012 1A69     	 ldr r2,[r3,#16]
 974 0014 C023     	 mov r3,#192
 975 0016 1B02     	 lsl r3,r3,#8
 976 0018 1A40     	 and r2,r3
 977 001a 8023     	 mov r3,#128
 978 001c 1B02     	 lsl r3,r3,#8
 979 001e 9A42     	 cmp r2,r3
 980 0020 1BD1     	 bne .L51
 321:../Libraries/XMCLib/src/xmc_usic.c ****   {
 322:../Libraries/XMCLib/src/xmc_usic.c ****     /* Fractional divider mode */
 323:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi * (1.0F / (1024 - ((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_P
 981              	 .loc 2 323 0
 982 0022 B868     	 ldr r0,[r7,#8]
 983 0024 FFF7FEFF 	 bl __aeabi_ui2f
 984 0028 041C     	 add r4,r0,#0
 985 002a 7B68     	 ldr r3,[r7,#4]
 986 002c 1B69     	 ldr r3,[r3,#16]
 987 002e 9B05     	 lsl r3,r3,#22
 988 0030 9B0D     	 lsr r3,r3,#22
 989 0032 8022     	 mov r2,#128
 990 0034 D200     	 lsl r2,r2,#3
 991 0036 D31A     	 sub r3,r2,r3
 992 0038 181C     	 mov r0,r3
 993 003a FFF7FEFF 	 bl __aeabi_ui2f
 994 003e 031C     	 add r3,r0,#0
 995 0040 FE20     	 mov r0,#254
 996 0042 8005     	 lsl r0,r0,#22
 997 0044 191C     	 add r1,r3,#0
 998 0046 FFF7FEFF 	 bl __aeabi_fdiv
 999 004a 031C     	 add r3,r0,#0
 1000 004c 201C     	 add r0,r4,#0
 1001 004e 191C     	 add r1,r3,#0
 1002 0050 FFF7FEFF 	 bl __aeabi_fmul
 1003 0054 031C     	 add r3,r0,#0
 1004 0056 FB60     	 str r3,[r7,#12]
 1005 0058 17E0     	 b .L52
 1006              	.L51:
 324:../Libraries/XMCLib/src/xmc_usic.c ****   }
 325:../Libraries/XMCLib/src/xmc_usic.c ****   else
 326:../Libraries/XMCLib/src/xmc_usic.c ****   {
 327:../Libraries/XMCLib/src/xmc_usic.c ****     /* Normal divider mode */
 328:../Libraries/XMCLib/src/xmc_usic.c ****     baudrate = fperi / (((channel->FDR & USIC_CH_FDR_STEP_Msk) >> USIC_CH_FDR_STEP_Pos) / 1024.0F);
 1007              	 .loc 2 328 0
 1008 005a B868     	 ldr r0,[r7,#8]
 1009 005c FFF7FEFF 	 bl __aeabi_ui2f
 1010 0060 041C     	 add r4,r0,#0
 1011 0062 7B68     	 ldr r3,[r7,#4]
 1012 0064 1B69     	 ldr r3,[r3,#16]
 1013 0066 9B05     	 lsl r3,r3,#22
 1014 0068 9B0D     	 lsr r3,r3,#22
 1015 006a 181C     	 mov r0,r3
 1016 006c FFF7FEFF 	 bl __aeabi_ui2f
 1017 0070 031C     	 add r3,r0,#0
 1018 0072 181C     	 add r0,r3,#0
 1019 0074 8921     	 mov r1,#137
 1020 0076 C905     	 lsl r1,r1,#23
 1021 0078 FFF7FEFF 	 bl __aeabi_fdiv
 1022 007c 031C     	 add r3,r0,#0
 1023 007e 201C     	 add r0,r4,#0
 1024 0080 191C     	 add r1,r3,#0
 1025 0082 FFF7FEFF 	 bl __aeabi_fdiv
 1026 0086 031C     	 add r3,r0,#0
 1027 0088 FB60     	 str r3,[r7,#12]
 1028              	.L52:
 329:../Libraries/XMCLib/src/xmc_usic.c ****   }
 330:../Libraries/XMCLib/src/xmc_usic.c **** 
 331:../Libraries/XMCLib/src/xmc_usic.c ****   baudrate /= 2;
 1029              	 .loc 2 331 0
 1030 008a F868     	 ldr r0,[r7,#12]
 1031 008c 8021     	 mov r1,#128
 1032 008e C905     	 lsl r1,r1,#23
 1033 0090 FFF7FEFF 	 bl __aeabi_fdiv
 1034 0094 031C     	 add r3,r0,#0
 1035 0096 FB60     	 str r3,[r7,#12]
 332:../Libraries/XMCLib/src/xmc_usic.c **** 
 333:../Libraries/XMCLib/src/xmc_usic.c ****   return baudrate;
 1036              	 .loc 2 333 0
 1037 0098 F868     	 ldr r0,[r7,#12]
 1038 009a FFF7FEFF 	 bl __aeabi_f2uiz
 1039 009e 031C     	 mov r3,r0
 334:../Libraries/XMCLib/src/xmc_usic.c **** }
 1040              	 .loc 2 334 0
 1041 00a0 181C     	 mov r0,r3
 1042 00a2 BD46     	 mov sp,r7
 1043 00a4 05B0     	 add sp,sp,#20
 1044              	 
 1045 00a6 90BD     	 pop {r4,r7,pc}
 1046              	 .cfi_endproc
 1047              	.LFE134:
 1049              	 .section .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG,"ax",%progbits
 1050              	 .align 2
 1051              	 .global XMC_USIC_CH_ConfigExternalInputSignalToBRG
 1052              	 .code 16
 1053              	 .thumb_func
 1055              	XMC_USIC_CH_ConfigExternalInputSignalToBRG:
 1056              	.LFB135:
 335:../Libraries/XMCLib/src/xmc_usic.c **** 
 336:../Libraries/XMCLib/src/xmc_usic.c **** 
 337:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_ConfigExternalInputSignalToBRG(XMC_USIC_CH_t *const channel,
 338:../Libraries/XMCLib/src/xmc_usic.c **** 		                                        const uint16_t pdiv,
 339:../Libraries/XMCLib/src/xmc_usic.c **** 												const uint32_t oversampling,
 340:../Libraries/XMCLib/src/xmc_usic.c **** 												const XMC_USIC_CH_INPUT_COMBINATION_MODE_t combination_mode)
 341:../Libraries/XMCLib/src/xmc_usic.c **** {
 1057              	 .loc 2 341 0
 1058              	 .cfi_startproc
 1059 0000 80B5     	 push {r7,lr}
 1060              	.LCFI27:
 1061              	 .cfi_def_cfa_offset 8
 1062              	 .cfi_offset 7,-8
 1063              	 .cfi_offset 14,-4
 1064 0002 84B0     	 sub sp,sp,#16
 1065              	.LCFI28:
 1066              	 .cfi_def_cfa_offset 24
 1067 0004 00AF     	 add r7,sp,#0
 1068              	.LCFI29:
 1069              	 .cfi_def_cfa_register 7
 1070 0006 F860     	 str r0,[r7,#12]
 1071 0008 081C     	 mov r0,r1
 1072 000a 7A60     	 str r2,[r7,#4]
 1073 000c 191C     	 mov r1,r3
 1074 000e 0A23     	 mov r3,#10
 1075 0010 FB18     	 add r3,r7,r3
 1076 0012 021C     	 add r2,r0,#0
 1077 0014 1A80     	 strh r2,[r3]
 1078 0016 0923     	 mov r3,#9
 1079 0018 FB18     	 add r3,r7,r3
 1080 001a 0A1C     	 add r2,r1,#0
 1081 001c 1A70     	 strb r2,[r3]
 342:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Divider out of range", ((1U < pdiv) || (p
 343:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_ASSERT("XMC_USIC_CH_ConfigExternalInputSignalToBRG: Oversampling out of range", ((1U < oversa
 344:../Libraries/XMCLib/src/xmc_usic.c **** 
 345:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the external input frequency source through DX1 */
 346:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetBRGInputClockSource(channel, XMC_USIC_CH_BRG_CLOCK_SOURCE_DX1T);
 1082              	 .loc 2 346 0
 1083 001e FB68     	 ldr r3,[r7,#12]
 1084 0020 181C     	 mov r0,r3
 1085 0022 0221     	 mov r1,#2
 1086 0024 FFF7FEFF 	 bl XMC_USIC_CH_SetBRGInputClockSource
 347:../Libraries/XMCLib/src/xmc_usic.c **** 
 348:../Libraries/XMCLib/src/xmc_usic.c ****   /* Setting the trigger combination mode */
 349:../Libraries/XMCLib/src/xmc_usic.c ****   XMC_USIC_CH_SetInputTriggerCombinationMode(channel,XMC_USIC_CH_INPUT_DX1,combination_mode);
 1087              	 .loc 2 349 0
 1088 0028 FA68     	 ldr r2,[r7,#12]
 1089 002a 0923     	 mov r3,#9
 1090 002c FB18     	 add r3,r7,r3
 1091 002e 1B78     	 ldrb r3,[r3]
 1092 0030 101C     	 mov r0,r2
 1093 0032 0121     	 mov r1,#1
 1094 0034 1A1C     	 mov r2,r3
 1095 0036 FFF7FEFF 	 bl XMC_USIC_CH_SetInputTriggerCombinationMode
 350:../Libraries/XMCLib/src/xmc_usic.c **** 
 351:../Libraries/XMCLib/src/xmc_usic.c ****   /* Configuring the dividers and oversampling */
 352:../Libraries/XMCLib/src/xmc_usic.c ****   channel->BRG = (channel->BRG & ~(USIC_CH_BRG_DCTQ_Msk |
 1096              	 .loc 2 352 0
 1097 003a FB68     	 ldr r3,[r7,#12]
 1098 003c 5B69     	 ldr r3,[r3,#20]
 1099 003e 084A     	 ldr r2,.L55
 1100 0040 1A40     	 and r2,r3
 353:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 354:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PCTQ_Msk |
 355:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PPPEN_Msk)) |
 356:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1101              	 .loc 2 356 0
 1102 0042 7B68     	 ldr r3,[r7,#4]
 1103 0044 013B     	 sub r3,r3,#1
 1104 0046 9B02     	 lsl r3,r3,#10
 355:../Libraries/XMCLib/src/xmc_usic.c ****                   (((oversampling) - 1U) << USIC_CH_BRG_DCTQ_Pos) |
 1105              	 .loc 2 355 0
 1106 0048 1A43     	 orr r2,r3
 357:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1107              	 .loc 2 357 0
 1108 004a 0A23     	 mov r3,#10
 1109 004c FB18     	 add r3,r7,r3
 1110 004e 1B88     	 ldrh r3,[r3]
 1111 0050 013B     	 sub r3,r3,#1
 1112 0052 1B04     	 lsl r3,r3,#16
 356:../Libraries/XMCLib/src/xmc_usic.c ****                   (((pdiv) - 1U) << USIC_CH_BRG_PDIV_Pos);
 1113              	 .loc 2 356 0
 1114 0054 1A43     	 orr r2,r3
 352:../Libraries/XMCLib/src/xmc_usic.c ****                                    USIC_CH_BRG_PDIV_Msk |
 1115              	 .loc 2 352 0
 1116 0056 FB68     	 ldr r3,[r7,#12]
 1117 0058 5A61     	 str r2,[r3,#20]
 358:../Libraries/XMCLib/src/xmc_usic.c **** }
 1118              	 .loc 2 358 0
 1119 005a BD46     	 mov sp,r7
 1120 005c 04B0     	 add sp,sp,#16
 1121              	 
 1122 005e 80BD     	 pop {r7,pc}
 1123              	.L56:
 1124              	 .align 2
 1125              	.L55:
 1126 0060 EF8000FC 	 .word -67075857
 1127              	 .cfi_endproc
 1128              	.LFE135:
 1130              	 .section .text.XMC_USIC_CH_TXFIFO_Configure,"ax",%progbits
 1131              	 .align 2
 1132              	 .global XMC_USIC_CH_TXFIFO_Configure
 1133              	 .code 16
 1134              	 .thumb_func
 1136              	XMC_USIC_CH_TXFIFO_Configure:
 1137              	.LFB136:
 359:../Libraries/XMCLib/src/xmc_usic.c **** 
 360:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_Configure(XMC_USIC_CH_t *const channel,
 361:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 362:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 363:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 364:../Libraries/XMCLib/src/xmc_usic.c **** {
 1138              	 .loc 2 364 0
 1139              	 .cfi_startproc
 1140 0000 80B5     	 push {r7,lr}
 1141              	.LCFI30:
 1142              	 .cfi_def_cfa_offset 8
 1143              	 .cfi_offset 7,-8
 1144              	 .cfi_offset 14,-4
 1145 0002 84B0     	 sub sp,sp,#16
 1146              	.LCFI31:
 1147              	 .cfi_def_cfa_offset 24
 1148 0004 00AF     	 add r7,sp,#0
 1149              	.LCFI32:
 1150              	 .cfi_def_cfa_register 7
 1151 0006 F860     	 str r0,[r7,#12]
 1152 0008 B960     	 str r1,[r7,#8]
 1153 000a 3B60     	 str r3,[r7]
 1154 000c FB1D     	 add r3,r7,#7
 1155 000e 1A70     	 strb r2,[r3]
 365:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 366:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1156              	 .loc 2 366 0
 1157 0010 FA68     	 ldr r2,[r7,#12]
 1158 0012 8423     	 mov r3,#132
 1159 0014 5B00     	 lsl r3,r3,#1
 1160 0016 D358     	 ldr r3,[r2,r3]
 1161 0018 0E4A     	 ldr r2,.L58
 1162 001a 1340     	 and r3,r2
 1163 001c 191C     	 mov r1,r3
 1164 001e FA68     	 ldr r2,[r7,#12]
 1165 0020 8423     	 mov r3,#132
 1166 0022 5B00     	 lsl r3,r3,#1
 1167 0024 D150     	 str r1,[r2,r3]
 367:../Libraries/XMCLib/src/xmc_usic.c **** 
 368:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 0, A standard transmit buffer event occurs when the filling level equals the limit value
 369:../Libraries/XMCLib/src/xmc_usic.c ****    * lower due to transmission of a data word
 370:../Libraries/XMCLib/src/xmc_usic.c ****    * STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 371:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 372:../Libraries/XMCLib/src/xmc_usic.c ****    */
 373:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)(channel->TBCTR & (uint32_t)~(USIC_CH_TBCTR_LIMIT_Msk |
 1168              	 .loc 2 373 0
 1169 0026 FA68     	 ldr r2,[r7,#12]
 1170 0028 8423     	 mov r3,#132
 1171 002a 5B00     	 lsl r3,r3,#1
 1172 002c D358     	 ldr r3,[r2,r3]
 1173 002e 0A4A     	 ldr r2,.L58+4
 1174 0030 1A40     	 and r2,r3
 374:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 375:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_SIZE_Msk)) |
 376:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1175              	 .loc 2 376 0
 1176 0032 3B68     	 ldr r3,[r7]
 1177 0034 1902     	 lsl r1,r3,#8
 1178 0036 BB68     	 ldr r3,[r7,#8]
 1179 0038 1943     	 orr r1,r3
 377:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 378:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1180              	 .loc 2 378 0
 1181 003a FB1D     	 add r3,r7,#7
 1182 003c 1B78     	 ldrb r3,[r3]
 1183 003e 1B06     	 lsl r3,r3,#24
 376:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_TBCTR_DPTR_Pos) |
 1184              	 .loc 2 376 0
 1185 0040 0B43     	 orr r3,r1
 375:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)((limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1186              	 .loc 2 375 0
 1187 0042 1A43     	 orr r2,r3
 1188 0044 111C     	 mov r1,r2
 373:../Libraries/XMCLib/src/xmc_usic.c ****                                                            USIC_CH_TBCTR_DPTR_Msk |
 1189              	 .loc 2 373 0
 1190 0046 FA68     	 ldr r2,[r7,#12]
 1191 0048 8423     	 mov r3,#132
 1192 004a 5B00     	 lsl r3,r3,#1
 1193 004c D150     	 str r1,[r2,r3]
 379:../Libraries/XMCLib/src/xmc_usic.c **** }
 1194              	 .loc 2 379 0
 1195 004e BD46     	 mov sp,r7
 1196 0050 04B0     	 add sp,sp,#16
 1197              	 
 1198 0052 80BD     	 pop {r7,pc}
 1199              	.L59:
 1200              	 .align 2
 1201              	.L58:
 1202 0054 FFFFFFF8 	 .word -117440513
 1203 0058 C0C0FFF8 	 .word -117456704
 1204              	 .cfi_endproc
 1205              	.LFE136:
 1207              	 .section .text.XMC_USIC_CH_RXFIFO_Configure,"ax",%progbits
 1208              	 .align 2
 1209              	 .global XMC_USIC_CH_RXFIFO_Configure
 1210              	 .code 16
 1211              	 .thumb_func
 1213              	XMC_USIC_CH_RXFIFO_Configure:
 1214              	.LFB137:
 380:../Libraries/XMCLib/src/xmc_usic.c **** 
 381:../Libraries/XMCLib/src/xmc_usic.c **** 
 382:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_Configure(XMC_USIC_CH_t *const channel,
 383:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t data_pointer,
 384:../Libraries/XMCLib/src/xmc_usic.c ****                                   const XMC_USIC_CH_FIFO_SIZE_t size,
 385:../Libraries/XMCLib/src/xmc_usic.c ****                                   const uint32_t limit)
 386:../Libraries/XMCLib/src/xmc_usic.c **** {
 1215              	 .loc 2 386 0
 1216              	 .cfi_startproc
 1217 0000 80B5     	 push {r7,lr}
 1218              	.LCFI33:
 1219              	 .cfi_def_cfa_offset 8
 1220              	 .cfi_offset 7,-8
 1221              	 .cfi_offset 14,-4
 1222 0002 84B0     	 sub sp,sp,#16
 1223              	.LCFI34:
 1224              	 .cfi_def_cfa_offset 24
 1225 0004 00AF     	 add r7,sp,#0
 1226              	.LCFI35:
 1227              	 .cfi_def_cfa_register 7
 1228 0006 F860     	 str r0,[r7,#12]
 1229 0008 B960     	 str r1,[r7,#8]
 1230 000a 3B60     	 str r3,[r7]
 1231 000c FB1D     	 add r3,r7,#7
 1232 000e 1A70     	 strb r2,[r3]
 387:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 388:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1233              	 .loc 2 388 0
 1234 0010 FA68     	 ldr r2,[r7,#12]
 1235 0012 8623     	 mov r3,#134
 1236 0014 5B00     	 lsl r3,r3,#1
 1237 0016 D358     	 ldr r3,[r2,r3]
 1238 0018 104A     	 ldr r2,.L61
 1239 001a 1340     	 and r3,r2
 1240 001c 191C     	 mov r1,r3
 1241 001e FA68     	 ldr r2,[r7,#12]
 1242 0020 8623     	 mov r3,#134
 1243 0022 5B00     	 lsl r3,r3,#1
 1244 0024 D150     	 str r1,[r2,r3]
 389:../Libraries/XMCLib/src/xmc_usic.c **** 
 390:../Libraries/XMCLib/src/xmc_usic.c ****   /* LOF = 1, A standard receive buffer event occurs when the filling level equals the limit value 
 391:../Libraries/XMCLib/src/xmc_usic.c ****    *  due to the reception of a new data word
 392:../Libraries/XMCLib/src/xmc_usic.c ****    */
 393:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (uint32_t)~(USIC_CH_RBCTR_LIMIT_Msk |
 1245              	 .loc 2 393 0
 1246 0026 FA68     	 ldr r2,[r7,#12]
 1247 0028 8623     	 mov r3,#134
 1248 002a 5B00     	 lsl r3,r3,#1
 1249 002c D358     	 ldr r3,[r2,r3]
 1250 002e 0C4A     	 ldr r2,.L61+4
 1251 0030 1A40     	 and r2,r3
 394:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 395:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_LOF_Msk)) |
 396:../Libraries/XMCLib/src/xmc_usic.c ****                    ((limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1252              	 .loc 2 396 0
 1253 0032 3B68     	 ldr r3,[r7]
 1254 0034 1902     	 lsl r1,r3,#8
 1255 0036 BB68     	 ldr r3,[r7,#8]
 1256 0038 1943     	 orr r1,r3
 397:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 398:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos) |
 1257              	 .loc 2 398 0
 1258 003a FB1D     	 add r3,r7,#7
 1259 003c 1B78     	 ldrb r3,[r3]
 1260 003e 1B06     	 lsl r3,r3,#24
 397:../Libraries/XMCLib/src/xmc_usic.c ****                    (data_pointer << USIC_CH_RBCTR_DPTR_Pos) |
 1261              	 .loc 2 397 0
 1262 0040 0B43     	 orr r3,r1
 393:../Libraries/XMCLib/src/xmc_usic.c ****                                                             USIC_CH_RBCTR_DPTR_Msk |
 1263              	 .loc 2 393 0
 1264 0042 1343     	 orr r3,r2
 1265 0044 8022     	 mov r2,#128
 1266 0046 5205     	 lsl r2,r2,#21
 1267 0048 1A43     	 orr r2,r3
 1268 004a 111C     	 mov r1,r2
 1269 004c FA68     	 ldr r2,[r7,#12]
 1270 004e 8623     	 mov r3,#134
 1271 0050 5B00     	 lsl r3,r3,#1
 1272 0052 D150     	 str r1,[r2,r3]
 399:../Libraries/XMCLib/src/xmc_usic.c ****                    (uint32_t)USIC_CH_RBCTR_LOF_Msk));
 400:../Libraries/XMCLib/src/xmc_usic.c **** }
 1273              	 .loc 2 400 0
 1274 0054 BD46     	 mov sp,r7
 1275 0056 04B0     	 add sp,sp,#16
 1276              	 
 1277 0058 80BD     	 pop {r7,pc}
 1278              	.L62:
 1279 005a C046     	 .align 2
 1280              	.L61:
 1281 005c FFFFFFF8 	 .word -117440513
 1282 0060 C0C0FFEF 	 .word -268451648
 1283              	 .cfi_endproc
 1284              	.LFE137:
 1286              	 .section .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1287              	 .align 2
 1288              	 .global XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
 1289              	 .code 16
 1290              	 .thumb_func
 1292              	XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:
 1293              	.LFB138:
 401:../Libraries/XMCLib/src/xmc_usic.c **** 
 402:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 403:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 404:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 405:../Libraries/XMCLib/src/xmc_usic.c **** {
 1294              	 .loc 2 405 0
 1295              	 .cfi_startproc
 1296 0000 80B5     	 push {r7,lr}
 1297              	.LCFI36:
 1298              	 .cfi_def_cfa_offset 8
 1299              	 .cfi_offset 7,-8
 1300              	 .cfi_offset 14,-4
 1301 0002 84B0     	 sub sp,sp,#16
 1302              	.LCFI37:
 1303              	 .cfi_def_cfa_offset 24
 1304 0004 00AF     	 add r7,sp,#0
 1305              	.LCFI38:
 1306              	 .cfi_def_cfa_register 7
 1307 0006 F860     	 str r0,[r7,#12]
 1308 0008 7A60     	 str r2,[r7,#4]
 1309 000a 0B23     	 mov r3,#11
 1310 000c FB18     	 add r3,r7,r3
 1311 000e 0A1C     	 add r2,r1,#0
 1312 0010 1A70     	 strb r2,[r3]
 406:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 407:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR &= (uint32_t)~USIC_CH_TBCTR_SIZE_Msk;
 1313              	 .loc 2 407 0
 1314 0012 FA68     	 ldr r2,[r7,#12]
 1315 0014 8423     	 mov r3,#132
 1316 0016 5B00     	 lsl r3,r3,#1
 1317 0018 D358     	 ldr r3,[r2,r3]
 1318 001a 0E4A     	 ldr r2,.L64
 1319 001c 1340     	 and r3,r2
 1320 001e 191C     	 mov r1,r3
 1321 0020 FA68     	 ldr r2,[r7,#12]
 1322 0022 8423     	 mov r3,#132
 1323 0024 5B00     	 lsl r3,r3,#1
 1324 0026 D150     	 str r1,[r2,r3]
 408:../Libraries/XMCLib/src/xmc_usic.c **** 
 409:../Libraries/XMCLib/src/xmc_usic.c ****   /* STBTEN = 0, the trigger of the standard transmit buffer event is based on the transition of th
 410:../Libraries/XMCLib/src/xmc_usic.c ****    *  from equal to below the limit, not the fact being below
 411:../Libraries/XMCLib/src/xmc_usic.c ****    */
 412:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((uint32_t)(channel->TBCTR & (uint32_t)~USIC_CH_TBCTR_LIMIT_Msk) |
 1325              	 .loc 2 412 0
 1326 0028 FA68     	 ldr r2,[r7,#12]
 1327 002a 8423     	 mov r3,#132
 1328 002c 5B00     	 lsl r3,r3,#1
 1329 002e D358     	 ldr r3,[r2,r3]
 1330 0030 094A     	 ldr r2,.L64+4
 1331 0032 1A40     	 and r2,r3
 413:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1332              	 .loc 2 413 0
 1333 0034 7B68     	 ldr r3,[r7,#4]
 1334 0036 1B02     	 lsl r3,r3,#8
 412:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1335              	 .loc 2 412 0
 1336 0038 1A43     	 orr r2,r3
 414:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_TBCTR_SIZE_Pos));
 1337              	 .loc 2 414 0
 1338 003a 0B23     	 mov r3,#11
 1339 003c FB18     	 add r3,r7,r3
 1340 003e 1B78     	 ldrb r3,[r3]
 1341 0040 1B06     	 lsl r3,r3,#24
 412:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_TBCTR_LIMIT_Pos) |
 1342              	 .loc 2 412 0
 1343 0042 1A43     	 orr r2,r3
 1344 0044 111C     	 mov r1,r2
 1345 0046 FA68     	 ldr r2,[r7,#12]
 1346 0048 8423     	 mov r3,#132
 1347 004a 5B00     	 lsl r3,r3,#1
 1348 004c D150     	 str r1,[r2,r3]
 415:../Libraries/XMCLib/src/xmc_usic.c **** }
 1349              	 .loc 2 415 0
 1350 004e BD46     	 mov sp,r7
 1351 0050 04B0     	 add sp,sp,#16
 1352              	 
 1353 0052 80BD     	 pop {r7,pc}
 1354              	.L65:
 1355              	 .align 2
 1356              	.L64:
 1357 0054 FFFFFFF8 	 .word -117440513
 1358 0058 FFC0FFFF 	 .word -16129
 1359              	 .cfi_endproc
 1360              	.LFE138:
 1362              	 .section .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit,"ax",%progbits
 1363              	 .align 2
 1364              	 .global XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
 1365              	 .code 16
 1366              	 .thumb_func
 1368              	XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:
 1369              	.LFB139:
 416:../Libraries/XMCLib/src/xmc_usic.c **** 
 417:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit(XMC_USIC_CH_t *const channel,
 418:../Libraries/XMCLib/src/xmc_usic.c ****                                             const XMC_USIC_CH_FIFO_SIZE_t size,
 419:../Libraries/XMCLib/src/xmc_usic.c ****                                             const uint32_t limit)
 420:../Libraries/XMCLib/src/xmc_usic.c **** {
 1370              	 .loc 2 420 0
 1371              	 .cfi_startproc
 1372 0000 80B5     	 push {r7,lr}
 1373              	.LCFI39:
 1374              	 .cfi_def_cfa_offset 8
 1375              	 .cfi_offset 7,-8
 1376              	 .cfi_offset 14,-4
 1377 0002 84B0     	 sub sp,sp,#16
 1378              	.LCFI40:
 1379              	 .cfi_def_cfa_offset 24
 1380 0004 00AF     	 add r7,sp,#0
 1381              	.LCFI41:
 1382              	 .cfi_def_cfa_register 7
 1383 0006 F860     	 str r0,[r7,#12]
 1384 0008 7A60     	 str r2,[r7,#4]
 1385 000a 0B23     	 mov r3,#11
 1386 000c FB18     	 add r3,r7,r3
 1387 000e 0A1C     	 add r2,r1,#0
 1388 0010 1A70     	 strb r2,[r3]
 421:../Libraries/XMCLib/src/xmc_usic.c ****   /* Disable FIFO */
 422:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR &= (uint32_t)~USIC_CH_RBCTR_SIZE_Msk;
 1389              	 .loc 2 422 0
 1390 0012 FA68     	 ldr r2,[r7,#12]
 1391 0014 8623     	 mov r3,#134
 1392 0016 5B00     	 lsl r3,r3,#1
 1393 0018 D358     	 ldr r3,[r2,r3]
 1394 001a 0E4A     	 ldr r2,.L67
 1395 001c 1340     	 and r3,r2
 1396 001e 191C     	 mov r1,r3
 1397 0020 FA68     	 ldr r2,[r7,#12]
 1398 0022 8623     	 mov r3,#134
 1399 0024 5B00     	 lsl r3,r3,#1
 1400 0026 D150     	 str r1,[r2,r3]
 423:../Libraries/XMCLib/src/xmc_usic.c **** 
 424:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((uint32_t)(channel->RBCTR & (uint32_t)~USIC_CH_RBCTR_LIMIT_Msk) |
 1401              	 .loc 2 424 0
 1402 0028 FA68     	 ldr r2,[r7,#12]
 1403 002a 8623     	 mov r3,#134
 1404 002c 5B00     	 lsl r3,r3,#1
 1405 002e D358     	 ldr r3,[r2,r3]
 1406 0030 094A     	 ldr r2,.L67+4
 1407 0032 1A40     	 and r2,r3
 425:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1408              	 .loc 2 425 0
 1409 0034 7B68     	 ldr r3,[r7,#4]
 1410 0036 1B02     	 lsl r3,r3,#8
 424:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1411              	 .loc 2 424 0
 1412 0038 1A43     	 orr r2,r3
 426:../Libraries/XMCLib/src/xmc_usic.c ****                    ((uint32_t)size << USIC_CH_RBCTR_SIZE_Pos));
 1413              	 .loc 2 426 0
 1414 003a 0B23     	 mov r3,#11
 1415 003c FB18     	 add r3,r7,r3
 1416 003e 1B78     	 ldrb r3,[r3]
 1417 0040 1B06     	 lsl r3,r3,#24
 424:../Libraries/XMCLib/src/xmc_usic.c ****                    (limit << USIC_CH_RBCTR_LIMIT_Pos) |
 1418              	 .loc 2 424 0
 1419 0042 1A43     	 orr r2,r3
 1420 0044 111C     	 mov r1,r2
 1421 0046 FA68     	 ldr r2,[r7,#12]
 1422 0048 8623     	 mov r3,#134
 1423 004a 5B00     	 lsl r3,r3,#1
 1424 004c D150     	 str r1,[r2,r3]
 427:../Libraries/XMCLib/src/xmc_usic.c **** }
 1425              	 .loc 2 427 0
 1426 004e BD46     	 mov sp,r7
 1427 0050 04B0     	 add sp,sp,#16
 1428              	 
 1429 0052 80BD     	 pop {r7,pc}
 1430              	.L68:
 1431              	 .align 2
 1432              	.L67:
 1433 0054 FFFFFFF8 	 .word -117440513
 1434 0058 FFC0FFFF 	 .word -16129
 1435              	 .cfi_endproc
 1436              	.LFE139:
 1438              	 .section .text.XMC_USIC_CH_SetInterruptNodePointer,"ax",%progbits
 1439              	 .align 2
 1440              	 .global XMC_USIC_CH_SetInterruptNodePointer
 1441              	 .code 16
 1442              	 .thumb_func
 1444              	XMC_USIC_CH_SetInterruptNodePointer:
 1445              	.LFB140:
 428:../Libraries/XMCLib/src/xmc_usic.c **** 
 429:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 430:../Libraries/XMCLib/src/xmc_usic.c ****                                          const XMC_USIC_CH_INTERRUPT_NODE_POINTER_t interrupt_node,
 431:../Libraries/XMCLib/src/xmc_usic.c ****                                          const uint32_t service_request)
 432:../Libraries/XMCLib/src/xmc_usic.c **** {
 1446              	 .loc 2 432 0
 1447              	 .cfi_startproc
 1448 0000 80B5     	 push {r7,lr}
 1449              	.LCFI42:
 1450              	 .cfi_def_cfa_offset 8
 1451              	 .cfi_offset 7,-8
 1452              	 .cfi_offset 14,-4
 1453 0002 84B0     	 sub sp,sp,#16
 1454              	.LCFI43:
 1455              	 .cfi_def_cfa_offset 24
 1456 0004 00AF     	 add r7,sp,#0
 1457              	.LCFI44:
 1458              	 .cfi_def_cfa_register 7
 1459 0006 F860     	 str r0,[r7,#12]
 1460 0008 7A60     	 str r2,[r7,#4]
 1461 000a 0B23     	 mov r3,#11
 1462 000c FB18     	 add r3,r7,r3
 1463 000e 0A1C     	 add r2,r1,#0
 1464 0010 1A70     	 strb r2,[r3]
 433:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1465              	 .loc 2 433 0
 1466 0012 FB68     	 ldr r3,[r7,#12]
 1467 0014 9B69     	 ldr r3,[r3,#24]
 1468 0016 0B22     	 mov r2,#11
 1469 0018 BA18     	 add r2,r7,r2
 1470 001a 1278     	 ldrb r2,[r2]
 1471 001c 0721     	 mov r1,#7
 1472 001e 9140     	 lsl r1,r1,r2
 1473 0020 0A1C     	 mov r2,r1
 1474 0022 D243     	 mvn r2,r2
 1475 0024 1A40     	 and r2,r3
 434:../Libraries/XMCLib/src/xmc_usic.c ****                   (service_request << (uint32_t)interrupt_node));
 1476              	 .loc 2 434 0
 1477 0026 0B23     	 mov r3,#11
 1478 0028 FB18     	 add r3,r7,r3
 1479 002a 1B78     	 ldrb r3,[r3]
 1480 002c 7968     	 ldr r1,[r7,#4]
 1481 002e 9940     	 lsl r1,r1,r3
 1482 0030 0B1C     	 mov r3,r1
 433:../Libraries/XMCLib/src/xmc_usic.c ****   channel->INPR = (uint32_t)((channel->INPR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrupt_
 1483              	 .loc 2 433 0
 1484 0032 1A43     	 orr r2,r3
 1485 0034 FB68     	 ldr r3,[r7,#12]
 1486 0036 9A61     	 str r2,[r3,#24]
 435:../Libraries/XMCLib/src/xmc_usic.c **** }
 1487              	 .loc 2 435 0
 1488 0038 BD46     	 mov sp,r7
 1489 003a 04B0     	 add sp,sp,#16
 1490              	 
 1491 003c 80BD     	 pop {r7,pc}
 1492              	 .cfi_endproc
 1493              	.LFE140:
 1495 003e C046     	 .section .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer,"ax",%progbits
 1496              	 .align 2
 1497              	 .global XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
 1498              	 .code 16
 1499              	 .thumb_func
 1501              	XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:
 1502              	.LFB141:
 436:../Libraries/XMCLib/src/xmc_usic.c **** 
 437:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_TXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 438:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_TXFIFO_INTERRUPT_NODE_POINTER_t i
 439:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 440:../Libraries/XMCLib/src/xmc_usic.c **** {
 1503              	 .loc 2 440 0
 1504              	 .cfi_startproc
 1505 0000 80B5     	 push {r7,lr}
 1506              	.LCFI45:
 1507              	 .cfi_def_cfa_offset 8
 1508              	 .cfi_offset 7,-8
 1509              	 .cfi_offset 14,-4
 1510 0002 84B0     	 sub sp,sp,#16
 1511              	.LCFI46:
 1512              	 .cfi_def_cfa_offset 24
 1513 0004 00AF     	 add r7,sp,#0
 1514              	.LCFI47:
 1515              	 .cfi_def_cfa_register 7
 1516 0006 F860     	 str r0,[r7,#12]
 1517 0008 7A60     	 str r2,[r7,#4]
 1518 000a 0B23     	 mov r3,#11
 1519 000c FB18     	 add r3,r7,r3
 1520 000e 0A1C     	 add r2,r1,#0
 1521 0010 1A70     	 strb r2,[r3]
 441:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1522              	 .loc 2 441 0
 1523 0012 FA68     	 ldr r2,[r7,#12]
 1524 0014 8423     	 mov r3,#132
 1525 0016 5B00     	 lsl r3,r3,#1
 1526 0018 D358     	 ldr r3,[r2,r3]
 1527 001a 0B22     	 mov r2,#11
 1528 001c BA18     	 add r2,r7,r2
 1529 001e 1278     	 ldrb r2,[r2]
 1530 0020 0721     	 mov r1,#7
 1531 0022 9140     	 lsl r1,r1,r2
 1532 0024 0A1C     	 mov r2,r1
 1533 0026 D243     	 mvn r2,r2
 1534 0028 1A40     	 and r2,r3
 442:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 1535              	 .loc 2 442 0
 1536 002a 0B23     	 mov r3,#11
 1537 002c FB18     	 add r3,r7,r3
 1538 002e 1B78     	 ldrb r3,[r3]
 1539 0030 7968     	 ldr r1,[r7,#4]
 1540 0032 9940     	 lsl r1,r1,r3
 1541 0034 0B1C     	 mov r3,r1
 441:../Libraries/XMCLib/src/xmc_usic.c ****   channel->TBCTR = (uint32_t)((channel->TBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1542              	 .loc 2 441 0
 1543 0036 1A43     	 orr r2,r3
 1544 0038 111C     	 mov r1,r2
 1545 003a FA68     	 ldr r2,[r7,#12]
 1546 003c 8423     	 mov r3,#132
 1547 003e 5B00     	 lsl r3,r3,#1
 1548 0040 D150     	 str r1,[r2,r3]
 443:../Libraries/XMCLib/src/xmc_usic.c **** }
 1549              	 .loc 2 443 0
 1550 0042 BD46     	 mov sp,r7
 1551 0044 04B0     	 add sp,sp,#16
 1552              	 
 1553 0046 80BD     	 pop {r7,pc}
 1554              	 .cfi_endproc
 1555              	.LFE141:
 1557              	 .section .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer,"ax",%progbits
 1558              	 .align 2
 1559              	 .global XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
 1560              	 .code 16
 1561              	 .thumb_func
 1563              	XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:
 1564              	.LFB142:
 444:../Libraries/XMCLib/src/xmc_usic.c **** 
 445:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_CH_RXFIFO_SetInterruptNodePointer(XMC_USIC_CH_t *const channel,
 446:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const XMC_USIC_CH_RXFIFO_INTERRUPT_NODE_POINTER_t i
 447:../Libraries/XMCLib/src/xmc_usic.c ****                                                 const uint32_t service_request)
 448:../Libraries/XMCLib/src/xmc_usic.c **** {
 1565              	 .loc 2 448 0
 1566              	 .cfi_startproc
 1567 0000 80B5     	 push {r7,lr}
 1568              	.LCFI48:
 1569              	 .cfi_def_cfa_offset 8
 1570              	 .cfi_offset 7,-8
 1571              	 .cfi_offset 14,-4
 1572 0002 84B0     	 sub sp,sp,#16
 1573              	.LCFI49:
 1574              	 .cfi_def_cfa_offset 24
 1575 0004 00AF     	 add r7,sp,#0
 1576              	.LCFI50:
 1577              	 .cfi_def_cfa_register 7
 1578 0006 F860     	 str r0,[r7,#12]
 1579 0008 7A60     	 str r2,[r7,#4]
 1580 000a 0B23     	 mov r3,#11
 1581 000c FB18     	 add r3,r7,r3
 1582 000e 0A1C     	 add r2,r1,#0
 1583 0010 1A70     	 strb r2,[r3]
 449:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1584              	 .loc 2 449 0
 1585 0012 FA68     	 ldr r2,[r7,#12]
 1586 0014 8623     	 mov r3,#134
 1587 0016 5B00     	 lsl r3,r3,#1
 1588 0018 D358     	 ldr r3,[r2,r3]
 1589 001a 0B22     	 mov r2,#11
 1590 001c BA18     	 add r2,r7,r2
 1591 001e 1278     	 ldrb r2,[r2]
 1592 0020 0721     	 mov r1,#7
 1593 0022 9140     	 lsl r1,r1,r2
 1594 0024 0A1C     	 mov r2,r1
 1595 0026 D243     	 mvn r2,r2
 1596 0028 1A40     	 and r2,r3
 450:../Libraries/XMCLib/src/xmc_usic.c ****                    (service_request << (uint32_t)interrupt_node));
 1597              	 .loc 2 450 0
 1598 002a 0B23     	 mov r3,#11
 1599 002c FB18     	 add r3,r7,r3
 1600 002e 1B78     	 ldrb r3,[r3]
 1601 0030 7968     	 ldr r1,[r7,#4]
 1602 0032 9940     	 lsl r1,r1,r3
 1603 0034 0B1C     	 mov r3,r1
 449:../Libraries/XMCLib/src/xmc_usic.c ****   channel->RBCTR = (uint32_t)((channel->RBCTR & (~(uint32_t)(USIC_CH_INPR_Msk << (uint32_t)interrup
 1604              	 .loc 2 449 0
 1605 0036 1A43     	 orr r2,r3
 1606 0038 111C     	 mov r1,r2
 1607 003a FA68     	 ldr r2,[r7,#12]
 1608 003c 8623     	 mov r3,#134
 1609 003e 5B00     	 lsl r3,r3,#1
 1610 0040 D150     	 str r1,[r2,r3]
 451:../Libraries/XMCLib/src/xmc_usic.c **** }
 1611              	 .loc 2 451 0
 1612 0042 BD46     	 mov sp,r7
 1613 0044 04B0     	 add sp,sp,#16
 1614              	 
 1615 0046 80BD     	 pop {r7,pc}
 1616              	 .cfi_endproc
 1617              	.LFE142:
 1619              	 .section .text.XMC_USIC_Enable,"ax",%progbits
 1620              	 .align 2
 1621              	 .global XMC_USIC_Enable
 1622              	 .code 16
 1623              	 .thumb_func
 1625              	XMC_USIC_Enable:
 1626              	.LFB143:
 452:../Libraries/XMCLib/src/xmc_usic.c **** 
 453:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Enable(XMC_USIC_t *const usic)
 454:../Libraries/XMCLib/src/xmc_usic.c **** {
 1627              	 .loc 2 454 0
 1628              	 .cfi_startproc
 1629 0000 80B5     	 push {r7,lr}
 1630              	.LCFI51:
 1631              	 .cfi_def_cfa_offset 8
 1632              	 .cfi_offset 7,-8
 1633              	 .cfi_offset 14,-4
 1634 0002 82B0     	 sub sp,sp,#8
 1635              	.LCFI52:
 1636              	 .cfi_def_cfa_offset 16
 1637 0004 00AF     	 add r7,sp,#0
 1638              	.LCFI53:
 1639              	 .cfi_def_cfa_register 7
 1640 0006 7860     	 str r0,[r7,#4]
 455:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == USIC0)
 1641              	 .loc 2 455 0
 1642 0008 7B68     	 ldr r3,[r7,#4]
 1643 000a 104A     	 ldr r2,.L77
 1644 000c 9342     	 cmp r3,r2
 1645 000e 09D1     	 bne .L73
 456:../Libraries/XMCLib/src/xmc_usic.c ****   {
 457:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 458:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 1646              	 .loc 2 458 0
 1647 0010 0820     	 mov r0,#8
 1648 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 459:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC0));
 1649              	 .loc 2 459 0
 1650 0016 C046     	 mov r8,r8
 1651              	.L74:
 1652              	 .loc 2 459 0 is_stmt 0 discriminator 1
 1653 0018 0820     	 mov r0,#8
 1654 001a FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 1655 001e 031E     	 sub r3,r0,#0
 1656 0020 FAD1     	 bne .L74
 1657 0022 10E0     	 b .L72
 1658              	.L73:
 460:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 461:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 462:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 463:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC0));
 464:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 465:../Libraries/XMCLib/src/xmc_usic.c ****   }
 466:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 467:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC1)
 1659              	 .loc 2 467 0 is_stmt 1
 1660 0024 7B68     	 ldr r3,[r7,#4]
 1661 0026 0A4A     	 ldr r2,.L77+4
 1662 0028 9342     	 cmp r3,r2
 1663 002a 0CD1     	 bne .L72
 468:../Libraries/XMCLib/src/xmc_usic.c ****   {
 469:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED)
 470:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 1664              	 .loc 2 470 0
 1665 002c 8023     	 mov r3,#128
 1666 002e DB02     	 lsl r3,r3,#11
 1667 0030 181C     	 mov r0,r3
 1668 0032 FFF7FEFF 	 bl XMC_SCU_CLOCK_UngatePeripheralClock
 471:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC1));
 1669              	 .loc 2 471 0
 1670 0036 C046     	 mov r8,r8
 1671              	.L76:
 1672              	 .loc 2 471 0 is_stmt 0 discriminator 1
 1673 0038 8023     	 mov r3,#128
 1674 003a DB02     	 lsl r3,r3,#11
 1675 003c 181C     	 mov r0,r3
 1676 003e FFF7FEFF 	 bl XMC_SCU_CLOCK_IsPeripheralClockGated
 1677 0042 031E     	 sub r3,r0,#0
 1678 0044 F8D1     	 bne .L76
 1679              	.L72:
 472:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 473:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 474:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 475:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC1));
 476:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 477:../Libraries/XMCLib/src/xmc_usic.c ****   }
 478:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 479:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 480:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == USIC2)
 481:../Libraries/XMCLib/src/xmc_usic.c ****   {
 482:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 483:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_UngatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 484:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_CLOCK_IsPeripheralClockGated(XMC_SCU_PERIPHERAL_CLOCK_USIC2));
 485:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 486:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)
 487:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_DeassertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 488:../Libraries/XMCLib/src/xmc_usic.c ****     while (XMC_SCU_RESET_IsPeripheralResetAsserted(XMC_SCU_PERIPHERAL_RESET_USIC2));
 489:../Libraries/XMCLib/src/xmc_usic.c **** #endif 
 490:../Libraries/XMCLib/src/xmc_usic.c ****   }
 491:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 492:../Libraries/XMCLib/src/xmc_usic.c ****   else
 493:../Libraries/XMCLib/src/xmc_usic.c ****   {
 494:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_ASSERT("USIC module not available", 0/*Always*/);
 495:../Libraries/XMCLib/src/xmc_usic.c ****   }
 496:../Libraries/XMCLib/src/xmc_usic.c **** }
 1680              	 .loc 2 496 0 is_stmt 1
 1681 0046 BD46     	 mov sp,r7
 1682 0048 02B0     	 add sp,sp,#8
 1683              	 
 1684 004a 80BD     	 pop {r7,pc}
 1685              	.L78:
 1686              	 .align 2
 1687              	.L77:
 1688 004c 08000048 	 .word 1207959560
 1689 0050 08400048 	 .word 1207975944
 1690              	 .cfi_endproc
 1691              	.LFE143:
 1693              	 .section .text.XMC_USIC_Disable,"ax",%progbits
 1694              	 .align 2
 1695              	 .global XMC_USIC_Disable
 1696              	 .code 16
 1697              	 .thumb_func
 1699              	XMC_USIC_Disable:
 1700              	.LFB144:
 497:../Libraries/XMCLib/src/xmc_usic.c **** 
 498:../Libraries/XMCLib/src/xmc_usic.c **** void XMC_USIC_Disable(XMC_USIC_t *const usic)
 499:../Libraries/XMCLib/src/xmc_usic.c **** {
 1701              	 .loc 2 499 0
 1702              	 .cfi_startproc
 1703 0000 80B5     	 push {r7,lr}
 1704              	.LCFI54:
 1705              	 .cfi_def_cfa_offset 8
 1706              	 .cfi_offset 7,-8
 1707              	 .cfi_offset 14,-4
 1708 0002 82B0     	 sub sp,sp,#8
 1709              	.LCFI55:
 1710              	 .cfi_def_cfa_offset 16
 1711 0004 00AF     	 add r7,sp,#0
 1712              	.LCFI56:
 1713              	 .cfi_def_cfa_register 7
 1714 0006 7860     	 str r0,[r7,#4]
 500:../Libraries/XMCLib/src/xmc_usic.c ****   if (usic == (XMC_USIC_t *)USIC0)
 1715              	 .loc 2 500 0
 1716 0008 7B68     	 ldr r3,[r7,#4]
 1717 000a 094A     	 ldr r2,.L82
 1718 000c 9342     	 cmp r3,r2
 1719 000e 03D1     	 bne .L80
 501:../Libraries/XMCLib/src/xmc_usic.c ****   {
 502:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 503:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC0);
 504:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 505:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 506:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC0);
 1720              	 .loc 2 506 0
 1721 0010 0820     	 mov r0,#8
 1722 0012 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 1723 0016 08E0     	 b .L79
 1724              	.L80:
 507:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 508:../Libraries/XMCLib/src/xmc_usic.c ****   }
 509:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC1)  
 510:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC1)
 1725              	 .loc 2 510 0
 1726 0018 7B68     	 ldr r3,[r7,#4]
 1727 001a 064A     	 ldr r2,.L82+4
 1728 001c 9342     	 cmp r3,r2
 1729 001e 04D1     	 bne .L79
 511:../Libraries/XMCLib/src/xmc_usic.c ****   {
 512:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 513:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC1);
 514:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 515:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 516:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC1);
 1730              	 .loc 2 516 0
 1731 0020 8023     	 mov r3,#128
 1732 0022 DB02     	 lsl r3,r3,#11
 1733 0024 181C     	 mov r0,r3
 1734 0026 FFF7FEFF 	 bl XMC_SCU_CLOCK_GatePeripheralClock
 1735              	.L79:
 517:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 518:../Libraries/XMCLib/src/xmc_usic.c ****   }
 519:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 520:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(USIC2)  
 521:../Libraries/XMCLib/src/xmc_usic.c ****   else if (usic == (XMC_USIC_t *)USIC2)
 522:../Libraries/XMCLib/src/xmc_usic.c ****   {
 523:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(PERIPHERAL_RESET_SUPPORTED)  
 524:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_RESET_AssertPeripheralReset(XMC_SCU_PERIPHERAL_RESET_USIC2);
 525:../Libraries/XMCLib/src/xmc_usic.c **** #endif	
 526:../Libraries/XMCLib/src/xmc_usic.c **** #if defined(CLOCK_GATING_SUPPORTED) 
 527:../Libraries/XMCLib/src/xmc_usic.c ****     XMC_SCU_CLOCK_GatePeripheralClock(XMC_SCU_PERIPHERAL_CLOCK_USIC2);
 528:../Libraries/XMCLib/src/xmc_usic.c **** #endif
 529:../Libraries/XMCLib/src/xmc_usic.c ****   }
 530:../Libraries/XMCLib/src/xmc_usic.c **** #endif  
 531:../Libraries/XMCLib/src/xmc_usic.c ****   else
 532:../Libraries/XMCLib/src/xmc_usic.c ****   {
 533:../Libraries/XMCLib/src/xmc_usic.c **** 	  XMC_ASSERT("USIC module not available", 0/*Always*/);
 534:../Libraries/XMCLib/src/xmc_usic.c ****   }
 535:../Libraries/XMCLib/src/xmc_usic.c ****   
 536:../Libraries/XMCLib/src/xmc_usic.c **** }
 1736              	 .loc 2 536 0
 1737 002a BD46     	 mov sp,r7
 1738 002c 02B0     	 add sp,sp,#8
 1739              	 
 1740 002e 80BD     	 pop {r7,pc}
 1741              	.L83:
 1742              	 .align 2
 1743              	.L82:
 1744 0030 08000048 	 .word 1207959560
 1745 0034 08400048 	 .word 1207975944
 1746              	 .cfi_endproc
 1747              	.LFE144:
 1749              	 .text
 1750              	.Letext0:
 1751              	 .file 3 "d:\\software\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\machine\\_default_types.h"
 1752              	 .file 4 "d:\\software\\dave_4-4-2_64bit_2018-02-23\\dave_4-4-2_64bit_2018-02-23\\dave-ide-4.4.2-64bit\\dave-ide-4.4.2-64bit\\eclipse\\arm-gcc-49\\arm-none-eabi\\include\\stdint.h"
 1753              	 .file 5 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/CMSIS/Infineon/XMC1400_series/Include/XMC1400.h"
 1754              	 .file 6 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/XMCLib/inc/xmc1_scu.h"
 1755              	 .file 7 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/CMSIS/Include/cmsis_gcc.h"
 1756              	 .file 8 "C:/Users/Lenovo/workspace/dave_workspace/SOLAR_TOWER_XMC/Libraries/CMSIS/Infineon/XMC1400_series/Include/system_XMC1400.h"
DEFINED SYMBOLS
                            *ABS*:00000000 xmc_usic.c
    {standard input}:18     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 $t
    {standard input}:22     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000000 XMC_USIC_CH_SetInputTriggerCombinationMode
    {standard input}:78     .text.XMC_USIC_CH_SetInputTriggerCombinationMode:00000048 $d
    {standard input}:83     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 $t
    {standard input}:87     .text.XMC_USIC_CH_SetBRGInputClockSource:00000000 XMC_USIC_CH_SetBRGInputClockSource
    {standard input}:126    .text.XMC_USIC_CH_Enable:00000000 $t
    {standard input}:131    .text.XMC_USIC_CH_Enable:00000000 XMC_USIC_CH_Enable
    {standard input}:1625   .text.XMC_USIC_Enable:00000000 XMC_USIC_Enable
    {standard input}:211    .text.XMC_USIC_CH_Enable:00000064 $d
    {standard input}:220    .text.XMC_USIC_CH_Disable:00000000 $t
    {standard input}:225    .text.XMC_USIC_CH_Disable:00000000 XMC_USIC_CH_Disable
    {standard input}:260    .text.XMC_USIC_CH_SetBaudrate:00000000 $t
    {standard input}:265    .text.XMC_USIC_CH_SetBaudrate:00000000 XMC_USIC_CH_SetBaudrate
    {standard input}:424    .text.XMC_USIC_CH_SetBaudrate:000000e4 $d
    {standard input}:431    .text.XMC_USIC_CH_SetBaudrateEx:00000000 $t
    {standard input}:436    .text.XMC_USIC_CH_SetBaudrateEx:00000000 XMC_USIC_CH_SetBaudrateEx
    {standard input}:608    .text.XMC_USIC_CH_SetBaudrateEx:00000104 $d
    {standard input}:618    .text.XMC_USIC_CH_GetBaudrate:00000000 $t
    {standard input}:623    .text.XMC_USIC_CH_GetBaudrate:00000000 XMC_USIC_CH_GetBaudrate
    {standard input}:800    .text.XMC_USIC_CH_GetBaudrate:00000128 $d
    {standard input}:805    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 $t
    {standard input}:810    .text.XMC_USIC_CH_GetSCLKFrequency:00000000 XMC_USIC_CH_GetSCLKFrequency
    {standard input}:940    .text.XMC_USIC_CH_GetSCLKFrequency:000000d8 $d
    {standard input}:945    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 $t
    {standard input}:950    .text.XMC_USIC_CH_GetMCLKFrequency:00000000 XMC_USIC_CH_GetMCLKFrequency
    {standard input}:1050   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 $t
    {standard input}:1055   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000000 XMC_USIC_CH_ConfigExternalInputSignalToBRG
    {standard input}:1126   .text.XMC_USIC_CH_ConfigExternalInputSignalToBRG:00000060 $d
    {standard input}:1131   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 $t
    {standard input}:1136   .text.XMC_USIC_CH_TXFIFO_Configure:00000000 XMC_USIC_CH_TXFIFO_Configure
    {standard input}:1202   .text.XMC_USIC_CH_TXFIFO_Configure:00000054 $d
    {standard input}:1208   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 $t
    {standard input}:1213   .text.XMC_USIC_CH_RXFIFO_Configure:00000000 XMC_USIC_CH_RXFIFO_Configure
    {standard input}:1281   .text.XMC_USIC_CH_RXFIFO_Configure:0000005c $d
    {standard input}:1287   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1292   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit
    {standard input}:1357   .text.XMC_USIC_CH_TXFIFO_SetSizeTriggerLimit:00000054 $d
    {standard input}:1363   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 $t
    {standard input}:1368   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000000 XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit
    {standard input}:1433   .text.XMC_USIC_CH_RXFIFO_SetSizeTriggerLimit:00000054 $d
    {standard input}:1439   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 $t
    {standard input}:1444   .text.XMC_USIC_CH_SetInterruptNodePointer:00000000 XMC_USIC_CH_SetInterruptNodePointer
    {standard input}:1496   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1501   .text.XMC_USIC_CH_TXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_TXFIFO_SetInterruptNodePointer
    {standard input}:1558   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 $t
    {standard input}:1563   .text.XMC_USIC_CH_RXFIFO_SetInterruptNodePointer:00000000 XMC_USIC_CH_RXFIFO_SetInterruptNodePointer
    {standard input}:1620   .text.XMC_USIC_Enable:00000000 $t
    {standard input}:1688   .text.XMC_USIC_Enable:0000004c $d
    {standard input}:1694   .text.XMC_USIC_Disable:00000000 $t
    {standard input}:1699   .text.XMC_USIC_Disable:00000000 XMC_USIC_Disable
    {standard input}:1744   .text.XMC_USIC_Disable:00000030 $d
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
__aeabi_uidiv
XMC_SCU_CLOCK_GetPeripheralClockFrequency
__aeabi_idiv
__aeabi_ui2f
__aeabi_fdiv
__aeabi_fmul
__aeabi_f2uiz
XMC_SCU_CLOCK_UngatePeripheralClock
XMC_SCU_CLOCK_IsPeripheralClockGated
XMC_SCU_CLOCK_GatePeripheralClock
